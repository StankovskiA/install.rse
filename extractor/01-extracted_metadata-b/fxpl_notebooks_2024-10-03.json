{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 21:37:07"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/fxpl/notebooks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "fxpl",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-09-05T13:17:35Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-05-16T03:31:54Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "notebooks",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "fxpl/notebooks",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/fxpl/notebooks/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/fxpl/notebooks/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/fxpl/notebooks/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 354591
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 71672
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 36661
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 28246
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "R",
                "name": "R",
                "type": "Programming_language",
                "size": 13191
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/run_notebookAnalyzer_ccc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/run_post_processing_ccc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/paths.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/run_sccOutputAnalyzer.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/run_notebookAnalyzer_mod.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/run_pythonDumper.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Programs/build_and_test.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/language_inconsistencies.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/create_sym_links_nba.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/move_unparseable_missing-found.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/move_specified.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/move_unparseable_fxpl-stat.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/language_analysis.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/create_sym_links_scc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/get_last_output.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/count_param_usages.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/move_unparseable.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/create_file2hashesNE_if_nonexistent.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/find_keywords.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/create_sym_link.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/move_duplicates.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/print_most_common_snippets.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/move_forks.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/move_cloned_notebooks.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/clone_functions.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/reduce_large_images.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/clone_analysis_nba.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/modules_post_processing.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/list_duplicated_notebooks.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/get_notebook_sizes.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/Scripts/clone_analysis_scc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This repository contains the code and scripts used for analyzing notebooks as\npresented in the following papers:\n * \"Jupyter Notebooks on GitHub: Characteristics and Code Clones\" by K\u00e4ll\u00e9n, Sigvardsson and Wrigstad.\n * \"To Err or Not to Err?\" by K\u00e4ll\u00e9n and Wrigstad \n",
                "original_header": "Source Code and Scripts for Analyzing Jupyter Notebooks"
            },
            "confidence": 0.9568345646575366,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "All Java programs except `SccOutputAnalyzer` take the notebooks as input data.\nEach notebooks should be named `nb_<num>.ipynb`, where `<num>` is an integer.\nThe directory containing the `ipynb` files is specified with an argument to\n`NotebookAnalyzer`, and  `*Dumper` respectively. The directory may\ncontain non-notebook files as well. Notebook files can be stored in sub\ndirectories, since the programs recursively looks for files ending with `ipynb`\nin all sub directories. \nIf you want to use our input data (approximately 1 TB notebooks and\nthe accopanying notebook-repository mapping file), it can be downloaded from\nhttps://export.uppmax.uu.se/snic2020-6-136/notebooks.zip. The data set contains\na large number of groups of notebooks where all notebooks in a group\ncontain an identical sequence of code cells (where a code cell is considered\nidentical to its CMW clones). If you want to exclude all notebooks except one\nfrom each of these groups, you can also download\nhttps://export.uppmax.uu.se/snic2020-6-136/notebook_clones.csv and exclude all\nnotebooks listed in this file from the analysis.\n \n",
                "original_header": "Input data"
            },
            "confidence": 0.9573930297412943,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "An example of how to run the post processing of data produced when\n`NotebookAnalyzer` is given the flag `--ccc` can be found in\n`run_post_processing_ccc.sh` which is located in the root directory of this\nrepository. \n",
                "original_header": "Scripts"
            },
            "confidence": 0.98647643712572,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "As can be seen, most scripts are written in bash and require bash in order to\nrun. It may be possible to run the Java code in other environments, but it is\nonly tested on Linux. \nNote that some of the scripts are written in R. Accordingly, if you want to\nrun all post processing scripts, R must be installed. \nIf you want to use `NotebookAnalyzer` to list imported modules and frequently\ncalled functions (see below), you also need Python 3, including the modules that\ncan be expected to be commonly used. \n",
                "original_header": "Execution environment"
            },
            "confidence": 0.9984537656595919,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To build the Java code, enter the directory `Programs` and type: \nIf you also want to run the tests, instead (or additionally) type: \n",
                "original_header": "Building and testing the Java code"
            },
            "confidence": 0.9752850572811516,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Below is a description of how to execute the Java programs. Examples of commands\nfor running each program can be found in the scripts `run_notebookAnalyzer_ccc.sh`,\n`run_notebookAnalyzer_mod.sh`, `run_pythonDumper.sh` and `run_sccOutputAnalyzer.sh`\nrespectively.\n \n",
                "original_header": "Execution"
            },
            "confidence": 0.9920949659904519,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "When the notebook analyzer is run, `org.json` must be in the class path. A jar\nfile is provided in `Programs/external`. If you want to use the modules\nfunctionality or function listing, i.e. if you provide any of the arguments\n`--modules` and `functions=<FILE>`, also Programs/python must be in the class\npath. \n",
                "original_header": "Notebook Analyzer"
            },
            "confidence": 0.9999998097849992,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "When running the dumper programs, `org.json` must be in the class path. A jar\nfile is provided in `Programs/external`. \n",
                "original_header": "PythonDumper and PythonZipDumper"
            },
            "confidence": 0.9852581261337454,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The following scripts are intended to be used for post processing:\n * clone_analysis_nba.sh\n * clone_analysis_scc.sh\n * get_notebook_sizes.sh\n * language_analysis.sh\n * language_inconsistencies.sh\n * list_duplicated_notebooks.sh\n * print_most_common_snippets.sh\n * statistics_ccc_nba.R (with create_sym_links_nba.sh as preprocessing!)\n * statistics_ccc_scc.R (with create_sym_links_scc.sh as preprocessing!)\n * modules_post_processing.sh\n * count_param_usages.sh\n * find_keywords.sh \nAfter having executed the R scripts, you may want to run\n`reduce_large_images.sh`. \n",
                "original_header": "Scripts"
            },
            "confidence": 0.9984770676459238,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Before performing the steps listed below, you need to build the Java code, see\ndescription above.\n \n",
                "original_header": "Repeating our results"
            },
            "confidence": 0.9999862713268823,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you want to repeat the results of \"Jupyter Notebooks on Github:\nCharacteristics and Code Clones\" by K\u00e4ll\u00e9n, Sigvardsson and Wrigstad\" you need\nto do the following:\n1. Download all notebooks and the notebook-repository mapping file from\n   https://export.uppmax.uu.se/snic2020-6-136/notebooks.zip and unzip the file.\n2. Change the paths in `paths.sh` according to the inline comments.\n3. Execute `run_notebookAnalyzer_ccc.sh`.\n4. Execute `run_pythonDumper.sh`.\n5. Do the clone analysis with SourcererCC\n   (https://github.com/Mondego/SourcererCC) according to their instructions,\n   including concatenation of output files.\n6. Zip `results.pairs` and save the zip file with the name `clone.pairs.zip`.\n   Concatenate the files in the directory `files_stats` into one file named\n   `files.stats`. Place `clone.pairs.zip` and `files.stats` in the directory\n   that you have provided in `paths.sh`.\n7. Execute `run_sccOutputAnalyzer.sh`.\n8. Execute `run_post_processing_ccc.sh`. This must not be done before completion\n   of step 3 and 7. Check `outputNBA` and `outputSOA` for output. \nStep 3 can be done in parallel with steps 4-7.\n \n",
                "original_header": "Jupyter Notebooks on GitHub: Characteristics and Code Clones"
            },
            "confidence": 0.9890921568749718,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you want to repeat the results of \"To Err or Not to Err?\" by K\u00e4ll\u00e9n and\nWrigstad, you need to do the following:\n 1. Download all notebooks from\n    https://export.uppmax.uu.se/snic2020-6-136/notebooks.zip and unzip the file.\n 2. Download https://export.uppmax.uu.se/snic2020-6-136/notebook_clones.csv and\n    remove all notebooks listed in this file from the dataset, or move them to a\n    separate directory.\n 3. Update `nbPath` and `outputNBA` in `paths.sh` according to the instructions\n    in the file.\n 4. Make sure that all Python modules that are expected to be frequently\n    imported in the courpus are installed on your system. See the paper for a\n    list of the ten most frequently imported modules.\n 5. Execute `run_notebookAnalyzer_mod.sh`: `./run_notebookAnalyzer_mod.sh`. \n    If you get many output lines saying: \"Module `<name>` is not available. Some\n    function calls for this module will not be identified.\" for certain values\n    of `<name>`, you might want to interrupt the execution and install these\n    Python modules.\n 6. Create a symbolic link to your output directory (`outputNBA` in `paths.sh`)\n    The link must be named `Output` and placed in the same directory as the\n    directory `Scripts` (i.e. the root directory of this repository):\n    `ln -s <path-to-your-output-directory> Output`.\n 7. Enter the scripts directory and execute `modules_post_processing.sh`:\n    `cd Scripts`\n    `./modules_post_processing.sh`\n 8. If you also want to list the keywords used as module names (see Appendix C),\n    execute `find_keywords.sh`: `./find_keywords.sh`.\n 9. Step back to the root directory of the repository: `cd ..`.\n10. In `run_notebookAnalyzer_mod.sh`, replace `--modules` with\n    `--functions=$outputDir/functions_to_list.csv`.\n11. Execute `run_notebookAnalyzer_mod.sh` again.\n12. For each file $f named `<module>.<function>-calls<timestamp>.csv`, run:\n    `python3 Programs/python/risky_comb_finder.py Output/$f Output`.\n13. Remove the symbolic link created in step 4: `rm Output`. \nIf the files $f list calls to `numpy.array`, `pandas.read_csv`,\n`pandas.DataFrame`, `matplotlib.pyplot.plot`, `matplotlib.pyplot.show`,\n`numpy.arange` and `numpy.zeros`, `risky_comb_finder.py` (step 12) will identify\ncalls with smelly argument combinations in the lists of calls to the functions.\nRisky parameter combinations are not identified, and `risky_comb_finder.py`\nwill not identify any smelly argument combinations, for other functions. \n",
                "original_header": "To Err or Not to Err?"
            },
            "confidence": 0.9986171022279114,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Source Code and Scripts for Analyzing Jupyter Notebooks"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fxpl/notebooks/master/README.md"
        }
    ]
}