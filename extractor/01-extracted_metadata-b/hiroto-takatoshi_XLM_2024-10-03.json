{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:05:33"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/hiroto-takatoshi/XLM",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "hiroto-takatoshi",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-08-28T14:55:12Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2019-12-25T02:55:35Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": null,
                "type": "License",
                "name": "Other",
                "url": null,
                "spdx_id": "NOASSERTION"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Attribution-NonCommercial 4.0 International\n\n=======================================================================\n\nCreative Commons Corporation (\"Creative Commons\") is not a law firm and\ndoes not provide legal services or legal advice. Distribution of\nCreative Commons public licenses does not create a lawyer-client or\nother relationship. Creative Commons makes its licenses and related\ninformation available on an \"as-is\" basis. Creative Commons gives no\nwarranties regarding its licenses, any material licensed under their\nterms and conditions, or any related information. Creative Commons\ndisclaims all liability for damages resulting from their use to the\nfullest extent possible.\n\nUsing Creative Commons Public Licenses\n\nCreative Commons public licenses provide a standard set of terms and\nconditions that creators and other rights holders may use to share\noriginal works of authorship and other material subject to copyright\nand certain other rights specified in the public license below. The\nfollowing considerations are for informational purposes only, are not\nexhaustive, and do not form part of our licenses.\n\n     Considerations for licensors: Our public licenses are\n     intended for use by those authorized to give the public\n     permission to use material in ways otherwise restricted by\n     copyright and certain other rights. Our licenses are\n     irrevocable. Licensors should read and understand the terms\n     and conditions of the license they choose before applying it.\n     Licensors should also secure all rights necessary before\n     applying our licenses so that the public can reuse the\n     material as expected. Licensors should clearly mark any\n     material not subject to the license. This includes other CC-\n     licensed material, or material used under an exception or\n     limitation to copyright. More considerations for licensors:\n     wiki.creativecommons.org/Considerations_for_licensors\n\n     Considerations for the public: By using one of our public\n     licenses, a licensor grants the public permission to use the\n     licensed material under specified terms and conditions. If\n     the licensor's permission is not necessary for any reason--for\n     example, because of any applicable exception or limitation to\n     copyright--then that use is not regulated by the license. Our\n     licenses grant only permissions under copyright and certain\n     other rights that a licensor has authority to grant. Use of\n     the licensed material may still be restricted for other\n     reasons, including because others have copyright or other\n     rights in the material. A licensor may make special requests,\n     such as asking that all changes be marked or described.\n     Although not required by our licenses, you are encouraged to\n     respect those requests where reasonable. More_considerations\n     for the public:\n\twiki.creativecommons.org/Considerations_for_licensees\n\n=======================================================================\n\nCreative Commons Attribution-NonCommercial 4.0 International Public\nLicense\n\nBy exercising the Licensed Rights (defined below), You accept and agree\nto be bound by the terms and conditions of this Creative Commons\nAttribution-NonCommercial 4.0 International Public License (\"Public\nLicense\"). To the extent this Public License may be interpreted as a\ncontract, You are granted the Licensed Rights in consideration of Your\nacceptance of these terms and conditions, and the Licensor grants You\nsuch rights in consideration of benefits the Licensor receives from\nmaking the Licensed Material available under these terms and\nconditions.\n\nSection 1 -- Definitions.\n\n  a. Adapted Material means material subject to Copyright and Similar\n     Rights that is derived from or based upon the Licensed Material\n     and in which the Licensed Material is translated, altered,\n     arranged, transformed, or otherwise modified in a manner requiring\n     permission under the Copyright and Similar Rights held by the\n     Licensor. For purposes of this Public License, where the Licensed\n     Material is a musical work, performance, or sound recording,\n     Adapted Material is always produced where the Licensed Material is\n     synched in timed relation with a moving image.\n\n  b. Adapter's License means the license You apply to Your Copyright\n     and Similar Rights in Your contributions to Adapted Material in\n     accordance with the terms and conditions of this Public License.\n\n  c. Copyright and Similar Rights means copyright and/or similar rights\n     closely related to copyright including, without limitation,\n     performance, broadcast, sound recording, and Sui Generis Database\n     Rights, without regard to how the rights are labeled or\n     categorized. For purposes of this Public License, the rights\n     specified in Section 2(b)(1)-(2) are not Copyright and Similar\n     Rights.\n  d. Effective Technological Measures means those measures that, in the\n     absence of proper authority, may not be circumvented under laws\n     fulfilling obligations under Article 11 of the WIPO Copyright\n     Treaty adopted on December 20, 1996, and/or similar international\n     agreements.\n\n  e. Exceptions and Limitations means fair use, fair dealing, and/or\n     any other exception or limitation to Copyright and Similar Rights\n     that applies to Your use of the Licensed Material.\n\n  f. Licensed Material means the artistic or literary work, database,\n     or other material to which the Licensor applied this Public\n     License.\n\n  g. Licensed Rights means the rights granted to You subject to the\n     terms and conditions of this Public License, which are limited to\n     all Copyright and Similar Rights that apply to Your use of the\n     Licensed Material and that the Licensor has authority to license.\n\n  h. Licensor means the individual(s) or entity(ies) granting rights\n     under this Public License.\n\n  i. NonCommercial means not primarily intended for or directed towards\n     commercial advantage or monetary compensation. For purposes of\n     this Public License, the exchange of the Licensed Material for\n     other material subject to Copyright and Similar Rights by digital\n     file-sharing or similar means is NonCommercial provided there is\n     no payment of monetary compensation in connection with the\n     exchange.\n\n  j. Share means to provide material to the public by any means or\n     process that requires permission under the Licensed Rights, such\n     as reproduction, public display, public performance, distribution,\n     dissemination, communication, or importation, and to make material\n     available to the public including in ways that members of the\n     public may access the material from a place and at a time\n     individually chosen by them.\n\n  k. Sui Generis Database Rights means rights other than copyright\n     resulting from Directive 96/9/EC of the European Parliament and of\n     the Council of 11 March 1996 on the legal protection of databases,\n     as amended and/or succeeded, as well as other essentially\n     equivalent rights anywhere in the world.\n\n  l. You means the individual or entity exercising the Licensed Rights\n     under this Public License. Your has a corresponding meaning.\n\nSection 2 -- Scope.\n\n  a. License grant.\n\n       1. Subject to the terms and conditions of this Public License,\n          the Licensor hereby grants You a worldwide, royalty-free,\n          non-sublicensable, non-exclusive, irrevocable license to\n          exercise the Licensed Rights in the Licensed Material to:\n\n            a. reproduce and Share the Licensed Material, in whole or\n               in part, for NonCommercial purposes only; and\n\n            b. produce, reproduce, and Share Adapted Material for\n               NonCommercial purposes only.\n\n       2. Exceptions and Limitations. For the avoidance of doubt, where\n          Exceptions and Limitations apply to Your use, this Public\n          License does not apply, and You do not need to comply with\n          its terms and conditions.\n\n       3. Term. The term of this Public License is specified in Section\n          6(a).\n\n       4. Media and formats; technical modifications allowed. The\n          Licensor authorizes You to exercise the Licensed Rights in\n          all media and formats whether now known or hereafter created,\n          and to make technical modifications necessary to do so. The\n          Licensor waives and/or agrees not to assert any right or\n          authority to forbid You from making technical modifications\n          necessary to exercise the Licensed Rights, including\n          technical modifications necessary to circumvent Effective\n          Technological Measures. For purposes of this Public License,\n          simply making modifications authorized by this Section 2(a)\n          (4) never produces Adapted Material.\n\n       5. Downstream recipients.\n\n            a. Offer from the Licensor -- Licensed Material. Every\n               recipient of the Licensed Material automatically\n               receives an offer from the Licensor to exercise the\n               Licensed Rights under the terms and conditions of this\n               Public License.\n\n            b. No downstream restrictions. You may not offer or impose\n               any additional or different terms or conditions on, or\n               apply any Effective Technological Measures to, the\n               Licensed Material if doing so restricts exercise of the\n               Licensed Rights by any recipient of the Licensed\n               Material.\n\n       6. No endorsement. Nothing in this Public License constitutes or\n          may be construed as permission to assert or imply that You\n          are, or that Your use of the Licensed Material is, connected\n          with, or sponsored, endorsed, or granted official status by,\n          the Licensor or others designated to receive attribution as\n          provided in Section 3(a)(1)(A)(i).\n\n  b. Other rights.\n\n       1. Moral rights, such as the right of integrity, are not\n          licensed under this Public License, nor are publicity,\n          privacy, and/or other similar personality rights; however, to\n          the extent possible, the Licensor waives and/or agrees not to\n          assert any such rights held by the Licensor to the limited\n          extent necessary to allow You to exercise the Licensed\n          Rights, but not otherwise.\n\n       2. Patent and trademark rights are not licensed under this\n          Public License.\n\n       3. To the extent possible, the Licensor waives any right to\n          collect royalties from You for the exercise of the Licensed\n          Rights, whether directly or through a collecting society\n          under any voluntary or waivable statutory or compulsory\n          licensing scheme. In all other cases the Licensor expressly\n          reserves any right to collect such royalties, including when\n          the Licensed Material is used other than for NonCommercial\n          purposes.\n\nSection 3 -- License Conditions.\n\nYour exercise of the Licensed Rights is expressly made subject to the\nfollowing conditions.\n\n  a. Attribution.\n\n       1. If You Share the Licensed Material (including in modified\n          form), You must:\n\n            a. retain the following if it is supplied by the Licensor\n               with the Licensed Material:\n\n                 i. identification of the creator(s) of the Licensed\n                    Material and any others designated to receive\n                    attribution, in any reasonable manner requested by\n                    the Licensor (including by pseudonym if\n                    designated);\n\n                ii. a copyright notice;\n\n               iii. a notice that refers to this Public License;\n\n                iv. a notice that refers to the disclaimer of\n                    warranties;\n\n                 v. a URI or hyperlink to the Licensed Material to the\n                    extent reasonably practicable;\n\n            b. indicate if You modified the Licensed Material and\n               retain an indication of any previous modifications; and\n\n            c. indicate the Licensed Material is licensed under this\n               Public License, and include the text of, or the URI or\n               hyperlink to, this Public License.\n\n       2. You may satisfy the conditions in Section 3(a)(1) in any\n          reasonable manner based on the medium, means, and context in\n          which You Share the Licensed Material. For example, it may be\n          reasonable to satisfy the conditions by providing a URI or\n          hyperlink to a resource that includes the required\n          information.\n\n       3. If requested by the Licensor, You must remove any of the\n          information required by Section 3(a)(1)(A) to the extent\n          reasonably practicable.\n\n       4. If You Share Adapted Material You produce, the Adapter's\n          License You apply must not prevent recipients of the Adapted\n          Material from complying with this Public License.\n\nSection 4 -- Sui Generis Database Rights.\n\nWhere the Licensed Rights include Sui Generis Database Rights that\napply to Your use of the Licensed Material:\n\n  a. for the avoidance of doubt, Section 2(a)(1) grants You the right\n     to extract, reuse, reproduce, and Share all or a substantial\n     portion of the contents of the database for NonCommercial purposes\n     only;\n\n  b. if You include all or a substantial portion of the database\n     contents in a database in which You have Sui Generis Database\n     Rights, then the database in which You have Sui Generis Database\n     Rights (but not its individual contents) is Adapted Material; and\n\n  c. You must comply with the conditions in Section 3(a) if You Share\n     all or a substantial portion of the contents of the database.\n\nFor the avoidance of doubt, this Section 4 supplements and does not\nreplace Your obligations under this Public License where the Licensed\nRights include other Copyright and Similar Rights.\n\nSection 5 -- Disclaimer of Warranties and Limitation of Liability.\n\n  a. UNLESS OTHERWISE SEPARATELY UNDERTAKEN BY THE LICENSOR, TO THE\n     EXTENT POSSIBLE, THE LICENSOR OFFERS THE LICENSED MATERIAL AS-IS\n     AND AS-AVAILABLE, AND MAKES NO REPRESENTATIONS OR WARRANTIES OF\n     ANY KIND CONCERNING THE LICENSED MATERIAL, WHETHER EXPRESS,\n     IMPLIED, STATUTORY, OR OTHER. THIS INCLUDES, WITHOUT LIMITATION,\n     WARRANTIES OF TITLE, MERCHANTABILITY, FITNESS FOR A PARTICULAR\n     PURPOSE, NON-INFRINGEMENT, ABSENCE OF LATENT OR OTHER DEFECTS,\n     ACCURACY, OR THE PRESENCE OR ABSENCE OF ERRORS, WHETHER OR NOT\n     KNOWN OR DISCOVERABLE. WHERE DISCLAIMERS OF WARRANTIES ARE NOT\n     ALLOWED IN FULL OR IN PART, THIS DISCLAIMER MAY NOT APPLY TO YOU.\n\n  b. TO THE EXTENT POSSIBLE, IN NO EVENT WILL THE LICENSOR BE LIABLE\n     TO YOU ON ANY LEGAL THEORY (INCLUDING, WITHOUT LIMITATION,\n     NEGLIGENCE) OR OTHERWISE FOR ANY DIRECT, SPECIAL, INDIRECT,\n     INCIDENTAL, CONSEQUENTIAL, PUNITIVE, EXEMPLARY, OR OTHER LOSSES,\n     COSTS, EXPENSES, OR DAMAGES ARISING OUT OF THIS PUBLIC LICENSE OR\n     USE OF THE LICENSED MATERIAL, EVEN IF THE LICENSOR HAS BEEN\n     ADVISED OF THE POSSIBILITY OF SUCH LOSSES, COSTS, EXPENSES, OR\n     DAMAGES. WHERE A LIMITATION OF LIABILITY IS NOT ALLOWED IN FULL OR\n     IN PART, THIS LIMITATION MAY NOT APPLY TO YOU.\n\n  c. The disclaimer of warranties and limitation of liability provided\n     above shall be interpreted in a manner that, to the extent\n     possible, most closely approximates an absolute disclaimer and\n     waiver of all liability.\n\nSection 6 -- Term and Termination.\n\n  a. This Public License applies for the term of the Copyright and\n     Similar Rights licensed here. However, if You fail to comply with\n     this Public License, then Your rights under this Public License\n     terminate automatically.\n\n  b. Where Your right to use the Licensed Material has terminated under\n     Section 6(a), it reinstates:\n\n       1. automatically as of the date the violation is cured, provided\n          it is cured within 30 days of Your discovery of the\n          violation; or\n\n       2. upon express reinstatement by the Licensor.\n\n     For the avoidance of doubt, this Section 6(b) does not affect any\n     right the Licensor may have to seek remedies for Your violations\n     of this Public License.\n\n  c. For the avoidance of doubt, the Licensor may also offer the\n     Licensed Material under separate terms or conditions or stop\n     distributing the Licensed Material at any time; however, doing so\n     will not terminate this Public License.\n\n  d. Sections 1, 5, 6, 7, and 8 survive termination of this Public\n     License.\n\nSection 7 -- Other Terms and Conditions.\n\n  a. The Licensor shall not be bound by any additional or different\n     terms or conditions communicated by You unless expressly agreed.\n\n  b. Any arrangements, understandings, or agreements regarding the\n     Licensed Material not stated herein are separate from and\n     independent of the terms and conditions of this Public License.\n\nSection 8 -- Interpretation.\n\n  a. For the avoidance of doubt, this Public License does not, and\n     shall not be interpreted to, reduce, limit, restrict, or impose\n     conditions on any use of the Licensed Material that could lawfully\n     be made without permission under this Public License.\n\n  b. To the extent possible, if any provision of this Public License is\n     deemed unenforceable, it shall be automatically reformed to the\n     minimum extent necessary to make it enforceable. If the provision\n     cannot be reformed, it shall be severed from this Public License\n     without affecting the enforceability of the remaining terms and\n     conditions.\n\n  c. No term or condition of this Public License will be waived and no\n     failure to comply consented to unless expressly agreed to by the\n     Licensor.\n\n  d. Nothing in this Public License constitutes or may be interpreted\n     as a limitation upon, or waiver of, any privileges and immunities\n     that apply to the Licensor or You, including from the legal\n     processes of any jurisdiction or authority.\n\n=======================================================================\n\nCreative Commons is not a party to its public\nlicenses. Notwithstanding, Creative Commons may elect to apply one of\nits public licenses to material it publishes and in those instances\nwill be considered the \u201cLicensor.\u201d The text of the Creative Commons\npublic licenses is dedicated to the public domain under the CC0 Public\nDomain Dedication. Except for the limited purpose of indicating that\nmaterial is shared under a Creative Commons public license or as\notherwise permitted by the Creative Commons policies published at\ncreativecommons.org/policies, Creative Commons does not authorize the\nuse of the trademark \"Creative Commons\" or any other trademark or logo\nof Creative Commons without its prior written consent including,\nwithout limitation, in connection with any unauthorized modifications\nto any of its public licenses or any other arrangements,\nunderstandings, or agreements concerning use of licensed material. For\nthe avoidance of doubt, this paragraph does not form part of the\npublic licenses.\n\nCreative Commons may be contacted at creativecommons.org.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/LICENSE"
        },
        {
            "result": {
                "value": "See the [LICENSE](LICENSE) file for more details.\n\n",
                "type": "Text_excerpt",
                "original_header": "License",
                "parent_header": [
                    "XLM for defects"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "An attempt to deploy bert on bug detection tasks",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "PyTorch original implementation of [Cross-lingual Language Model Pretraining](https://arxiv.org/abs/1901.07291). Includes:\n- [Monolingual language model pretraining (BERT)](#i-monolingual-language-model-pretraining-bert)\n- [Cross-lingual language model pretraining (XLM)](#ii-cross-lingual-language-model-pretraining-xlm)\n- [Applications: Supervised / Unsupervised MT (NMT / UNMT)](#iii-applications-supervised--unsupervised-mt)\n- [Applications: Cross-lingual text classification (XNLI)](#iv-applications-cross-lingual-text-classification-xnli)\n- [Product-Key Memory Layers (PKM)](#v-product-key-memory-layers-pkm) \n",
                "original_header": "XLM for defects"
            },
            "confidence": 0.9558567914191318,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "You can now **fine-tune the pretrained model** on one of the English GLUE tasks using this config:\n```\n# Config used for fine-tuning our pretrained English BERT model (mlm_en_2048.pth)\npython glue-xnli.py\n--exp_name test_xlm_en_glue              # experiment name\n--dump_path ./dumped                     # where to store the experiment\n--model_path mlm_en_2048.pth             # model location\n--data_path $OUTPATH                     # data location\n--transfer_tasks MNLI-m,QNLI,SST-2       # transfer tasks (GLUE tasks)\n--optimizer_e adam,lr=0.000025           # optimizer of projection (lr \\in [0.000005, 0.000025, 0.000125])\n--optimizer_p adam,lr=0.000025           # optimizer of projection (lr \\in [0.000005, 0.000025, 0.000125])\n--finetune_layers \"0:_1\"                 # fine-tune all layers\n--batch_size 8                           # batch size (\\in [4, 8])\n--n_epochs 250                           # number of epochs\n--epoch_size 20000                       # number of sentences per epoch (relatively small on purpose)\n--max_len 256                            # max number of words in sentences\n--max_vocab -1                           # max number of words in vocab\n```\n**Tips**: You should sweep over the batch size (4 and 8) and the learning rate (5e-6, 2.5e-5, 1.25e-4) parameters.\n \n",
                "original_header": "3. Fine-tune a pretrained model on GLUE tasks"
            },
            "confidence": 0.9111871924564671,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "[XLM-R](https://arxiv.org/abs/1911.02116) is the new state-of-the-art XLM model. XLM-R shows the possibility of training one model for many languages while not sacrificing per-language performance. It is trained on 2.5 TB of CommonCrawl data, in 100 languages. You can load XLM-R from torch.hub (Pytorch >= 1.1): \n",
                "original_header": "**XLM-R (new model)**"
            },
            "confidence": 0.982234958476173,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "We provide large pretrained models for the 15 languages of [XNLI](https://github.com/facebookresearch/XNLI), and two other models in [17 and 100 languages](#the-17-and-100-languages). \n",
                "original_header": "Pretrained cross-lingual language models"
            },
            "confidence": 0.9288387751643963,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "**Tips**: You can also pretrain your model with MLM-only, and then continue training with MLM+TLM with the *--reload_model* parameter. \n",
                "original_header": "2. Train the XLM model"
            },
            "confidence": 0.9262885027580411,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The English-French, English-German and English-Romanian models are the ones we used in the paper for MT pretraining. They are trained with monolingual data only, with the MLM objective. If you use these models, you should use the same data preprocessing / BPE codes to preprocess your data. See the preprocessing commands in [get-data-nmt.sh](https://github.com/facebookresearch/XLM/blob/master/get-data-nmt.sh). \n",
                "original_header": "Pretrained XLM(MLM) models"
            },
            "confidence": 0.9604877779096077,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If parallel data is available, the TLM objective can be used with `--mlm_steps 'en-fr'`. To train with both the MLM and TLM objective, you can use `--mlm_steps 'en,fr,en-fr'`. We provide models trained with the MLM objective for English-French, English-German and English-Romanian, along with the BPE codes and vocabulary used to preprocess the data.\n \n",
                "original_header": "Pretrain a language model (with MLM)"
            },
            "confidence": 0.9671694578562596,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "You can now use the pretrained model for Machine Translation. To download a model trained with the command above on the MLM objective, and the corresponding BPE codes, run:\n```\nwget -c https://dl.fbaipublicfiles.com/XLM/mlm_enfr_1024.pth\n```\nIf you preprocessed your dataset in `./data/processed/en-fr/` with the provided BPE codes `codes_enfr` and vocabulary `vocab_enfr`, you can pretrain your NMT model with `mlm_enfr_1024.pth` and run:\n```\npython train.py\n\n## main parameters\n--exp_name unsupMT_enfr                                       # experiment name\n--dump_path ./dumped/                                         # where to store the experiment\n--reload_model 'mlm_enfr_1024.pth,mlm_enfr_1024.pth'          # model to reload for encoder,decoder\n\n## data location / training objective\n--data_path ./data/processed/en-fr/                           # data location\n--lgs 'en-fr'                                                 # considered languages\n--ae_steps 'en,fr'                                            # denoising auto-encoder training steps\n--bt_steps 'en-fr-en,fr-en-fr'                                # back-translation steps\n--word_shuffle 3                                              # noise for auto-encoding loss\n--word_dropout 0.1                                            # noise for auto-encoding loss\n--word_blank 0.1                                              # noise for auto-encoding loss\n--lambda_ae '0:1,100000:0.1,300000:0'                         # scheduling on the auto-encoding coefficient\n\n## transformer parameters\n--encoder_only false                                          # use a decoder for MT\n--emb_dim 1024                                                # embeddings / model dimension\n--n_layers 6                                                  # number of layers\n--n_heads 8                                                   # number of heads\n--dropout 0.1                                                 # dropout\n--attention_dropout 0.1                                       # attention dropout\n--gelu_activation true                                        # GELU instead of ReLU\n\n## optimization\n--tokens_per_batch 2000                                       # use batches with a fixed number of words\n--batch_size 32                                               # batch size (for back-translation)\n--bptt 256                                                    # sequence length\n--optimizer adam_inverse_sqrt,beta1=0.9,beta2=0.98,lr=0.0001  # optimizer\n--epoch_size 200000                                           # number of sentences per epoch\n--eval_bleu true                                              # also evaluate the BLEU score\n--stopping_criterion 'valid_en-fr_mt_bleu,10'                 # validation metric (when to save the best model)\n--validation_metrics 'valid_en-fr_mt_bleu'                    # end experiment if stopping criterion does not improve\n```\nThe parameters of your Transformer model have to be identical to the ones used for pretraining (or you will have to slightly modify the code to only reload existing parameters). After 8 epochs on 8 GPUs, the above command should give you something like this:\n```\nepoch               ->     7\nvalid_fr-en_mt_bleu -> 28.36\nvalid_en-fr_mt_bleu -> 30.50\ntest_fr-en_mt_bleu  -> 34.02\ntest_en-fr_mt_bleu  -> 36.62\n```\n \n",
                "original_header": "Train on unsupervised MT from a pretrained model"
            },
            "confidence": 0.909868411699243,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "XLMs can be used to build cross-lingual classifiers. After fine-tuning an XLM model on an English training corpus for instance (e.g. of sentiment analysis, natural language inference), the model is still able to make accurate predictions at test time in other languages, for which there is very little or no training data. This approach is usually referred to as \"zero-shot cross-lingual classification\".\n \n",
                "original_header": "IV. Applications: Cross-lingual text classification (XNLI)"
            },
            "confidence": 0.9698017980863811,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "XLM also implements the Product-Key Memory layer (PKM) described in [[4]](https://arxiv.org/abs/1907.05242). To add a memory in (for instance) the layers 4 and 7 of an encoder, you can simply provide `--use_memory true --mem_enc_positions 4,7` as argument of `train.py` (and similarly for `--mem_dec_positions` and the decoder). All memory layer parameters can be found [here](https://github.com/facebookresearch/XLM/blob/master/src/model/memory/memory.py#L225).\nA minimalist and simple implementation of the PKM layer, that uses the same configuration as in the paper, can be found in this **[ipython notebook](https://github.com/facebookresearch/XLM/blob/master/PKM-layer.ipynb)**. \n",
                "original_header": "V. Product-Key Memory Layers (PKM)"
            },
            "confidence": 0.9733299844362527,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "XLM",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "hiroto-takatoshi/XLM",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/hiroto-takatoshi/XLM/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/hiroto-takatoshi/XLM/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/hiroto-takatoshi/XLM/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 266122
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 40647
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 23423
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Perl",
                "name": "Perl",
                "type": "Programming_language",
                "size": 5233
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Code of Conduct\n\nFacebook has adopted a Code of Conduct that we expect project participants to adhere to.\nPlease read the [full text](https://code.fb.com/codeofconduct/)\nso that you can understand what actions will and will not be tolerated.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/CODE_OF_CONDUCT.md"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/prepare-xnli.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/get-data-wiki.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/get-data-glue.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/install-tools.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/get-data-para.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/prepare-glue.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/get-data-nmt.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/get-data-xnli.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/tools/tokenize.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/PKM-layer.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/PKM-layer.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/generate-embeddings.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/generate-embeddings.ipynb"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "# Contributing to this repo\n\n## Pull Requests\n\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\n## License\nBy contributing to this repo, you agree that your contributions will be licensed\nunder the LICENSE file in the root directory of this source tree.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/CONTRIBUTING.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "- Python 3\n- [NumPy](http://www.numpy.org/)\n- [PyTorch](http://pytorch.org/) (currently tested on version 0.4 and 1.0)\n- [fastBPE](https://github.com/facebookresearch/XLM/tree/master/tools#fastbpe) (generate and apply BPE codes)\n- [Moses](https://github.com/facebookresearch/XLM/tree/master/tools#tokenizers) (scripts to clean and tokenize text only - no installation required)\n- [Apex](https://github.com/nvidia/apex#quick-start) (for fp16 training)\n\n",
                "type": "Text_excerpt",
                "original_header": "Dependencies",
                "parent_header": [
                    "XLM for defects"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "First, get the monolingual data (English Wikipedia, the [TBC corpus](https://yknzhu.wixsite.com/mbweb) is not hosted anymore).\n```\n# Download and tokenize Wikipedia data in 'data/wiki/en.{train,valid,test}'\n# Note: the tokenization includes lower-casing and accent-removal\n./get-data-wiki.sh en\n```\n\n[Install fastBPE](https://github.com/facebookresearch/XLM/tree/master/tools#fastbpe) and **learn BPE** vocabulary (with 30,000 codes here):\n```\nOUTPATH=data/processed/XLM_en/30k  # path where processed files will be stored\nFASTBPE=tools/fastBPE/fast  # path to the fastBPE tool\n\n# create output path\nmkdir -p $OUTPATH\n\n# learn bpe codes on the training set (or only use a subset of it)\n$FASTBPE learnbpe 30000 data/wiki/txt/en.train > $OUTPATH/codes\n```\n\nNow **apply BPE** tokenization to train/valid/test files:\n```\n$FASTBPE applybpe $OUTPATH/train.en data/wiki/txt/en.train $OUTPATH/codes &\n$FASTBPE applybpe $OUTPATH/valid.en data/wiki/txt/en.valid $OUTPATH/codes &\n$FASTBPE applybpe $OUTPATH/test.en data/wiki/txt/en.test $OUTPATH/codes &\n```\n\nand get the post-BPE vocabulary:\n```\ncat $OUTPATH/train.en | $FASTBPE getvocab - > $OUTPATH/vocab &\n```\n\n**Binarize the data** to limit the size of the data we load in memory:\n```\n# This will create three files: $OUTPATH/{train,valid,test}.en.pth\n# After that we're all set\npython preprocess.py $OUTPATH/vocab $OUTPATH/train.en &\npython preprocess.py $OUTPATH/vocab $OUTPATH/valid.en &\npython preprocess.py $OUTPATH/vocab $OUTPATH/test.en &\n```\n",
                "type": "Text_excerpt",
                "original_header": "1. Preparing the data",
                "parent_header": [
                    "XLM for defects",
                    "II. Cross-lingual language model pretraining (XLM)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To [train with multiple GPUs](https://github.com/facebookresearch/XLM#how-can-i-run-experiments-on-multiple-gpus) use:\n```\nexport NGPU=8; python -m torch.distributed.launch --nproc_per_node=$NGPU train.py\n``` \n",
                "original_header": "2. Train the BERT model"
            },
            "confidence": 0.9051377762873599,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "In addition to the **train.py** script, we provide a complementary script **glue-xnli.py** to fine-tune a model on either GLUE or XNLI. \n",
                "original_header": "3. Fine-tune a pretrained model on GLUE tasks"
            },
            "confidence": 0.904853001435187,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Note that we provide a [tokenizer script](https://github.com/facebookresearch/XLM/blob/master/tools/tokenize.sh):\n```\nlg=en\ncat my_file.$lg | ./tools/tokenize.sh $lg > my_tokenized_file.$lg &\n```\n \nFor other language pairs, look at the [OPUS collection](http://opus.nlpl.eu/), and modify the get-data-para.sh script [here)(https://github.com/facebookresearch/XLM/blob/master/get-data-para.sh#L179-L180) to add your own language pair. \n",
                "original_header": "Train your own XLM model with MLM or MLM+TLM"
            },
            "confidence": 0.9499418484589016,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This script will apply BPE using the XNLI15 bpe codes, and binarize data.\n```\n./prepare-xnli.sh\n```\n \n",
                "original_header": "Preprocess data"
            },
            "confidence": 0.9754547279150575,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "download": [
        {
            "result": {
                "value": "To download the data required for the unsupervised MT experiments, simply run:\n\n```\ngit clone https://github.com/facebookresearch/XLM.git\ncd XLM\n```\n\nAnd one of the three commands below:\n\n```\n./get-data-nmt.sh --src en --tgt fr\n./get-data-nmt.sh --src de --tgt en\n./get-data-nmt.sh --src en --tgt ro\n```\n\nfor English-French, German-English, or English-Romanian experiments. The script will successively:\n- download Moses scripts, download and compile fastBPE\n- download, extract, tokenize, apply BPE to monolingual and parallel test data\n- binarize all datasets\n\nIf you want to use our pretrained models, you need to have an exactly identical vocabulary. Since small differences can happen during preprocessing, we recommend that you use our BPE codes and vocabulary (although you should get something almost identical if you learn the codes and compute the vocabulary yourself). This will ensure that the vocabulary of your preprocessed data perfectly matches the one of our pretrained models, and that there is not a word / index mismatch. To do so, simply run:\n\n```\nwget https://dl.fbaipublicfiles.com/XLM/codes_enfr\nwget https://dl.fbaipublicfiles.com/XLM/vocab_enfr\n\n./get-data-nmt.sh --src en --tgt fr --reload_codes codes_enfr --reload_vocab vocab_enfr\n```\n\n`get-data-nmt.sh` contains a few parameters defined at the beginning of the file:\n- `N_MONO` number of monolingual sentences for each language (default 5000000)\n- `CODES` number of BPE codes (default 60000)\n- `N_THREADS` number of threads in data preprocessing (default 16)\n\nThe default number of monolingual data is 5M sentences, but using more monolingual data will significantly improve the quality of pretrained models. In practice, the models we release for MT are trained on all NewsCrawl data available, i.e. about 260M, 200M and 65M sentences for German, English and French respectively.\n\nThe script should output a data summary that contains the location of all files required to start experiments:\n\n```\n===== Data summary\nMonolingual training data:\n    en: ./data/processed/en-fr/train.en.pth\n    fr: ./data/processed/en-fr/train.fr.pth\nMonolingual validation data:\n    en: ./data/processed/en-fr/valid.en.pth\n    fr: ./data/processed/en-fr/valid.fr.pth\nMonolingual test data:\n    en: ./data/processed/en-fr/test.en.pth\n    fr: ./data/processed/en-fr/test.fr.pth\nParallel validation data:\n    en: ./data/processed/en-fr/valid.en-fr.en.pth\n    fr: ./data/processed/en-fr/valid.en-fr.fr.pth\nParallel test data:\n    en: ./data/processed/en-fr/test.en-fr.en.pth\n    fr: ./data/processed/en-fr/test.en-fr.fr.pth\n```\n",
                "type": "Text_excerpt",
                "original_header": "Download / preprocess data",
                "parent_header": [
                    "XLM for defects",
                    "III. Applications: Supervised / Unsupervised MT"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "Follow a similar approach than in section 1 for the 15 languages:\n```\nfor lg in ar bg de el en es fr hi ru sw th tr ur vi zh; do\n  ./get-data-wiki.sh $lg\ndone\n```\n\nDownloading the Wikipedia dumps make take several hours. The *get-data-wiki.sh* script will automatically download Wikipedia dumps, extract raw sentences, clean and tokenize them. Note that in our experiments we also concatenated the [Toronto Book Corpus](http://yknzhu.wixsite.com/mbweb) to the English Wikipedia, but this dataset is no longer hosted.\n\nFor Chinese and Thai you will need a special tokenizer that you can install using the commands below. For all other languages, the data will be tokenized with Moses scripts.\n\n```\n# Thai - https://github.com/PyThaiNLP/pythainlp\npip install pythainlp\n\n# Chinese\ncd tools/\nwget https://nlp.stanford.edu/software/stanford-segmenter-2018-10-16.zip\nunzip stanford-segmenter-2018-10-16.zip\n```\n",
                "type": "Text_excerpt",
                "original_header": "Download / preprocess monolingual data",
                "parent_header": [
                    "XLM for defects",
                    "IV. Applications: Cross-lingual text classification (XNLI)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "This script will download and tokenize the parallel data used for the TLM objective:\n\n```\nlg_pairs=\"ar-en bg-en de-en el-en en-es en-fr en-hi en-ru en-sw en-th en-tr en-ur en-vi en-zh\"\nfor lg_pair in $lg_pairs; do\n  ./get-data-para.sh $lg_pair\ndone\n```\n",
                "type": "Text_excerpt",
                "original_header": "Download parallel data",
                "parent_header": [
                    "XLM for defects",
                    "IV. Applications: Cross-lingual text classification (XNLI)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "This script will download and tokenize the XNLI corpus:\n```\n./get-data-xnli.sh\n```\n",
                "type": "Text_excerpt",
                "original_header": "Download XNLI data",
                "parent_header": [
                    "XLM for defects",
                    "IV. Applications: Cross-lingual text classification (XNLI)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Before running the scripts below, make sure you download the tokenizers from the [tools/](https://github.com/facebookresearch/XLM/tree/master/tools) directory.\n",
                "type": "Text_excerpt",
                "original_header": "Get the right tokenizers",
                "parent_header": [
                    "XLM for defects",
                    "IV. Applications: Cross-lingual text classification (XNLI)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "XLM supports both multi-GPU and multi-node training, and was tested with up to 128 GPUs. To run an experiment with multiple GPUs on a single machine, simply replace `python train.py` in the commands above with:\n\n```\nexport NGPU=8; python -m torch.distributed.launch --nproc_per_node=$NGPU train.py\n```\n\nThe multi-node is automatically handled by SLURM.\n",
                "type": "Text_excerpt",
                "original_header": "How can I run experiments on multiple GPUs?",
                "parent_header": [
                    "XLM for defects",
                    "Frequently Asked Questions"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "Please cite [[1]](https://arxiv.org/abs/1901.07291) if you found the resources in this repository useful.\n",
                "type": "Text_excerpt",
                "original_header": "References",
                "parent_header": [
                    "XLM for defects"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "[1] G. Lample *, A. Conneau * [*Cross-lingual Language Model Pretraining*](https://arxiv.org/abs/1901.07291)\n\n\\* Equal contribution. Order has been determined with a coin flip.\n\n```\n@article{lample2019cross,\n  title={Cross-lingual Language Model Pretraining},\n  author={Lample, Guillaume and Conneau, Alexis},\n  journal={Advances in Neural Information Processing Systems (NeurIPS)},\n  year={2019}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Cross-lingual Language Model Pretraining",
                "parent_header": [
                    "XLM for defects",
                    "References"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "[2] A. Conneau, G. Lample, R. Rinott, A. Williams, S. R. Bowman, H. Schwenk, V. Stoyanov [*XNLI: Evaluating Cross-lingual Sentence Representations*](https://arxiv.org/abs/1809.05053)\n\n```\n@inproceedings{conneau2018xnli,\n  title={XNLI: Evaluating Cross-lingual Sentence Representations},\n  author={Conneau, Alexis and Lample, Guillaume and Rinott, Ruty and Williams, Adina and Bowman, Samuel R and Schwenk, Holger and Stoyanov, Veselin},\n  booktitle={Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing (EMNLP)},\n  year={2018}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "XNLI: Evaluating Cross-lingual Sentence Representations",
                "parent_header": [
                    "XLM for defects",
                    "References"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "[3] G. Lample, M. Ott, A. Conneau, L. Denoyer, MA. Ranzato [*Phrase-Based & Neural Unsupervised Machine Translation*](https://arxiv.org/abs/1804.07755)\n\n```\n@inproceedings{lample2018phrase,\n  title={Phrase-Based \\& Neural Unsupervised Machine Translation},\n  author={Lample, Guillaume and Ott, Myle and Conneau, Alexis and Denoyer, Ludovic and Ranzato, Marc'Aurelio},\n  booktitle={Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing (EMNLP)},\n  year={2018}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Phrase-Based \\&amp; Neural Unsupervised Machine Translation",
                "parent_header": [
                    "XLM for defects",
                    "References"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "[4] G. Lample, A. Sablayrolles, MA. Ranzato, L. Denoyer, H. J\u00e9gou [*Large Memory Layers with Product Keys*](https://arxiv.org/abs/1907.05242)\n\n```\n@article{lample2019large,\n  title={Large Memory Layers with Product Keys},\n  author={Lample, Guillaume and Sablayrolles, Alexandre and Ranzato, Marc'Aurelio and Denoyer, Ludovic and J{\\'e}gou, Herv{\\'e}},\n  journal={Advances in Neural Information Processing Systems (NeurIPS)},\n  year={2019}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Large Memory Layers with Product Keys",
                "parent_header": [
                    "XLM for defects",
                    "References"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "[5] A. Conneau *, K. Khandelwal *, N. Goyal, V. Chaudhary, G. Wenzek, F. Guzman, E. Grave, M. Ott, L. Zettlemoyer, V. Stoyanov [*Unsupervised Cross-lingual Representation Learning at Scale*](https://arxiv.org/abs/1911.02116)\n\n\\* Equal contribution\n\n```\n@article{conneau2019unsupervised,\n  title={Unsupervised Cross-lingual Representation Learning at Scale},\n  author={Conneau, Alexis and Khandelwal, Kartikay and Goyal, Naman and Chaudhary, Vishrav and Wenzek, Guillaume and Guzm{\\'a}n, Francisco and Grave, Edouard and Ott, Myle and Zettlemoyer, Luke and Stoyanov, Veselin},\n  journal={arXiv preprint arXiv:1911.02116},\n  year={2019}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Unsupervised Cross-lingual Representation Learning at Scale",
                "parent_header": [
                    "XLM for defects",
                    "References"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "@article{lample2019cross,\n    year = {2019},\n    journal = {Advances in Neural Information Processing Systems (NeurIPS)},\n    author = {Lample, Guillaume and Conneau, Alexis},\n    title = {Cross-lingual Language Model Pretraining},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Cross-lingual Language Model Pretraining",
                "author": "Lample, Guillaume and Conneau, Alexis"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{conneau2018xnli,\n    year = {2018},\n    booktitle = {Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing (EMNLP)},\n    author = {Conneau, Alexis and Lample, Guillaume and Rinott, Ruty and Williams, Adina and Bowman, Samuel R and Schwenk, Holger and Stoyanov, Veselin},\n    title = {XNLI: Evaluating Cross-lingual Sentence Representations},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "XNLI: Evaluating Cross-lingual Sentence Representations",
                "author": "Conneau, Alexis and Lample, Guillaume and Rinott, Ruty and Williams, Adina and Bowman, Samuel R and Schwenk, Holger and Stoyanov, Veselin"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{lample2018phrase,\n    year = {2018},\n    booktitle = {Proceedings of the 2018 Conference on Empirical Methods in Natural Language Processing (EMNLP)},\n    author = {Lample, Guillaume and Ott, Myle and Conneau, Alexis and Denoyer, Ludovic and Ranzato, Marc'Aurelio},\n    title = {Phrase-Based \\& Neural Unsupervised Machine Translation},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Phrase-Based \\& Neural Unsupervised Machine Translation",
                "author": "Lample, Guillaume and Ott, Myle and Conneau, Alexis and Denoyer, Ludovic and Ranzato, Marc'Aurelio"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "@article{lample2019large,\n    year = {2019},\n    journal = {Advances in Neural Information Processing Systems (NeurIPS)},\n    author = {Lample, Guillaume and Sablayrolles, Alexandre and Ranzato, Marc'Aurelio and Denoyer, Ludovic and J{\\'e}gou, Herv{\\'e}},\n    title = {Large Memory Layers with Product Keys},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Large Memory Layers with Product Keys",
                "author": "Lample, Guillaume and Sablayrolles, Alexandre and Ranzato, Marc'Aurelio and Denoyer, Ludovic and J{\\'e}gou, Herv{\\'e}"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "value": "@article{conneau2019unsupervised,\n    year = {2019},\n    journal = {arXiv preprint arXiv:1911.02116},\n    author = {Conneau, Alexis and Khandelwal, Kartikay and Goyal, Naman and Chaudhary, Vishrav and Wenzek, Guillaume and Guzm{\\'a}n, Francisco and Grave, Edouard and Ott, Myle and Zettlemoyer, Luke and Stoyanov, Veselin},\n    title = {Unsupervised Cross-lingual Representation Learning at Scale},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Unsupervised Cross-lingual Representation Learning at Scale",
                "author": "Conneau, Alexis and Khandelwal, Kartikay and Goyal, Naman and Chaudhary, Vishrav and Wenzek, Guillaume and Guzm{\\'a}n, Francisco and Grave, Edouard and Ott, Myle and Zettlemoyer, Luke and Stoyanov, Veselin"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "application_domain": [
        {
            "result": {
                "type": "String",
                "value": "Natural Language Processing"
            },
            "confidence": 0.9833333333333333,
            "technique": "supervised_classification"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "XLM for defects"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://dl.fbaipublicfiles.com/XLM/xlm_figure.jpg"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1911.02116"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1901.07291"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1809.05053"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1804.07755"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1907.05242"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1909.10309"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hiroto-takatoshi/XLM/master/README.md"
        }
    ]
}