{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 21:23:25"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/gprana/READMEClassifier",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "gprana",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2018-05-21T04:15:15Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-08-21T08:42:20Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": null,
                "type": "License",
                "name": "Other",
                "url": null,
                "spdx_id": "NOASSERTION"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2018 Gede Artha Azriadi Prana, Christoph Treude, Ferdian Thung, \nThushari Atapattu, and David Lo\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/LICENSE.md"
        },
        {
            "result": {
                "value": "[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT). Please refer to [LICENSE.md](LICENSE.md)\n",
                "type": "Text_excerpt",
                "original_header": "License",
                "parent_header": [
                    "GitHub README Content Classifier"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "READMEClassifier",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "gprana/READMEClassifier",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/gprana/READMEClassifier/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/gprana/READMEClassifier/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 25,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 10,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/gprana/READMEClassifier/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 131794
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "# KidsRuby Installer\n\nKidsRuby Installer\n\n## Overview\n\nThis project builds an installer for the KidsRuby project http://kidsruby.com/\n\nThis project is entirely based on RailsInstaller (http://railsinstaller.org)\nwith additions for the kids ruby codebase.\n\n## How to Contribute\n\nKidsRuby Installer is bootstrapped, built and packaged via rake tasks.\n\n1. Download and install the latest RailsInstaller from\n   http://railsinstaller.org/\n\n2. Bootstrap the project, from the project root run\n\n  > rake bootstrap\n\n3. Install latest Inno Setup Quick Start Pack, ensure iscc.exe is in your PATH\n\n   http://www.jrsoftware.org/isdl.php#qsp\n\n4. [[ hackety hack... ]]\n\n5. Download and build all components on the stage\n\n  > rake build\n\n6. Use Inno Setup to package KidsRubyInstaller\n\n  > rake package\n\n7. Use the generated KidsRubyInstaller.exe, be happy and prosperous! Be\n   sure to share it with all of your friends!\n\n### Releasing a new version\n\n1. Update VERSION.txt\n\n2. Update CHANGELOG.txt\n\n### Development Kit (DevKit)\n\nA MSYS/MinGW based toolkit that enables KidsRuby Installer to build native C/C++\npackages, both for Ruby and gems. DevKit is built and maintained by the\nwonderful folks over at the RubyInstaller (http://rubyinstaller.org/) project.\n\n### Ruby 1.9.2 on Windows\n\nKidsRuby Installer is a self contained package installer which installs Ruby and\nRubyGems on a windows system, head over to http://rubyinstaller.org/ for more\ninformation.\n\n### Packaging/Installer\n\nWe are using [Inno Setup](http://www.jrsoftware.org/isinfo.php \"Inno Setup\"),\na free installer for Windows programs.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/input/dev_and_eval_readmes/gkarunakaran.kidsrubyinstaller-windows.md"
        },
        {
            "result": {
                "value": "The Puli Installer\n==================\n\n[![Build Status](https://travis-ci.org/puli/installer.svg?branch=master)](https://travis-ci.org/puli/installer)\n[![Build status](https://ci.appveyor.com/api/projects/status/56vtn91rphj8vo67/branch/master?svg=true)](https://ci.appveyor.com/project/webmozart/installer/branch/master)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/puli/installer/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/puli/installer/?branch=master)\n[![Latest Stable Version](https://poser.pugx.org/puli/installer/v/stable.svg)](https://packagist.org/packages/puli/installer)\n[![Total Downloads](https://poser.pugx.org/puli/installer/downloads.svg)](https://packagist.org/packages/puli/installer)\n[![Dependency Status](https://www.versioneye.com/php/puli:installer/1.0.0/badge.svg)](https://www.versioneye.com/php/puli:installer/1.0.0)\n\nLatest release: none\n\nPHP >= 5.3.9\n\nInstalls `puli.phar` on your system. Use it like this:\n\n```\n$ curl https://puli.io/installer | php\n```\n\nAuthors\n-------\n\n* [Bernhard Schussek] a.k.a. [@webmozart]\n* [The Community Contributors]\n\nContribute\n----------\n\nContributions to are very welcome!\n\n* Report any bugs or issues you find on the [issue tracker].\n* You can grab the source code at Puli\u2019s [Git repository].\n\nSupport\n-------\n\nIf you are having problems, send a mail to bschussek@gmail.com or shout out to\n[@webmozart] on Twitter.\n\nLicense\n-------\n\nAll contents of this package are licensed under the [MIT license].\n\n[Bernhard Schussek]: http://webmozarts.com\n[The Community Contributors]: https://github.com/puli/installer/graphs/contributors\n[issue tracker]: https://github.com/puli/issues/issues\n[Git repository]: https://github.com/puli/installer\n[@webmozart]: https://twitter.com/webmozart\n[MIT license]: LICENSE\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/input/dev_and_eval_readmes/EmanueleMinotto.installer.md"
        },
        {
            "result": {
                "value": "This project is written in Python 3. It also uses SQLite to store intermediary data during processing. By default the database is  `database/data.db`.\n\nThe code requires creation of some directories for logging and temporary file storage. Please create these prior to running the scripts:\n1. `log/`\n2. `temp/abstracted_markdown/`\n3. `temp/abstracted_html/`\n4. `temp/target_abstracted_markdown/`\n\nIf you want to train a model using provided dataset to predict labels in new file that's not in the set, you'll also need to create the following directories:\n\n5. `model/`. Used by `classifier_train_model.py` to save result of training. `classifier_classify_target.py` loads model saved in this directory for classifying sections in user-provided README file.\n6. `input/clf_target_readmes/`. The default place to store README files whose section labels are to be predicted.\n7. `output/`. Used by `classifier_classify_target.py` saves its resulting labels here.\n",
                "type": "Text_excerpt",
                "original_header": "Setup",
                "parent_header": [
                    "GitHub README Content Classifier"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "The following sections describe three use cases and the steps to follow for each scenario. Before running each use case, empty the database using `empty_all_tables.py` .\n",
                "type": "Text_excerpt",
                "original_header": "How to Use",
                "parent_header": [
                    "GitHub README Content Classifier"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        },
        {
            "result": {
                "value": "1. Set up file paths in `config/config.cfg`. By default, CSV files listing the section titles and their labels are in `input/`. `dataset_1.csv` contains the section titles and labels for the development set, whereas `dataset_2.csv` contains the section titles and labels for the evaluation set. The README files corresponding to the CSV files are in `input/ReadMes/` directory.\n2. Load development (i.e. the 25% used to develop heuristics) and evaluation (i.e. the remaining 75%) datasets by running `script/load_dev_and_eval_datasets.py`\n3. Run the `script/experiment/*` scripts as required. E.g. to run experiment comparing cross-validation result on different algorithms, run `script/experiment_classifier_validation.py`. \n",
                "type": "Text_excerpt",
                "original_header": "Use Case 1: Running Cross-validation Experiments",
                "parent_header": [
                    "GitHub README Content Classifier",
                    "How to Use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        },
        {
            "result": {
                "value": "1. Run `script/load_combined_set_and_train_model` to extract and load contents and titles listed in combined development and evaluation sets into the database. This script by default reads `dataset_combined.csv` for section heading and labels, and the README files in `input/ReadMes/` directory for the section contents. \n2. Download the new README file(s) whose sections are to be labeled into a directory.\n3. Open configuration file of the classifier (`config/config.cfg`), and edit the `target_readme_file_dir` variable to point to the location of the README file(s) to be labeled.\n4. Run `script/load_and_classify_target` to extract contents of the new README files, load the section contents, and perform classification.\n5. By default, the resulting section labels will be saved in `output/output_section_codes.csv`. Classifier will also identify which codes exist for each file, and which codes don't yet exist (i.e. potential for README expansion). This information will be saved in `output/output_file_codes.csv`\n",
                "type": "Text_excerpt",
                "original_header": "Use Case 2: Training Model on Existing Data and Classifying New Files",
                "parent_header": [
                    "GitHub README Content Classifier",
                    "How to Use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        },
        {
            "result": {
                "value": "Each script used in the previous section automates multiple steps in the workflow to make usage simpler. If you want more detailed breakdown, e.g. to facilitate evaluation of intermediary result after each step in the workflow, please use the following steps.\n",
                "type": "Text_excerpt",
                "original_header": "Use Case 3: Training Model on Existing Data and Classifying New Files (More Detailed Breakdown)",
                "parent_header": [
                    "GitHub README Content Classifier",
                    "How to Use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        },
        {
            "result": {
                "value": "1. Run `script/load_section_dataset_combined.py`. This script extracts and loads section overview (title text, labels) from CSV file containing complete set of section headings and labels. In `config/config.cfg`, this CSV file is specified as `dataset_combined.csv` by default. The script also loads section content of the associated README files. All these data are subsequently stored in tables with name ending in `combined` in the database.\n2. Run `script/classifier_train_model.py`. This script will train SVM model using the data in `*combined` database tables. The resulting model, TFIDF vectorizer, and matrix label binarizer will be saved in `model/` directory.",
                "type": "Text_excerpt",
                "original_header": "Training Model Using Existing Data",
                "parent_header": [
                    "GitHub README Content Classifier",
                    "How to Use",
                    "Use Case 3: Training Model on Existing Data and Classifying New Files (More Detailed Breakdown)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        },
        {
            "result": {
                "value": "3. Download the new README file(s) whose sections are to be labeled into a directory.\n4. Open configuration file of the classifier (`config/config.cfg`), and edit the `target_readme_file_dir` variable to point to the location of the README file(s) to be labeled.\n5. Run `script/load_target_sections.py` to load the section heading and content data into database.",
                "type": "Text_excerpt",
                "original_header": "Loading New File",
                "parent_header": [
                    "GitHub README Content Classifier",
                    "How to Use",
                    "Use Case 3: Training Model on Existing Data and Classifying New Files (More Detailed Breakdown)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        },
        {
            "result": {
                "value": "6. Run `script/classifier_classify_target.py`. This script will use the saved model, vectorizer, and binarizer to classify target README files in the directory specified in `target_readme_file_dir` variable in `config/config.cfg`. \n7. By default, the resulting section labels will be saved in `output/output_section_codes.csv`. Classifier will also identify which codes exist for each file, and which codes don't yet exist (i.e. potential for README expansion). This information will be saved in `output/output_file_codes.csv`\n",
                "type": "Text_excerpt",
                "original_header": "Classifying Sections in the New File",
                "parent_header": [
                    "GitHub README Content Classifier",
                    "How to Use",
                    "Use Case 3: Training Model on Existing Data and Classifying New Files (More Detailed Breakdown)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "1. Set up file paths in `config/config.cfg`. By default, CSV files listing the section titles and their labels are in `input/`. `dataset_1.csv` contains the section titles and labels for the development set, whereas `dataset_2.csv` contains the section titles and labels for the evaluation set. The README files corresponding to the CSV files are in `input/ReadMes/` directory.\n2. Load development (i.e. the 25% used to develop heuristics) and evaluation (i.e. the remaining 75%) datasets by running `script/load_dev_and_eval_datasets.py`\n3. Run the `script/experiment/*` scripts as required. E.g. to run experiment comparing cross-validation result on different algorithms, run `script/experiment_classifier_validation.py`. \n",
                "type": "Text_excerpt",
                "original_header": "Use Case 1: Running Cross-validation Experiments",
                "parent_header": [
                    "GitHub README Content Classifier",
                    "How to Use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "GitHub README Content Classifier"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/gprana/READMEClassifier/master/README.md"
        }
    ]
}