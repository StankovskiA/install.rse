{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 18:45:01"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/gongbell/WANA",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "gongbell",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2020-07-26T04:13:44Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-29T07:19:36Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "A Symbolic Execution Engine for Wasm Bytecode and A Cross-Platform Smart Contract Vulnerability Detector",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "WANA",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "gongbell/WANA",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/gongbell/WANA/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/gongbell/WANA/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 28,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/gongbell/wana/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 304148
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "license": [
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2017 sim31\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/timeos/LICENSE"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/lottery1/compile.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/setup.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/flush.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/cleos.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/stop.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/frontend/jungle-build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/frontend/jungle-start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/frontend/mainnet-build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/frontend/mainnet-start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/contracts/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/scripts/0010_load-elements.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/scripts/0020_load-pet-types.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/scripts/0000_init-chain.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/scripts/init_wallet.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/scripts/0030_load-data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/scripts/tests-market.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/scripts/playground.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/demux/migrate.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/demux/start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-node/start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/shine/contract/compile.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/shine/contract/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/bootstrap.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/contracts/testrick.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/contracts/testshit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/scripts/jungle.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/scripts/test_airburn.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/scripts/install_eosio.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/scripts/airburn_jungle.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/scripts/test.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/blaster/blast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/reliefchain/scripts/superseed/seed.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/reliefchain/scripts/superseed/setup.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/reliefchain/scripts/superseed/compile.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/reliefchain/scripts/superseed/deploy.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/reliefchain/scripts/seed/seed.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/reliefchain/scripts/seed/setup.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/reliefchain/scripts/seed/compile.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/reliefchain/scripts/seed/deploy.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/pradata/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/pradata/demo/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/wallet/local_testnet.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/wallet/contracts/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "https://github.com/gongbell/wana/tree/master/examples/EOSIO_contracts/owdinnetwork/docs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/owdinnetwork/docker/docker-compose.yml",
                "type": "Url",
                "format": "docker_compose"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/owdinnetwork/docker/docker-compose.yml"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/docker-compose.yml",
                "type": "Url",
                "format": "docker_compose"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/docker-compose.yml"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/frontend/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/frontend/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-dev/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/demux/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/demux/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-node/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/services/eos-node/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/docker-compose.yml",
                "type": "Url",
                "format": "docker_compose"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/vigor/docker-compose.yml"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "# About Us\n\nMonsterEOS was born as an experimental decentralized application in the EOS Blockchain. It is a Tamagotchi style game where you keep your pets alive and happy by feeding them, providing a pleasant environment, and letting them rest. By popular demand and adoption from the EOS community, we have added requested features such as battles and a monster market.\n\nThe project will ALWAYS be open source because we believe it\u2019s a must for a decentralized world, and also, because we want the project to be building block and code reference for other great games and dapps on the EOS blockchain. In fact, we encourage everyone to browse our code repository, and extend/modify the game and re-publish as you wish - the more dapps built for our wonderful EOS community the better.\n\n## Contributing to the project\n\nWe welcome anyone to bring forward ideas and pull requests to the project. You can work in any issue that no one is assigned, just comment on it! :)\n\nIf you want to be a serious periodically contributor and join our [Decentralized Autonomous Organization and Receive Shares](https://github.com/MonsterEOS/dao), please message us on our [Discord](https://discord.gg/gmrDtHF)\n\n## Technical Strategy\n\n### Branching\n\n- `master`: we don't develop on it, it's only for released versions\n- `staging`: it's for bug fixes, current issues fixing, prior deployment to master, **this is where mostly you will branch out and submit PRs**\n- `develop`: it's for new project versions, new gaming features etc\n\n### CI/CD\n\nIt's a really important TODO item. With the project and members growing more and more we need to implement some hooks for linting and tests check. Let us know if you want to work on that!\n\n## Thank you\n\nThanks for going through this document, it means that you are interested in collaborate with the project. Please, don't be shy, hit us on Discord, or Telegram, does not matter if you are learning to code, git first-timer etc. We always need help and after you start open sourcing you will never stop! :D\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/examples/EOSIO_contracts/monstereosio/monstereos/CONTRIBUTING.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "The following Python packages are required.\r\n + six==1.14.0\r\n + func_timeout==4.3.5\r\n + z3-solver==4.8.8.0\r\n\r\nThe project was developed under Ubuntu 18.04, therefore it is compatible with later version in principle.\r\n\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Prerequisites",
                "parent_header": [
                    "WANA"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "There should be a compiled smart contract in wasm format. The EOSIO and Ethereum smart contract could be \r\ncompiled as follow.\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "WANA"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/README.md"
        },
        {
            "result": {
                "value": "The EOSIO smart contract is developed using cpp or rust, like [appdemo](./examples/EOSIO_contracts/appdemo/appdemo.cpp).\r\nFirstly, installing the [eosio.cdt](https://github.com/EOSIO/eosio.cdt) according to its \r\n[README](https://github.com/EOSIO/eosio.cdt/blob/master/README.md). Then, using the following command to compile the\r\nabove smart contract.\r\n```bash\r\neosio-cpp appdemo.cpp -o appdemo.wasm\r\n```\r\n\r",
                "type": "Text_excerpt",
                "original_header": "EOSIO smart contract",
                "parent_header": [
                    "WANA",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/README.md"
        },
        {
            "result": {
                "value": "The type of Ethereum smart contract source code is solidity. We have prepared the wasm file and its solidity \r\nsource code that can be used for execution. If you want to compile solidity yourself, at present, solidity officially can complete the process\r\nthat compile smart contract from solidity to WebAssembly. This tool is [solc](https://github.com/ethereum/solidity/releases). \r\nHowever, it is still in the process of experimentation. Therefore, we recommend using the [0.7.5 version of solc](https://github.com/ethereum/solidity/releases/tag/v0.7.5). After download solc, using the following command to compile a smart contract. (**example.sol** is the smart contract path and **example_directory** is the output target directory)  \r\nFor example, [example.sol](./examples/Ethereum_contracts/delegatecall_samples/Router.sol).\r\n```bash\r\n./solc-static-linux --ewasm example.sol -o example_directory\r\n```\r\nThis command will output two files, example.wasm and example.wast. Since solc is still in the experimental stage, \r\nthe output example.wasm does not contain the execution logic of the smart contract. \r\nWe need to separate the wasm code that is actually used for execution from example.wast.\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Ethereum smart contract",
                "parent_header": [
                    "WANA",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/README.md"
        },
        {
            "result": {
                "value": "The following command will analyze the EOSIO smart contract `contract.wasm` with timeout 20 seconds. The `-t` is \r\noptional, the symbolic execution won't be interrupted until complete analysis if `-t` not set.\r\n```bash\r\npython3 wana.py -t 20 -e contract.wasm\r\n```\r\n\r\nTo analyze Ethereum smart contract, the option `--sol` is needed.\r\n```bash\r\npython3 wana.py --sol -e ethereum_contract.wasm\r\n```\r\n\r\nIf you want to get complete execution information, you can set the option `--lvl`, `1` for basic information, the highest is `3`\r\n```bash\r\npython3 wana.py --sol -e --lvl 1 ethereum_contract.wasm\r\n```\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Analysis",
                "parent_header": [
                    "WANA",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "1. https://webassembly.org/\r\n2. https://github.com/WebAssembly/\r\n3. https://developer.mozilla.org/en-US/docs/WebAssembly\r\n4. https://github.com/EOSIO/eosio.cdt\r\n5. https://github.com/second-state/SOLL\r\n",
                "type": "Text_excerpt",
                "original_header": "Reference Website",
                "parent_header": [
                    "WANA"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "WANA"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2007.15510\r\n\r\nWANA: Symbolic Execution of Wasm Bytecode for Cross-Platform Smart Contract Vulnerability Detection\r\n\r\nby Dong Wang, Bo Jiang, W.K. Chan\r\n\r\nPlease contact Dr. Bo Jiang (gongbell@gmail.com"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/gongbell/wana/master/README.md"
        }
    ]
}