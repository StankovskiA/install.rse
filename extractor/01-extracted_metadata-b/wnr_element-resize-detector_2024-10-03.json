{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 21:39:53"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/wnr/element-resize-detector",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "wnr",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2015-01-27T12:22:47Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-03T13:31:50Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "The MIT License (MIT)\n\nCopyright (c) 2016 Lucas Wiener\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Optimized cross-browser resize listener for elements.",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you need to listen to elements inside another document (such as an iframe), you need to init that document with this function. Otherwise the library won't be able to detect when elements are attached to the document. So for an iframe, simpy invoke ``erd.initDocument(iframe.contentDocument);`` when the iframe is mounted on the DOM for the first time. The document from which the element resize detector instance is created will be initialized automatically. Notice that a new document is created when an iframe loads its content. So for iframes, be sure you invoke this function for each `onLoad` iframe event.\n \n",
                "original_header": "initDocument(document)"
            },
            "confidence": 0.9536140834870905,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "* Add new method ``initDocument(document)`` which is needed when listening to detached elements in other documents, such as iframes.\n* Add a new optional option that adds `important!` to most style properties, to avoid CSS overriding. Disabled by default.\n* Fix an issue with the object approach in IE8. See #95.\n* Fix uninstall issue with object approach. See #102.\n* Fixed errornous optimization that prevented scrollbar repositioning for really fast x -> y -> x resizes.\n \n",
                "original_header": "1.2.0"
            },
            "confidence": 0.9113164847506716,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "* Using `window.getComputedStyle` instead of relying on the method being available in the global scope. This enables this library to be used in simulated browser environments such as jsdom.\n \n",
                "original_header": "1.1.1"
            },
            "confidence": 0.9522314077675286,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "* Supporting inline elements\n* Event-based solution for detecting attached/rendered events so that detached/unrendered elements can be listened to without polling\n* Now all changes that affects the offset size of an element are properly detected (such as padding and font-size).\n* Scroll is stabilized, and is the preferred strategy to use. The object strategy will be deprecated (and is currently only used for some legacy browsers such as IE9 and Opera 12).\n \n",
                "original_header": "1.1.0"
            },
            "confidence": 0.9844866938736612,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "element-resize-detector",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "wnr/element-resize-detector",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/wnr/element-resize-detector/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/wnr/element-resize-detector/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 1314,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "dom, javascript, onresize, resize, resize-events",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 117,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/wnr/element-resize-detector/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 108147
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 767
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "non-software",
                "type": "String"
            },
            "confidence": 1,
            "technique": "software_type_heuristics"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Include the script in the browser:\n```html\n<script src=\"node_modules/element-resize-detector/dist/element-resize-detector.min.js\"></script>\n```\nThis will create a global function `elementResizeDetectorMaker`, which is the maker function that makes an element resize detector instance.\n\nYou can also `require` it like so:\n```js\nvar elementResizeDetectorMaker = require(\"element-resize-detector\");\n```\n",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "element-resize-detector"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        },
        {
            "result": {
                "value": "```js\n// With default options (will use the object-based approach).\nvar erd = elementResizeDetectorMaker();\n\n// With the ultra fast scroll-based approach.\n// This is the recommended strategy.\nvar erdUltraFast = elementResizeDetectorMaker({\n  strategy: \"scroll\" //<- For ultra performance.\n});\n```\n\nThere is also an `callOnAdd` option, which determines if listeners should be called when they are getting added. Default is true. If true, the listener is guaranteed to be called when it has been added. If false, the listener will not be guarenteed to be called when it has been added (does not prevent it from being called).\n",
                "type": "Text_excerpt",
                "original_header": "Create instance",
                "parent_header": [
                    "element-resize-detector",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "Big thanks to [Evry](https://www.evry.com/) sponsoring this project.\n\nThis library is using the two approaches (scroll and object) as first described at [http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/](http://www.backalleycoder.com/2013/03/18/cross-browser-event-based-element-resize-detection/).\n\nThe scroll based approach implementation was based on Marc J's implementation [https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js](https://github.com/marcj/css-element-queries/blob/master/src/ResizeSensor.js).\n\nPlease note that both approaches have been heavily reworked for better performance and robustness.\n",
                "type": "Text_excerpt",
                "original_header": "Credits",
                "parent_header": [
                    "element-resize-detector"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Removes all listeners from the element, but does not completely remove the detector. Use this function if you may add listeners later and don't want the detector to have to initialize again.\n \n",
                "original_header": "removeAllListeners(element)"
            },
            "confidence": 0.9949292483136842,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "**Example usage:**\n```js\nerd.listenTo(document.getElementById(\"test\"), function(element) {\n  var width = element.offsetWidth;\n  var height = element.offsetHeight;\n  console.log(\"Size: \" + width + \"x\" + height);\n});\n```\n \n",
                "original_header": "listenTo(element, listener) or listenTo(options, element, listener)"
            },
            "confidence": 0.9147304417216964,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "element-resize-detector"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/wnr/element-resize-detector/wiki",
                "format": "wiki"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/wnr/element-resize-detector/master/README.md"
        }
    ]
}