{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:25:34"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/ispras/juliet-dynamic",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "ispras",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-09-17T13:39:07Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-06-12T21:43:58Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Juliet C/C++ Dynamic Test Suite",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "juliet-dynamic",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "ispras/juliet-dynamic",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/ispras/juliet-dynamic/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/ispras/juliet-dynamic/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 23,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "binary, binary-analysis, checkers, cwe, dynamic, error-detection, juliet, symbolic-execution, testsuite",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/ispras/juliet-dynamic/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "    $ sudo apt install clang-10 gcc-multilib\n",
                "type": "Text_excerpt",
                "original_header": "Dependencies",
                "parent_header": [
                    "Juliet C/C++ Dynamic Test Suite"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "    usage: test_juliet.py [-h]\n                          [-c [CWE_NUM_1 CWE_NUM_2 ... [CWE_NUM_1 CWE_NUM_2 ... ...]]]\n                          [-t TOOL] [-e] [-d] [-r] [-j THREADS]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -c [CWE_NUM_1 CWE_NUM_2 ... [CWE_NUM_1 CWE_NUM_2 ... ...]], --cwe [CWE_NUM_1 CWE_NUM_2 ... [CWE_NUM_1 CWE_NUM_2 ... ...]]\n                            Run specified CWE.\n      -t TOOL, --tool TOOL  Tool name.\n      -e, --error           Print false positive and false negative tests.\n      -d, --delete          Delete results and collect them again.\n      -r, --reproduce       Recalculate statistics and reproduce sanitizers\n                            verification.\n      -j THREADS            Set number of threads.\n",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "Juliet C/C++ Dynamic Test Suite"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "You can measure TPR and TNR for your tool via `test_juliet.py` script, which\ndoes the following:\n\n1. The script runs your tool on all Juliet test cases.\n2. Each test case is executed on a valid input that does not lead to an error.\n3. Your tool should generate new inputs that may trigger an error.\n4. The script assigns TP to positive test case if at least one input was\n   generated. The script assigns FP to negative test case if at least one input\n   was generated. The script assigns TN to negative test case if no inputs were\n   generated. The script assigns FN to positive test case if no inputs were\n   generated.\n5. Afterwards, the script verifies TP cases on sanitizers. TP stays for test\n   case if sanitizers signal an error for at least one generated input, FN is\n   assigned to the test case otherwise.\n\nThe following script runs Sydr on all Juliet test cases, determines classes (TP,\nFP, TN, FN) for each test case, and verifies generated inputs on sanitizers:\n\n    $ ./test_juliet.py -j4\n\nThe script will generate `results/stats.json` file containing classes (TP, FP,\nTN, FN) and sanitizers verification result for each checked Juliet test case.\n\nMoreover, script prints overall TPR, TNR, and\n[ACC](https://en.wikipedia.org/wiki/Sensitivity_and_specificity) before/after\nsanitizers verification.\n\nThe sequential runs of `test_juliet.py` will only print the already obtained\nstatistics.\n\nThe following command prints all False Positive and False Negative cases:\n\n    $ ./test_juliet.py -e\n",
                "type": "Text_excerpt",
                "original_header": "Run Juliet",
                "parent_header": [
                    "Juliet C/C++ Dynamic Test Suite"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "support": [
        {
            "result": {
                "value": "You just need to implement `run_TOOLNAME` function in `test_juliet.py`. This\nfunction accepts path to a single Juliet test case binary, CWE enum for the test\ncase, and path to corresponding input file containing stdin. The function should\nreturn list of new generated inputs by your tool. Then just run:\n\n    $ ./test_juliet.py -j4 -t TOOLNAME\n",
                "type": "Text_excerpt",
                "original_header": "Supporting Your Dynamic Tool",
                "parent_header": [
                    "Juliet C/C++ Dynamic Test Suite"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "```\n@article{vishnyakov21,\n  title = {Symbolic Security Predicates: Hunt Program Weaknesses},\n  author = {Vishnyakov, Alexey and Logunova, Vlada and Kobrin, Eli and Kuts,\n            Daniil and Parygina, Darya and Fedotov, Andrey},\n  booktitle = {2021 Ivannikov ISPRAS Open Conference (ISPRAS)},\n  year = {2021},\n  publisher = {IEEE},\n  url = {https://arxiv.org/abs/2111.05770},\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Cite Us",
                "parent_header": [
                    "Juliet C/C++ Dynamic Test Suite"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        },
        {
            "result": {
                "value": "@article{vishnyakov21,\n    url = {https://arxiv.org/abs/2111.05770},\n    publisher = {IEEE},\n    year = {2021},\n    booktitle = {2021 Ivannikov ISPRAS Open Conference (ISPRAS)},\n    author = {Vishnyakov, Alexey and Logunova, Vlada and Kobrin, Eli and Kuts,\nDaniil and Parygina, Darya and Fedotov, Andrey},\n    title = {Symbolic Security Predicates: Hunt Program Weaknesses},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Symbolic Security Predicates: Hunt Program Weaknesses",
                "author": "Vishnyakov, Alexey and Logunova, Vlada and Kobrin, Eli and Kuts,\nDaniil and Parygina, Darya and Fedotov, Andrey",
                "url": "https://arxiv.org/abs/2111.05770"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Building all CWEs may require a long time. Building required CWE to measure\nSydr: \n",
                "original_header": "Build"
            },
            "confidence": 0.991458581192564,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Save statistics to file (results must be already collected): \n    $ ./test_juliet.py > stats.txt \n",
                "original_header": "Generating LaTex Table"
            },
            "confidence": 0.9570079249558128,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "1. Extract results archive in Juliet root:\n```\n$ tar xf results.tar.xz\n```\n2. The following script will remove `results/stats.json` and rerun sanitizers\n   verification:\nBASH2* \nIf you want to generate LaTex table, see section above.\n \n",
                "original_header": "Reproducing Statistics"
            },
            "confidence": 0.9285296695653118,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "    $ ./table.py > stats.tex \n",
                "original_header": "Generating LaTex Table"
            },
            "confidence": 0.9019229624171622,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Juliet C/C++ Dynamic Test Suite"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/stats.svg"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2111.05770"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ispras/juliet-dynamic/master/README.md"
        }
    ]
}