{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:00:31"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/microsoft/toga",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "microsoft",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-01-20T20:22:47Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-20T12:03:37Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2022 Microsoft Corporation.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/LICENSE"
        }
    ],
    "name": [
        {
            "result": {
                "value": "toga",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "microsoft/toga",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/microsoft/toga/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/microsoft/toga/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 31,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 12,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/microsoft/toga/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 329601
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 4309
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/CODE_OF_CONDUCT.md"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/model/assertions/run_eval.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/model/assertions/run_train.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/model/exceptions/run_eval.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/model/exceptions/run_train.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/eval/rq3.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/eval/rq3/rq3.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/eval/rq2/assertion_inference/rq2.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/toga/main/eval/rq2/exception_inference/rq2.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "For an easy setup, we recommend our docker container that includes all data, pretrained models, and source. Otherwise, follow the setup instructions in the next section.\n\nFirst, pull the docker image:\n`docker pull edinella/toga-artifact`\n\nConnect to it:\n`docker run -i -t edinella/toga-artifact`\n\nThen, setup some environment variables:\n`export PATH=$PATH:/home/defects4j/framework/bin`\n`export ATLAS_PATH=/home/icse2022_artifact/data/atlas---deep-learning-assert-statements/`\n",
                "type": "Text_excerpt",
                "original_header": "Docker Setup",
                "parent_header": [
                    "ToGA Artifact"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "value": "Requirements: `python3.9`, `git lfs`\n\nFirst, clone this repo and install the dependencies:\n```\ncd toga/\ngit lfs pull\npip install -r requirements.txt\ngit clone https://gitlab.com/cawatson/atlas---deep-learning-assert-statements.git\nexport ATLAS_PATH=<path_to_atlas...>/atlas---deep-learning-assert-statements/\n```\n",
                "type": "Text_excerpt",
                "original_header": "Setup",
                "parent_header": [
                    "ToGA Artifact"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "value": "Paring and extracting new sets of unit test inputs requires the tree sitter java grammar. See https://github.com/tree-sitter/py-tree-sitter for instructions on building a tree sitter grammar and use 'vendor/tree-sitter-java'.\n\nOnce the grammar is built in a `my-languages.so` file, place it in `/tmp/tree-sitter-repos/my-languages.so`\n\nA prebuilt `my-languages.so` for linux is provided in `lib/tree_sitter`.\n",
                "type": "Text_excerpt",
                "original_header": "Tree Sitter setup (optional):",
                "parent_header": [
                    "ToGA Artifact",
                    "Setup"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "value": "If you want to build and execute defects4j tests, [defects4j](https://github.com/rjust/defects4j) must be installed.\n\nRequirements:\n```\nsudo apt install libdbi-perl\nsudo apt install openjdk-8-jdk\nsudo apt install libdbd-csv-perl\n```\n\n",
                "type": "Text_excerpt",
                "original_header": "Defects4j setup (optional):",
                "parent_header": [
                    "ToGA Artifact",
                    "Setup"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Otherwise, to install our exception and assertion pretrained models, download from: https://drive.google.com/drive/folders/1dZDxu92rZzB_LEwnAkkiy3DblxMJ6nUT?usp=sharing\nPut them in `model/exceptions/pretrained/pytorch_model.bin` and `model/assertions/pretrained/pytorch_model.bin` respectively. The models can also be downloaded from the artifact on zenodo: https://zenodo.org/record/6210589 \nTo train your own model, run\n```\ncd model/exceptions/\nbash run_train.sh\n\ncd model/assertions/\nbash run_train.sh\n```\n \n",
                "original_header": "Models"
            },
            "confidence": 0.9708999433733898,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To access the evosuite test datasets run:\n```\ncd data\ntar xzf evosuite_reaching_tests.tar.gz\ntar xzf evosuite_5project_tests.tar.gz\ntar xzf evosuite_tests.tar.gz\n```\n \n",
                "original_header": "Datasets - Preprocessed"
            },
            "confidence": 0.9999999993573567,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The following commands assume you are in the root of this directory. \nTo reproduce the weighted coin experiment in table 1, run:\n```\ncd eval/rq2/exception_inference\npython coin.py\n``` \n",
                "original_header": "Evaluation"
            },
            "confidence": 0.9677517644588087,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow [Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general). Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.\n \n",
                "original_header": "Trademarks"
            },
            "confidence": 0.9988852287322683,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "1. Tufano, Michele, et al. \"Unit Test Case Generation with Transformers.\" arXiv preprint arXiv:2009.05617 (2020).\n",
                "type": "Text_excerpt",
                "original_header": "References",
                "parent_header": [
                    "ToGA Artifact"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "This project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.opensource.microsoft.com. When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n",
                "type": "Text_excerpt",
                "original_header": "Contributing",
                "parent_header": [
                    "ToGA Artifact"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This repository contains the replication artifact for TOGA: A Neural Method for Test Oracle Generation to appear in ICSE 2022. \nOur artifact reproduces the results for all RQs in the paper's evaluation. The artifact includes source code and download links for datasets and models produced in the paper. We assume basic unix familiarity and ability to run python. The artifact is also available as a docker image for linux.\n \n",
                "original_header": "ToGA Artifact"
            },
            "confidence": 0.9506276058444285,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The third dataset is our test dataset generated from Evosuite tests. This is located in `data/evosuite_tests.tar.gz`. Since the dataset size is very large (>400k tests), we provide two smaller sample datasets that can be used to reproduce the bug counts result and false positive rate result respectively from Table 3 for `Our Approach` in `data/evosuite_reaching_tests.tar.gz` and `data/evosuite_5project_tests.tar.gz`. `reaching_tests` contains bug-reaching tests only, while `5project_tests` contains the tests generated for the same 5 defects4j projects used in [1]'s evaluation. \n",
                "original_header": "Datasets - Preprocessed"
            },
            "confidence": 0.9452723078007997,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "\n1. **RQ1: Is our grammar representative of most developer-written assertions?**\n   To evaluate this research question:\n   ``cd eval/rq1 && python rq1.py`` \n",
                "original_header": "Evaluation"
            },
            "confidence": 0.9060220462485086,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow [Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general). Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies.\n \n",
                "original_header": "Trademarks"
            },
            "confidence": 0.9725227067402532,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To train your own model, run\n```\ncd model/exceptions/\nbash run_train.sh\n\ncd model/assertions/\nbash run_train.sh\n```\n \n",
                "original_header": "Models"
            },
            "confidence": 0.9058029006981354,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To reproduce the exception results shown in table 1 for `TOGA Model`, run:\n```\ncd eval/rq2/exception_inference\nbash rq2.sh\n``` \nTo reproduce the results shown in Table 3 for `Our Approach`, run `toga.py` on either the bug-reaching inputs (for bug results) or 5 project sample (for false positive rate). By default, the `toga` tool will use the test metadata labels to evaluate oracles predicted by the models and print results. The tool also generates a `predicted_oracles.csv` file that can be used to generate executable test suites. \nTo reproduce table 3 bug result by running only bug-reaching tests (this will not reproduce the FP rate, which requires running on all of the tests):\n```\npython toga.py data/evosuite_reaching_tests/inputs.csv data/evosuite_reaching_tests/meta.csv\n``` \nTo reproduce table 3 false positive rate result on a 5 project sample (2+ hour runtime):\n```\npython toga.py data/evosuite_5project_tests/inputs.csv data/evosuite_5project_tests/meta.csv\n``` \n",
                "original_header": "Evaluation"
            },
            "confidence": 0.9112136608009577,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "ToGA Artifact"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2009.05617 (2020).\n\n## Contributing\n\nThis project welcomes contributions and suggestions.  Most contributions require you to agree to a Contributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us the rights to use your contribution. For details, visit https://cla.opensource.microsoft.com. When you submit a pull request, a CLA bot will automatically determine whether you need to provide a CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions provided by the bot. You will only need to do this once across all repos using our CLA.\n\n## Trademarks\nThis project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow [Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general). Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party's policies."
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/toga/main/README.md"
        }
    ]
}