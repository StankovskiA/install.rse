{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:38:06"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/ChunghaSung/intAbs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "ChunghaSung",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2017-08-18T00:50:39Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-05-15T14:03:56Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2017 sch8906\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Repository for ASE 2017 paper, \"Modular Verification of Interrupt-driven Software\".",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "- icbmc: This is the directory where I tested icbmc binary file from DATE15 paper with my benchmarks.\n\n- src: It contains main implementation (worlist-ai, utils, CMakeLists.txt) and a test directory (test)\n\n- src/test: It contains script files to run the test and benchmark programs. Also, the result files are included in each directory.\n\n",
                "type": "Text_excerpt",
                "original_header": "Directory description"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This repository is about thread modular abstract interpretation (Using the APRON library) \nfor interrupt-driven programs by adopting priority information. \n",
                "original_header": "README"
            },
            "confidence": 0.908955829834301,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The program is an LLVM opt pass. It is built using CMake. \nSince we are using CMake, this likely requires LLVM version 3.6.0 \n",
                "original_header": "Building"
            },
            "confidence": 0.9207690862150675,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "intAbs",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "ChunghaSung/intAbs",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/ChunghaSung/intAbs/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/ChunghaSung/intAbs/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 11,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "abstract-interpretation, apron, interrupt-driven-programs, priority, static-analysis",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/sch8906/intAbs/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 2297302
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "LLVM",
                "name": "LLVM",
                "type": "Programming_language",
                "size": 525024
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 347396
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 29395
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 12118
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "SMT",
                "name": "SMT",
                "type": "Programming_language",
                "size": 1599
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CMake",
                "name": "CMake",
                "type": "Programming_language",
                "size": 1567
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sch8906/intAbs/master/icbmc/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sch8906/intAbs/master/icbmc/po-code/blink/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sch8906/intAbs/master/icbmc/po-code/rc-core/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sch8906/intAbs/master/icbmc/po-code/logger1%2B2/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sch8906/intAbs/master/icbmc/po-code/brake/run_cbmc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sch8906/intAbs/master/icbmc/po-code/brake/runsolver.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sch8906/intAbs/master/icbmc/po-code/brake/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "```\n@inproceedings{DBLP:conf/kbse/SungKW17,\n  author    = {Chungha Sung and\n               Markus Kusano and\n               Chao Wang},\n  title     = {Modular verification of interrupt-driven software},\n  booktitle = {Proceedings of the 32nd {IEEE/ACM} International Conference on Automated\n               Software Engineering, {ASE} 2017, Urbana, IL, USA, October 30 - November\n               03, 2017},\n  pages     = {206--216},\n  year      = {2017},\n  crossref  = {DBLP:conf/kbse/2017},\n  url       = {https://doi.org/10.1109/ASE.2017.8115634},\n  doi       = {10.1109/ASE.2017.8115634},\n  timestamp = {Fri, 01 Dec 2017 22:44:10 +0100},\n  biburl    = {https://dblp.org/rec/bib/conf/kbse/SungKW17},\n  bibsource = {dblp computer science bibliography, https://dblp.org}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citing IntAbs"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{DBLP:conf/kbse/SungKW17,\n    bibsource = {dblp computer science bibliography, https://dblp.org},\n    biburl = {https://dblp.org/rec/bib/conf/kbse/SungKW17},\n    timestamp = {Fri, 01 Dec 2017 22:44:10 +0100},\n    doi = {10.1109/ASE.2017.8115634},\n    url = {https://doi.org/10.1109/ASE.2017.8115634},\n    crossref = {DBLP:conf/kbse/2017},\n    year = {2017},\n    pages = {206--216},\n    booktitle = {Proceedings of the 32nd {IEEE/ACM} International Conference on Automated\nSoftware Engineering, {ASE} 2017, Urbana, IL, USA, October 30 - November\n03, 2017},\n    title = {Modular verification of interrupt-driven software},\n    author = {Chungha Sung and\nMarkus Kusano and\nChao Wang},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1109/ASE.2017.8115634",
                "title": "Modular verification of interrupt-driven software",
                "author": "Chungha Sung and\nMarkus Kusano and\nChao Wang",
                "url": "https://doi.org/10.1109/ASE.2017.8115634"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "If you want to check the program's invariants using assert, you have to use in this way.\n\nInstead of using ``assert(a==1)``, you have to write down\n``if (a != 1) { assert(0); }``.\n\nBecause of post dominator relation, I need to implement my tool to support only this case (assert makes the program unreachable so some post dominator relationship is lost).\n\n",
                "type": "Text_excerpt",
                "original_header": "ASSERT Usage"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The source code is a modified version from https://github.com/markus-kusano/watts \n",
                "original_header": "README"
            },
            "confidence": 0.9999231957394418,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The program is an LLVM opt pass. It is built using CMake. \nSince we are using CMake, this likely requires LLVM version 3.6.0 \nModify the CMakeLists file variable APRON_PREFIX to be the location where Apron is installed \nAssuming your LLVM library files are in a standard location (more on this below), simply: \n    mkdir build\n    cd build\n    cmake ../\n    make \nIf you need to tell CMake where LLVM lives, you need to add the option -DLLVM_DIR, e.g., \ncmake -DLLVM_DIR=/home/chungha/src/share/llvm/cmake ../ \nThe directory passed to LLVM_DIR should be the location where the LLVM CMake files are (e.g., LLVM-Config.cmake). \nYou also may need to set -DZ3_INC and -DZ3_LIB to the include directory, and library file for Z3, respectively.\n \n",
                "original_header": "Building"
            },
            "confidence": 0.9868560177756414,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "You need to modify LLVM path and build path in src/test/export.sh file to test program such as LLVM_PREFIX, WORKLIST_SO, Z3_BIN. \n",
                "original_header": "Test Path"
            },
            "confidence": 0.9998948050388188,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": ""
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/sch8906/intAbs/master/README.md"
        }
    ]
}