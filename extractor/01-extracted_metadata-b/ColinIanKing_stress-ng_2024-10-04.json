{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:11:20"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/ColinIanKing/stress-ng",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "ColinIanKing",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2015-06-05T12:05:57Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-03T21:55:16Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/gpl-2.0",
                "type": "License",
                "name": "GNU General Public License v2.0",
                "url": "https://api.github.com/licenses/gpl-2.0",
                "spdx_id": "GPL-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "This is the stress-ng upstream project git repository.  stress-ng will stress test a computer system in various selectable ways. It was designed to exercise various physical subsystems of a computer as well as the various operating system kernel interfaces. ",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Snaps:\n  * stress-ng is not intended to be snap'd with snapcraft. Doing so is strictly\n    against the wishes of the project maintainer and main developer. \n",
                "original_header": "Building stress-ng"
            },
            "confidence": 0.960786739353283,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "name": [
        {
            "result": {
                "value": "stress-ng",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "ColinIanKing/stress-ng",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 1685,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "c, cpu, disk, freebsd, kernel, linux, memory, openbsd, overheating, posix, stress-testing, x86",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 278,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/ColinIanKing/stress-ng/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 6333558
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Roff",
                "name": "Roff",
                "type": "Programming_language",
                "size": 323026
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 24093
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 20826
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 7758
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 1029
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/177950506",
                "tag": "V0.18.05",
                "name": "V0.18.05",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "**stress-ng V0.18.05 \"manic machine masher\"**\r\n\r\n**New Stressors**\r\n  * --sighup, SIGHUP stressor\r\n  * --pseek, pwrite/pread concurrent seek position stressor\r\n \r\n**New Options**\r\n  * --icmp-flood-max-size to specify max random icmp flood packet size\r\n  * --far-branch-flush to force instruction cache flushing\r\n  * --sem-sysv-setall for SYS-V semctl SETALL command\r\n  * --sem-shared for shared semaphore across sem stressors\r\n\r\n**Detailed Changelog**\r\n\r\n  [Denis Ovsienko]\r\n  * README.md: Update Haiku particulars.\r\n  * stress-fcntl: fix multiple workers on Haiku\r\n  * stress-touch: Fix file name handling in stress_touch_dir_clean().\r\n  * Exempt Haiku from scheduling tests.\r\n\r\n  [Lukas Durfina]\r\n  * stress-vm: use correct method names for error messages\r\n  * stress-fp: support bf16\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * README.md: add another kernel bug report\r\n  * stress-tree: only pack tree struct for 64 bit x86-64\r\n  * stress-iomix: don't report an error in EINTR on lseek\r\n  * stress-file-ioctl: only report there are no ioctls tested on instance 0\r\n  * stress-ng.h: define NAME_MAX for systems that don't define this\r\n  * stress-pseek: only define stress_peekio_pthread if using pthreads\r\n  * README.md: add another kernel bug reference\r\n  * stress-bad-ioctl: fix lock segfault on removal\r\n  * stress-cpu: add comment about pcc warning in union exerciser\r\n  * core-*: add gcc function attribute returns_nonnull for extra sanity checking\r\n  * stress-vecfp: minor space adjustments in array declaration\r\n  * stress-jpeg: break some long lines\r\n  * Manual: add notes about support for stress-ng\r\n  * README.md: add some more kernel bugs and performance improvement links\r\n  * README.md: Add another research paper link\r\n  * stress-fd-race: add even/odd fd stride close to random closing\r\n  * kernel-coverage: fix btrfs option -csum, should be --csum\r\n  * stress-close: clean up some block comments\r\n  * Manual: Fix typo \"spinemm\" ->\" \"spinmem\"\r\n  * Manual: minor change, \"note - \" to \"note: \"\r\n  * README.md: Update number of stressors, 350+\r\n  * stress-dev: rename stat bufs to avoid name shadowing\r\n  * core-*: add gcc function attribute nonnull for extra sanity checking\r\n  * README.md: Add Lukas Durfina to contributor list\r\n  * stress-sighup: add send/recv handshake over pipe and sync on child death\r\n  * stress-sighup: add missing bogo-op counter\r\n  * stress-pseek: cast offsets to intmax_t to print with %j format specifier\r\n  * stress-icmp-flood: voidify return from stress_get_setting\r\n  * stress-sighup: add SIGHUP stressor\r\n  * stress-sigtrap: Fix short help, it has the wrong description\r\n  * stress-sigabrt: Fix short help, it has the wrong description\r\n  * stress-sigabrt: fix typo, SIGABORT -> SIGABRT\r\n  * core-asm-riscv.h: fix typo in comment\r\n  * stress-icmp-flood: add new --icmp-flood-max-size option\r\n  * stress-schedmix: remove trailing whitespaces\r\n  * stress-schedmix: add some randomness to deadline times\r\n  * stress-schedmix: add select and pselect timed delays to sched mix\r\n  * Makefile.machine: replace objdump with readelf to detect machine type\r\n  * Makefile: add $(PRE_V) before eigen if statement\r\n  * stress-jpeg: replace division with recipriocal multiply in plasma\r\n  * stress-icmp-flood: don't keep on setting packet up on each loop\r\n  * kernel-coverage: add /usr/sbin to $PATH\r\n  * stress-fp: fix incorrect placement of #if defined for ibm128 division\r\n  * stress-fp: add IBM powerpc ibm128 floating point add/mul/div operations\r\n  * stress-far-branch: add --far-branch-flush option to try to flush instruction cache\r\n  * README.md: update number of stressors, 350 are now available\r\n  * core-helper: add root like detection for Cygwin\r\n  * stress-dev: exercise more sound control ioctls\r\n  * core-config-check: enable oom-avoid for containerized environment\r\n  * stress-daemon: rename err exit labels for improved readability\r\n  * core-klog: log audit kernel log messages\r\n  * stress-dev: use strscpy for safe copying of strings\r\n  * stress-pseek: pwrite/pread concurrent seek position stressor\r\n  * Manual: fix --hdd rd-seq option description\r\n  * Manual: fix --hdd rd-rnd option description\r\n  * stress-hdd: ensure hdd_bytes_max is set to the max number of bytes written\r\n  * kernel-coverage: add --change-cpu per stressor and use --ksm for vm stressor case\r\n  * stress-iomix: exercise cachestat(2) with invalid flags and invalid fd\r\n  * stress-cgroup: add more cgroup controls to read/write\r\n  * stress-dev: exercise ioctl command TIOCCONS\r\n  * stress-dev: add /dev/sg* devices to be exercised by stress_dev_scsi_blk\r\n  * stress-dev: fix DM_LIST_VERSIONS ioctl and add some invalid ioctl calls\r\n  * stress-dev: fix dm ioctl stressor, use /dev/mapper/control\r\n  * stress-ng: remove check to stress_cwd_readwriteable\r\n  * core-config-check: add hint to use --oom-avoid on low memory systems\r\n  * Makefile: add source dependencies for stress-eigen-ops.o\r\n  * kernel-coverage: add more per file system mount options for increased kernel coverage\r\n  * stress-dev: exercise /sys/dev/* files on Linux systems\r\n  * core-helper: add naive Haiku libc information detection\r\n  * README.md: update contributors list\r\n  * stress-binderfs: exercise binderfs dev entry removal\r\n  * stress-mergesort: remove ALWAYS_INLINE from a comment\r\n  * stress-sigq: exercise invalid rt_sigqueueinfo call\r\n  * stress-xattr: exercise xattr on TMPFILE\r\n  * stress-tlb-shootdown: break func args into multiple lines\r\n  * stress-timerfd: minor alignment of data in source\r\n  * stress-sparsematrix: minor optimization hints\r\n  * stress-sock: make stress_send_error a PURE function\r\n  * stress-full: only declare and use variable w for linux builds\r\n  * README.md: Add LP#2080853 bug to known bugs found by stress-ng\r\n  * stress-full: enable of Solaris, FreeBSD and NetBSD\r\n  * stress-full: report errno for seek failures\r\n  * stress-af-alg: fix two heap memory leaks\r\n  * stress-af-alg: fix inverted assocdata allocation failure check\r\n  * Makefile: add rebuild dependency on Makefile.machine\r\n  * Makelfile.machine: remove tabbed empty line\r\n  * core-sort: add copy/swap helper functions for specific and generic sizes\r\n  * stress-fcntl: exercise Linux 6.12 F_CREATED_QUERY fcntl command\r\n  * stress-acl: stress_acl_cmp: constify acl1 and acl2 arguments\r\n  * core-helper: stress_get_libc_version: make educated guess that musl-libc is being used\r\n  * stress-file-ioctl: voidify function arg fd if it's not used\r\n  * core-helper: stress_get_fs_info: voidify filename if it's not used\r\n  * Makefile: make musl-gcc detection more robust\r\n  * README.md: Add another research paper link\r\n  * Makefile: only define _FORTIFY_SOURCE if it's not defined\r\n  * stress-numa: fix typo in comment\r\n  * kernel-coverage: add --interrupts option to each test run\r\n  * kernel-coverage: add --acl-rand option to acl stressor\r\n  * kernel-coverage: add --mmap-slow-munmap to mmap stressor\r\n  * kernel-coverage: add --memfd-zap-pte option to memfd stressor\r\n  * kernel-coverage: add --get-slow-sync get stressor option\r\n  * kernel-coverage: add --swap-self swap option\r\n  * kernel-coverage: add --sockfd -1 --sockfd-reuse test case\r\n  * kernel-coverage: add --yield -1 --yield-sched scheduler tests\r\n  * kernel-coverage: add --c-state to cpu stress test case\r\n  * kernel-coverage: add --cpu -1 --raplstat 1 --rapl test case\r\n  * kernel-coverage: add --sem-shared option for sem stressor\r\n  * kernel-coverage: add --sem-sysv-setall sem-sysv test case\r\n  * stress-af-alg: put fixed sized buffers on the stack rather than heap\r\n  * core-helper: make blocks the correct unsigned type\r\n  * stress-file-ioctl: add some per-file system specific ioctls\r\n  * kernel-coverage: add -v verbose option when running stressors\r\n  * kernel-coverage: run procfs stressors for longer\r\n  * stress-poll: exercise invalid fd being passed into poll()\r\n  * stress-sem-sysv: add option --sem-sysv-setall\r\n  * stress-dev: exercise linux /dev/bsd/* scsi block devices\r\n  * core-setting: print bool type values as true or false\r\n  * core-setting: remove need for dup'ing name string\r\n  * stress-dev: replace __u32 with uint32_t to fix musl libc builds\r\n  * core-*: print per-stressor settings when -v is enabled\r\n  * stress-dev: check for autofs #defines for stress_dev_autofs_linux\r\n",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.18.05",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.18.05",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.18.05",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/177950506",
                "release_id": 177950506,
                "date_created": "2024-10-02T08:08:46Z",
                "date_published": "2024-10-02T08:30:46Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/173938615",
                "tag": "V0.18.04",
                "name": "V0.18.04",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "**stress-ng V0.18.04 \"_canny kernel crusher_\"**\r\n\r\n**Bugfix release, bug fixes:**\r\n * fix vm memory % size parameter handling, https://bugs.launchpad.net/ubuntu/+source/stress-ng/+bug/2078871\r\n * stress-numa: make all of buf map to the current numa node for correct NUMA page moving\r\n * stress-af-alg: remove JMP debug message\r\n\r\n**Detailed Changelog:**\r\n\r\n  * Makefile: bump version\r\n  * Makfile: add Makefile.machine to make dist rule\r\n  * stress-dev: clean up build warning on non-x86 builds\r\n  * stress-numa: rename ptr with str to fix name shadowing warning\r\n  * stress-vm: remove debugging setting if in statement\r\n  * Makefile.machine: add check for existence of readelf\r\n  * core-ftrace: remove PURE attribute on void return functions\r\n  * stress-*: fix vm memory % size parameter handling\r\n  * stress-vm: provide more information when mmap fails\r\n  * stress-numa: make all of buf map to the current numa node\r\n  * stress-numa: parse /proc/self/numa_maps to see if buf is on the expected node\r\n  * core-shim: remove a space\r\n  * core-*: add PURE attribute to pure functions\r\n  * core-killpid: constify variable saved_errno\r\n  * core-cpu: re-order CPUID strings, add some missing examples\r\n  * stress-umount: remove extraneous empty line\r\n  * stress-udp: add missing empty line\r\n  * stress-tmpfs: make variable i const\r\n  * stress-sparsematrix: move pointer next to inner scope\r\n  * stress-sockpair: convert nested if statement into switch statement\r\n  * stress-sigurg: inline helper function stress_send_error\r\n  * stress-sigsegv: remove empty line\r\n  * stress-sigrt: remove empty line\r\n  * stress-set: put rlimit resource ids into a const rlimit_resources array\r\n  * stress-session: make function argument err const\r\n  * stress-rotate: make variables lo and hi const\r\n  * stress-rmap: clean up switch statement, make i a register\r\n  * stress-resched: make variables percent and scale const\r\n  * stress-pci: reduce scope of pointer next\r\n  * stress-opcode: make variable tmp const\r\n  * stress-nice: make variable which const\r\n  * stress-mutex: make variable max const\r\n  * stress-mmap: make variable offset const\r\n  * stress-mlock: make variable mlocked const\r\n  * stress-*: add power10 builtin check support\r\n  * stress-mknod: constify variable j\r\n  * stress-memcpy: use the o1 and o2 variants in the \"all\" method\r\n  * stress-membarrier: remove empty line\r\n  * stress-led: reduce scope of pointer 'next'\r\n  * stress-klog: make buflen const\r\n  * stress-insertionsort: constify variable tmp\r\n  * stress-hdd: constify variable v\r\n  * stress-hash: explicitly use float values in chi computation\r\n  * stress-dev: add naive simple /dev/autofs exerciser\r\n  * stress-chattr: add mmap'd page modification to file, add metrics\r\n  * stress-dev: exercise /dev/cpu/0/msr ioctl reading of TSC\r\n  * stress-dev: add /dev/cpu/0/cpuid device stressor\r\n  * core-*: don't include <sys/sysctl.h> on Linux targets\r\n  * stress-cpu: constify some variables and add register to some variables\r\n  * stress-clock: constify variable clkid\r\n  * stress-chattr: constify variable bitmask\r\n  * stress-cgroup: constify variable offset\r\n  * stress-cacheline: constify variable 'now'\r\n  * stress-mlockmany: remove stray const in start of source\r\n  * stress-bitops: constify some variables\r\n  * stress-apparmor: constify variables, fix p wrap overflow using the ternary operator\r\n  * Manual: add in recursive hints to CPU stressor manual\r\n  * Makefile: improve machine detection and disable -fmodulo-sched for  S390x builds\r\n  * stress-*: constify stressor_info_t structs\r\n  * stress-aiol: constify offset\r\n  * stress-af-alg: remove JMP debug message\r\n  * stress-acl: constify variables, clean up some code alignment\r\n  * stress-*: voidify returns from sig*() calls\r\n  * stress-sem: add --sem-shared option to share 1 semaphore with all sem instances",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.18.04",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.18.04",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.18.04",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/173938615",
                "release_id": 173938615,
                "date_created": "2024-09-06T21:47:25Z",
                "date_published": "2024-09-06T22:54:46Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/172931876",
                "tag": "V0.18.03",
                "name": "V0.18.03",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "**stress-ng V0.18.03 \"_persistent process pressurizer_\"**\r\n\r\n**New Stressors:**\r\n\r\nlockmix - mixed file locking stressor\r\nfibsearch - Fibonacci search (like bsearch, but uses less compute)\r\nbubblesort - inefficient classic bubble sort\r\n\r\n**New options:**\r\n\r\n--c-state - show C state residency at end of stress testing\r\n--pause N - pause N seconds between each stressor invocation to allow for system to cool\r\n, \r\n**New stressor classes:**\r\n  fp, integer, ipc (inter-process communication), sort and vector  \r\n\r\n**Detailed changelog:**\r\n\r\n  [Aboorva Devarajan]\r\n  * core-target-clone: fix power9 target build issue\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * stress-ng: add vector class to --class option\r\n  * stress-dekker: fix failures for out-of-order processors\r\n  * stress-ng: fix -x option for options with - in the name\r\n  * stress-syscall: rename sigset to sigmask to avoid gcc-4.4 variable\r\n    shadowing warning\r\n  * stress-syscall: rename clock to clock_id to avoid gcc-4.4 variable\r\n    shadowing warning\r\n  * stress-shm-sysv: rename syscall to syscall_name to avoid gcc-4.4\r\n    variable shadowing warning\r\n  * stress-jpeg: rename func param time to whence to clean up gcc-4.4\r\n    name shadowing warning\r\n  * stress-fd-race: rename dirfd to dir_fd to avoid gcc-4.4 variable\r\n    shadowing warning\r\n  * stress-enosys: rename func param random to do_random to avoid name\r\n    shadowing gcc 4.4 warning\r\n  * core-shim: rename dirfd to dir_fd to avoid gcc-4.4 variable shadowing\r\n    warning\r\n  * README.md: move kernel issue to correct place in README file\r\n  * README.md: add another kernel issue to bug list for 2024\r\n  * stress-module: only increment bogo counter on successful module load\r\n  * stress-module: check for .ko module name ending\r\n  * stress-module: update module search failure message for compressed kos\r\n  * stress-module: ignore compressed .xz modules\r\n  * stress-module: try several test modules rather than just test_module\r\n  * core-shim: return ret instread of errno in shim_posix_fallocate\r\n  * stress-zlib: reduce checksum to 32 bits for faster compute\r\n  * core-shim: remove unused variable ret\r\n  * core-shim: make shim_posix_fallocate return error code on failure\r\n  * core-shim: check ret rather than errno on posix_fallocate failure\r\n  * core-shim: cater for EOPNOTSUPP in posix_fallocate failure\r\n  * stress-lsm: move ctx and ctx_end to inner loop scope\r\n  * stress-sigurg: clear bogo-op counter flag if child is killed during\r\n    bogo inc\r\n  * README.md: Add another research paper link\r\n  * Manual: fix spelling mistake \"subraction\" -> \"subtraction\"\r\n  * test/test-libgbm.c: replace whitespace with tabs\r\n  * stress-dirdeep: remove debug printf statement\r\n  * stress-personality: check for no personalities using supported\r\n    callback\r\n  * stress-efivar: remove need for packed attribute\r\n  * stress-get: exercise getlogin at end of stressor loop\r\n  * stress-uprobe: report why uprobe cannot be run with static builds\r\n  * stress-get: remove redundant #ifdef\r\n  * stress-bind-mount: check for multiple stat failures on bind mounted\r\n    directory\r\n  * stress-efivar: fix access checks and check on attribute\r\n  * stress-efivar: specify efi var fields in terms of uint8_t types\r\n  * README.md: add another kernel bug found with stress-ng\r\n  * stress-inotify: remove const from helper void arg\r\n  * core-cpuidle: ensure there is plenty of space for filename snprintf\r\n    formatting\r\n  * core-shim: only call stime for glibc < 2.31\r\n  * stress-lsearch: clean up some more pointer constification warnings\r\n  * stress-lsearch: clean up some constification warnings\r\n  * stress-fibsearch: remove re-declaration of pointer ptr\r\n  * stress-bsearch: clean up some constification warnings\r\n  * stress-binderfs: stress_binderfs_supported: return -1 for non-linux\r\n    builds\r\n  * stress-zlib: correct comment for function stress_rand_data_inc16\r\n  * stress-mergesort: minor optimization re-ordering tweaks\r\n  * stress-heapsort: use copy and swap helper for different data sizes\r\n  * stress-sigq: add sigq to IPC class of stressors\r\n  * stress-*: add ipc (inter process communication) class\r\n  * stress-misaligned: use CLOCK_PROCESS_CPUTIME_ID for timer\r\n  * core-time: stress_duration_to_str: add flag report_secs to always\r\n    report secs\r\n  * stess-cgroup: add mount EBUSY retry. Also add mount/umount retry debug\r\n  * core-config-check: fix memory load on string lowstr\r\n  * stress-lockmix: add a mixed file locking stressor\r\n  * core-config-check: warn if the run environment is not suitable for\r\n    stress-ng\r\n  * Manual: Fix grammar on --log-lockless description\r\n  * *.c: remove trailing tabs and white space from ends of lines\r\n  * stress-lsearch: use simpler check to speed up comparisons\r\n  * stress-fibsearch: make array indexes ssize_t for potential -ve ranges\r\n  * stress-bsearch: rename bsearch-ternary to ternary in method option\r\n  * stress-bsearch: add a 3-way ternary search method\r\n  * stress-lsearch: add a key sentinel search method\r\n  * Makefile: add fibsearch (Fibonacci search) stessor\r\n  * stress-hash, stress-tree: add stressors to search class\r\n  * stress-bubblesort: rename bubblesort method to bubblesort-fast\r\n  * stress-sort*: add sort class\r\n  * stress-bubblesort: add bubblesort stressor\r\n  * core-cpuidle: name busy state C0 for x86 and BUSY for other arches\r\n  * README.md: add C-state residency example\r\n  * stress-vm: stress_vm_mod: replace while loop with two if statements\r\n  * core-cpuidle: add C-state measurements with --c-state option\r\n  * kernel-coverage: add umount sanity check on umount failures\r\n  * stress-*: add integer and fp classes\r\n  * stress-vec*: remove CLASS_CPU_CACHE flag\r\n  * stress-fd-race: add helper to close fds in different orders\r\n  * stress-close: exercise flag field with close_range call\r\n  * stress-inotify: remove empty line\r\n  * stress-oom-pipe: fix valid fd check before closing the fd\r\n  * stress-tee: ensure fd is closed on error exit path\r\n  * stress-poll: use correct array index variable for closing fds\r\n  * stress-link: exercise pathconf on oldpath instead of testpath\r\n  * stress-session: close pipe fds on error exit path\r\n  * stress-shm: close pipe fds on error exit path\r\n  * stress-vm-segv: close pipe fds on error exit paths\r\n  * stress-key: replace vararg system call with 5 arg system call\r\n  * stress-fd-race: fix error return paths not cleaning up allocated\r\n    resources\r\n  * stress-close: clean up some file descriptor handling\r\n  * stress-tee: fix error handling closes on pipe file descriptors\r\n  * stress-x86syscall: initialize time1, time2 to zero\r\n  * stress-workload: add check for non-null threads array\r\n  * stress-sysbadaddr: close pipe fds if pipe succeeds\r\n  * stress-inotify: avoid double close on fd\r\n  * stress-syscall: fix fd leaks on pipes on tee syscall stress case\r\n  * stress-daemon: clean up file descriptor closing on error return paths\r\n  * core-helper: fix pipe file descriptor leak on error path\r\n  * core-asm-ret: constify stress_ret_opcode\r\n  * Makefile: add -fivopts -fmodulo-sched optimization options\r\n  * core-target-clones: add power10 cpu support\r\n  * Makefile: remove incorrect scan-build basename check\r\n  * stress-vma: fix void * pointer arithmetic warning on data + offset\r\n  * stress-*: exercise pathconf options on various files\r\n  * stress-get: exercise getlogin since this is a syscall on *BSD systems\r\n  * core-lock: use a single mapped page for all shared locks\r\n  * core-lock: put lock functions into per lock type struct\r\n  * README.md: add another reference link\r\n  * stress-waitcpu: only use umwait for x86-64 and LP64 (non-x32 builds)\r\n  * core-helper: rename stress_x86_smi_readmsr64 to stress_x86_readmsr64\r\n  * core-lock: provide created locks a name to track locks\r\n  * core-lock: add lock type into VMA anon name\r\n  * stress-numa: mmap all allocations and name the anon VMAs\r\n  * stress-numa: add simple page data checking\r\n  * stress-ng: remove \"signal\" from signal termination message\r\n  * stress-opcode: set child signal handlers before stress_shared_readonly\r\n  * stress-*: add some more pointer constifications\r\n  * stress-swap: produce more meaningful swap out metrics\r\n  * stress-misaligned: replace \"got stuck\" with \"not fully tested\"\r\n  * stress-resources: add stress_resources_access to access various\r\n    resources\r\n  * stress-utime: exercise a wide range of huge times with utime\r\n  * Manual: add missing --ipsec-mb-feature option noaesni\r\n  * stress-cyclic: reduce spamming of the same error message with many\r\n    instances\r\n  * stress-binderfs: check in init stage if binderfs mounts are supported\r\n  * stress-intmath: fix incorrect class flags, should be CLASS_CPU |\r\n    CLASS_COMPUTE\r\n  * stress-ng: make g_opt_pause unsigned int and add pause time in\r\n    progress time\r\n  * core-log: increase per line log buffer to 8K\r\n  * stress-ng: add pause option to add pauses between each stressor\r\n    invocation\r\n  * stress-ng: show settings even if no stressors are run\r\n  * core-rapl: align stats with the tz stats\r\n  * stress-intmath: add signed integer math + - * % operations\r\n  * stress-waitcpu: replace ;; with ;\r\n  * stress-prefetch: replace ;; with ;\r\n  * stress-chattr: replace ;; with ;\r\n  * core-vmstat: replace ;; with ;",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.18.03",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.18.03",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.18.03",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/172931876",
                "release_id": 172931876,
                "date_created": "2024-09-01T09:15:30Z",
                "date_published": "2024-09-01T09:44:15Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/168030485",
                "tag": "V0.18.02",
                "name": "V0.18.02",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "**stress-ng V0.18.02 \"_punchy process pounder_\"**\r\n\r\n**New stressors:**\r\n\r\n* bitops - integer bit operations stressor (from Standford bithacks and Hacker's Delight)\r\n* spinmem: spin memory access stressor (for memory contention)\r\n* fd-race: file descriptor open/access/close race stressor\r\n* sigill - SIGILL signal stressor\r\n* sigvtalrm - SIGVTALRM signal stressor\r\n* sigurg - SIGURG signal stressor\r\n\r\n**New options:**\r\n\r\n* rapl - show Intel x86 power utilization using RAPL (Running Average Power Limit)\r\n* raplstat - show periodic Intel x86 power utilization using RAPL\r\n\r\n**Detailed changelog:**\r\n\r\n  [Chunyu Hu]\r\n  * stress-hrtimers: follow sched setting\r\n\r\n  [Myd Xia]\r\n  * stress-ng: add qnx support\r\n\r\n  [Colin Ian King]\r\n  * README.md: remove extraneous spaces in examples\r\n  * README.md: Add RAPL power example\r\n  * README.md: add a I/O permuted stressor example\r\n  * stress-swap: clean up error messages when using stress_get_fs_type\r\n  * core-helper: add ZFS magic\r\n  * Add ELISA presentation \"Improved system stressing with stress-ng\"\r\n  * Manual: fix spelling mistake \"desciptors\" -> \"descriptors\"\r\n  * stress-physpage: fix zero fd check on close\r\n  * stress-chattr: initialize IOC_GETFLAGS arg before calling ioctl\r\n  * stress-sigurg: only use O_ASYNC if it is defined\r\n  * stress-pty: include sys/ioctl.h, cleans up cygwin build warning\r\n  * stress-sockfd: move rc and nbytes declaration into a code block\r\n  * stress-sockfd: add #ifdef around FIONREAD ioctl\r\n  * stress-physpage: use stress_mmap_populate for MAP_POPULATE mmaps\r\n  * stress-zero: cast ptr to clean up mmap warnings\r\n  * stress-sysfs: cast ptr to clean up mmap warnings\r\n  * stress-procfs: cast ptr to clean up mmap warnings\r\n  * stress-physpage: cast ptr to clean up mmap warnings\r\n  * stress-munmap: cast mmap return to munmap_context_t * to clean up pedantic warning\r\n  * stress-efivar: cast efi_var to void * for mmap and munmap\r\n  * stress-fork: cast unmap_start to void * for munmap calls\r\n  * stress-dev-shm: cast addr for mmap, mummap and msync calls\r\n  * core-cpuidle: clean up pedantic warning with gcc 10.3.0\r\n  * core-sched: remove unused function stress_set_deadline_sched\r\n  * Manual: add missing deadline cyclic-policy option, rename ff to fifo\r\n  * stress-cyclic: clear up pedantic warnings when no cyclic methods are available\r\n  * stress-cyclic: clear up pedantic warnings when no scheduling policies are available\r\n  * stress-logmath: fix build issue on Nixos, need lvalue\r\n  * stress-expmath: fix build issue on Nixos, need lvalue\r\n  * stress-sigurg: ignore return from F_SETFD fcntl call\r\n  * stress-gpu: trim newline off infoLog messages\r\n  * stress-open: report number of fds to be used after they have been adjusted\r\n  * stress-open: shrink number of fds if allocation is too large\r\n  * stress-oom-pipe: shrink number of fds if allocation is too large\r\n  * stress-sockfd: limit to 1024 * 1024 file descriptors\r\n  * stress-fd-race: limit to 1024 * 1024 file descriptors\r\n  * stress-userfaultfd: add missing HAVE_POLL_H and HAVE_POLL checks\r\n  * stress-sysbadaddr: add missing HAVE_POLL for bad_poll function\r\n  * stress-sigurg: remove redundant variable msgs\r\n  * stress-fd-race: remove unused variable writes\r\n  * stress-mq: only declare fds if poll() is available\r\n  * Makefile: disable smi stressor for regression tests\r\n  * stress-signest: add missing SIGURG signal\r\n  * stress-shm: retry shm mmap without MAP_ANONYMOUS if EINVAL is returned\r\n  * stress-fractal: cast info.data to void * for munmap call\r\n  * stress-ng: cast mmap return to stress_pid_t *\r\n  * stress-fd-race: move stress_fd_race_context_t declaration\r\n  * stress-fd-race: add build time check for pthread barrier support\r\n  * stress-bad-alt-stack: use zero_stack instead of bad_stack\r\n  * stress-ng: use localtime for completion times\r\n  * stress-ng: report permuted stressors and show progress\r\n  * stress-sigurg: add a SIGURG out-of-band socket signal stressor\r\n  * stress-sigpipe: initialize data before loop\r\n  * stress-sigpipe: remove need for a parent/child mechanism\r\n  * stress-sigill: add a SIGILL illegal instruction signal stressor\r\n  * stress-sigvtalrm: fix help information\r\n  * stress-*: add CLASS_SIGNAL class flags to stressors that generate signal loads\r\n  * stress-sigvtalrm: use user time as run time count check not wallclock time\r\n  * stress-sigvtalrm: sanity check signal count after 1 second of run time\r\n  * stress-sigvtalrm: add SIGVTALRM signal stressor\r\n  * stress-*: add built time check for poll() system call\r\n  * stress-fd-race: randomize syscalls on fd's\r\n  * README.md: add another link to a research paper\r\n  * stress-ng: sanity check if excluded stressor name is valid\r\n  * README.md: update number of stressors\r\n  * stress-fd-race: add ignore list of files not to exercise\r\n  * core-numa: ensure pointer str is initialized to NULL\r\n  * stress-fd-race: add a new stressor to race file descriptor access and closing\r\n  * core-lock: use #if/#elif rather than many #if/#endif sequences\r\n  * core-ftrace: make char * pointer num const\r\n  * stress-h*: add syncwait proc state for --sync-start state waits\r\n  * stress-*: add syncwait proc state for --sync-start state waits\r\n  * core-ignite-cpu: remove unused field cur_freq from struct stress_cpu_setting_t\r\n  * core-cpu-cache: rename index to idx to avoid name shadowing on index()\r\n  * core-affinity: only set cpu affinity if CPU affinity bits are set\r\n  * core-time: stress_duration_to_str: emit 0 secs if no time has been formatted\r\n  * stress-brk: add sanity check for sbrk always returning out of memory\r\n  * stress-spinmem: add CLASS_CPU_CACHE to class flags\r\n  * stress-ramfs: abort early on mount/umount EPERM errors\r\n  * stress-ramfs: cater for EPERM on containerized umount failure\r\n  * stress-io-uring: cater for EPERM on containerized io-uring setup permission denied\r\n  * README.md: make packages list more compact\r\n  * stress-umount: cater for EPERM on containerized mount failure\r\n  * stress-reboot: cater for EPERM on containerized reboot call failure\r\n  * stress-ramfs: cater for EPERM on containerized mount failure\r\n  * stress-netlink-proc: fix skipped rc code, it should be EXIT_NO_RESOURCE\r\n  * stress-numa: skip stressor on EPERM on get_mempolicy\r\n  * stress-netlink-proc: skip stressor on EPERM on bind (containerized)\r\n  * stress-key: skip stressor on EPERM on add_key in container\r\n  * stress-fp-error: relax fp pedantic error checking for musl-gcc builds\r\n  * core-helper: fix macro typo HAVE_COMPILER_MUSC -> HAVE_COMPILER_MUSL\r\n  * stress-binderfs: cater for EPERM on containerized mount failure\r\n  * stress-cgroup: cater for EPERM on containerized mount failure\r\n  * core-thrmal-zone: constify dirent pointer entry\r\n  * core-thrash: constify dirent pointer d\r\n  * core-mounts: constify pointer mnt\r\n  * core-resources: stress_resources_free: constify args parameter\r\n  * core-rapl: constify pointer entry\r\n  * core-numa: constify pointer str\r\n  * core-process: constify pointer ptr\r\n  * core-module: constify pointer l\r\n  * core-cpu-cache: only define type stress_generic_map_t for Linux builds\r\n  * core-cpuidle: constify pointers cpu_d and cpuidle_d\r\n  * stress-rdrand: fix build issues where HAVE_SEED_CAPABILITY is not defined\r\n  * core-parse-opts: add stress_get_{int|uint} prototypes\r\n  * stress-sigabrt: remove volatile from struct pointer sigabrt_info\r\n  * README.md: Add Linux Foundation 2024 ELISA presentation link\r\n  * core-madvise: use unsigned int for major and minor\r\n  * core-perf: add maple_tree/ma_op event\r\n  * stress-bind-mount: skip stressor we don't have access\r\n  * stress-waitcpu: Fix umwait0 and umwait1\r\n  * stress-*: name mmap'd regions to help debugging\r\n  * core-helper: add libc version to yaml output\r\n  * stress-ng: remove trailing tab\r\n  * core-lock: name anonymous mappings\r\n  * stress-ng: name anonymous mappings\r\n  * core-*: name anonymous mappings\r\n  * stress-vma: use stress_set_vma_anon_name to set anon vma name\r\n  * stress-vma: add more prctl macro build time checks\r\n  * Manual: update vma stressor description, 32 pages now being exercised\r\n  * stress-vma: name anonymous pages with prctl\r\n  * stress-vma: move stress_vma_continue_flag to enable mapped regions\r\n  * stress-ng: remove empty lines, reformat a comment block\r\n  * stress-ng: inline helper function stress_get_num_stressors\r\n  * stress-ng: inline helper function stress_append_stressor\r\n  * stress-ng: munge stessor names using stress_readable_name helper\r\n  * stress-ng stress_run_sequential: remove continue if statement\r\n  * stress-jpeg: remove debug\r\n  * stress-jpeg: fix overflow with brown noise generator\r\n  * stress-ng: stress_exclude_unsupported: add check for null stressor->info\r\n  * stress-spinmem: new spin write/read parent/child stressor\r\n  * stress-ng: add stress_readable_name to munge stressor names into a readable form\r\n  * stress-ng: remove stressor id, it's now deprecated\r\n  * stress-ng: stress_exclude_unsupported: match stressors by address and not id\r\n  * stress-ng: rework if (ss->ignore.run) comparisons\r\n  * stress-ng: remove stressor_find_by_name\r\n  * stress-ng: remove need to call stressor_find_by_id to find stressor\r\n  * stress-netlink-task: add static analysis sanity check on nlmsgbuf_len\r\n  * stress-opcode: check for small text lens before proceeding\r\n  * stress-signess: use STRESS_BIT_ULL for bitmask setting (part 2)\r\n  * bash-completion: refresh with new stressor options\r\n  * stress-chroot: add missing ( ) around && errno expressions\r\n  * stress-ng: fix SIGTERM on parent causing child to return bogus EXIT_SIGNALED\r\n  * stress-sock: set starting port to 2000\r\n  * stress-*: use globally defined MIN_PORT, MAX_PORT and cater for port wrap-around\r\n  * core*: stress-*: Fix various spelling mistakes and typos\r\n  * stress-usersyscall: Fix spelling mistake \"syscallls\" -> \"syscalls\"\r\n  * stress-chroot: allow EINVAL and ENAMETOOLONG for Haiku chroot syscall\r\n  * stress-madvise: add missing help in opts for unsupported builds\r\n  * stress-cache: make cache_flags non-clobberable over vfork\r\n  * stress-vm: only define stress_vm_flags when required\r\n  * stress-lease: use opts instead of opt_set_funcs\r\n  * stress-vecfp: use .opts instead of .opt_set_funcs\r\n  * stress-plugin: fix plugin-so option for unimplemented stressor build case\r\n  * stress-besselmath: update to ops for unsupported build paths\r\n  * Manual: fix example code in plugin documentation\r\n  * core-thrash: process fdmem seeking in off_t space\r\n  * stress-dirmany: check for unlikely very small filenames\r\n  * core-helper: stress_exec_text_addr: cater for text end is less or equal the text start\r\n  * stress-netlink-task: avoid underflow on nlmsgbuf_len\r\n  * stress-prio-inv: compute non-negative nice_div\r\n  * core-helper: check for failed sysconf when calculating memory size\r\n  * core-shim: ensure underflow never occurs on emulated fallocate writes\r\n  * core-parse-opts, stress-*: use stress_unimplemented_method for unimplemented methods\r\n  * core-parse-opts: remove debug and cater for zero method options\r\n  * stress-signest: use STRESS_BIT_ULL for bitmask setting\r\n  * core-parse-opts: remove stress_check_power_of_2\r\n  * core-*, stress-*: use new table-driven option parsing\r\n  * README.md: update static build notes for Android\r\n  * README.md: update contributor list\r\n  * stress-mmap: add MAP_DROPPABLE (Linux 6.11+)\r\n  * Makefile.config: add LDFLAGS workaround for older versions of make\r\n  * test-lib*: reference the contents of the function arrays\r\n  * stress-unlink: no need for mode flags when opening existing file\r\n  * stress-bitops: clz(0) -> 32 and not 0, fix this\r\n  * stress-bitops: add macro to handle undefined return for the clz(0) case\r\n  * stress-bitops: use stashed checksum to ensure all computations are performed\r\n  * stress-signest: remove unused function stress_signest_find\r\n  * stress-bitops: fix build error with clang-19\r\n  * stress-bitops: handle zero cases for ctz and clz, add 0x for PRIx formats\r\n  * README.md: add another kernel bug reference\r\n  * core-shim: fully define shim'd statx struct\r\n  * Manual: Add Bit Twiddling Hacks and Hacker's Delight references\r\n  * stress-bitops: Add new bitops stressor --bitops\r\n  * core-vmstat: only report raplstat if delay > 0\r\n  * README.md: add another kernel bug found with stress-ng\r\n  * stress-cgroup: remove tabs at end of lines\r\n  * stress-signest: exercise RT signals if they are available\r\n  * core-helper: stress_get_signal_name(): add RT signal names\r\n  * core-time: fix time reporting where duration > 60 seconds and duration % 60 == 0\r\n  * core-rapl: ignore short time measurement or zero power measurements\r\n  * stress-ng: add --rapl and --raplstat RAPL power measurements\r\n",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.18.02",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.18.02",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.18.02",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/168030485",
                "release_id": 168030485,
                "date_created": "2024-07-31T11:47:36Z",
                "date_published": "2024-07-31T12:12:24Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/163867065",
                "tag": "V0.18.01",
                "name": "V0.18.01",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "**stress-ng V0.18.01 \"synchronized synthetic stressor\"**\r\n\r\n**New stressors:**\r\n* --min-nanosleep to measure minimum time nanosleep will sleep\r\n\r\n**New options:**\r\n* --sync-start to synchronize the start of stressing with invoked stressor instances\r\n* --mmapfork-bytes to specify mmap size\r\n* --yield-sched to specify scheduler type (deadline | idle | fifo | other | batch | rr)\r\n* --pci-dev option to specify a specific PCI device to exercise\r\n\r\n**Detailed changelog:**\r\n\r\n  [Daniel Andriesse]\r\n  * stress-vecwide: fix verify option by setting results vector res\r\n\r\n  [Po-Hsu Lin]\r\n  * stress-cache: check RISCV_HWPROBE_EXT_ZICBOZ support for\r\n    stress_cache_bzero\r\n\r\n  [Sergey Matyukevich]\r\n  * mmapfork: add --mmapfork-bytes option to specify mmap size\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * stress-ng: cast s_pids to void * in munmap to clear up OpenHipster build warning\r\n  * stress-fsize: reduce scope of variable offset\r\n  * stress-pci: reduce scope of i and n_devs\r\n  * stress-landlock: reduce scope of ruleset_fd\r\n  * stress-cgroup: reduce scope of array values and make it static const\r\n  * stress-cache: reduce scope of some variables\r\n  * stress-munmap: add sscanf string size limit to avoid potential buffer overflows\r\n  * core-thermal-zone: use PRIu32 format specifier for uint32_t type\r\n  * core-madvise: add sscanf string size limit to avoid potential buffer overflows\r\n  * stress-chroot: just report chroot escapes with instance 0\r\n  * stress-ng: make stress_pid_t state flag 8 bits\r\n  * stress-kvm: add early /dev/kvm open permission checking\r\n  * stress-fractal: report co-ordinates as (xmin, ymin) .. (xmax, ymax)\r\n  * stress-ng: comment the stress_pid_t helper functions\r\n  * stress-ng: add atomic load/store helpers for stress_pid_t state\r\n  * core-shared-heap: increase initial size of shared heap\r\n  * stress-ng: always send a SIGCONT to a waiting process\r\n  * stress-prio-inv: indicate a force killed bogo op-counter state when child exits\r\n  * stress-ng: remove stress_sync_start_cont, and remove debug\r\n  * stress-open: don't populate mmap'd fd array, it may not be all used\r\n  * stress-ng: stress_sync_start_cont_list: check against number of pids in list\r\n  * stress-ng: stress_sync_start_cont_list: take into account finished stressors\r\n  * stress-timerfd: configure timer after sync start has completed\r\n  * stress-ng: remove unused variable waiting\r\n  * stress-ng: add delay while waiting for stressors to start in loop\r\n  * stress-timer: configure timer after sync start has completed\r\n  * stress-itimer: configure timer after sync start has completed\r\n  * stress-munmap: fix incorrect clz where size_t is not long long\r\n  * stress-min-nanosleep: fix incorrect clz where size_t is not long long\r\n  * core-thermal-zone: clean up formatting of multiply tz names\r\n  * stress-goto: reduce optimization level for clang\r\n  * stress-yield: fix build for various non-linux systems\r\n  * stress-pci: move stress_set_pci_dev to support all arches\r\n  * stress-min-nanosleep: provide unknown sched name\r\n  * stress-min-nanosleep: fix build for various non-linux systems\r\n  * core-ops: forgot to commit the io-uring-rand option\r\n  * io-uring: add --io-uring-rand option for randomized io-uring ops\r\n  * stress-io-uring: reduce memory impact for smaller memory systems\r\n  * stress-*: remove trailing whitespaces\r\n  * Add --sync-start option\r\n  * README.md: add 4 more kernel issues found with stress-ng\r\n  * stress-min-nanosleep: report scheduler name\r\n  * stress-cpu: minor code clean-ups\r\n  * README.md: update contributors name list\r\n  * stress-cpu: matrixprod: align matrices\r\n  * stress-cpu: idct: re-factor, move some calculations out of loop\r\n  * stress-cpu: fft: align data and pass as restrict pointers\r\n  * stress-min-nanosleep: use the more optimal log2 function\r\n  * stress-sleep: fix expected C state delay, fix typo for selects message\r\n  * stress-min-nanosleep: report shorted nanosleep measurement\r\n  * stress-min-nanosleep: add check for short nanosleeps\r\n  * README.md: add Sergey Matyukevich to contributors list\r\n  * Manual: add missing --mmapfork-bytes manual option\r\n  * stress-min-nanosleep: add stressor that measures minimum nanosleep delay times\r\n  * stress-*: pass the number of stressor instances into the stressor init callback\r\n  * core-time: check for CLOCK_REALTIME when using it\r\n  * stress-sleep: use monotonic clock and stress_time_now() clocks for time measurement\r\n  * stress-sleep: fix typo \"to\" -> \"took\"\r\n  * stress-yield: add --yield-sched scheduler options\r\n  * stress-*: use core-sched.h to define HAVE_SCHED_{GET|SET}_ATTR macros\r\n  * core-sched: define HAVE_SCHED_GETATTR and HAVE_SCHED_SETATTR\r\n  * README.md: add one more research paper that references stress-ng\r\n  * stress-workload: use stress_sched_types for scheduler type information\r\n  * stress-schedpolicy: use stress_sched_types for scheduler type information\r\n  * stress-schedmix: use stress_sched_types for scheduler type information\r\n  * core-sched: allow stress_sched_types to be in global scope\r\n  * stress-monte-carlo: print monte-carlo computations as debug\r\n  * stress-ping-sock: add pre-run check and explain why it may fail with EPERM\r\n  * stress-ng: report stressor name in munged format, replace _ with -\r\n  * lib: remove build dependency on libgcrypt20\r\n  * stress-workload: make c static since it's used in pthread contexts\r\n  * stress-pci: Add a new --pci-dev option to specify the pci device\r\n  * stress-shellsort: remove empty line\r\n  * stress-pci: use strcmp on dentry name for sort ordering\r\n  * stress-io-uring: use O_DIRECT when it is available on files",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.18.01",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.18.01",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.18.01",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/163867065",
                "release_id": 163867065,
                "date_created": "2024-07-03T17:36:50Z",
                "date_published": "2024-07-03T18:12:57Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/159147349",
                "tag": "V0.18.00",
                "name": "V0.18.00",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "Stress-ng Release V0.18.00 \"systematic system smasher\"\r\n\r\nNew stressors:\r\n\r\n* mseal Linux 6.10 mseal() system call stressor\r\n* mtx ISO C mutex stressor\r\n* besselmath libm Bessel function stressor\r\n* insertionsort classic O(N^2) insertion sort stressor\r\n\r\nNew options:\r\n* --sockfd-reuse to force reuse of socket file descriptors\r\n\r\nDetailed changelog:\r\n  [Fabrice Fontaine]\r\n  * core-sched.c: fix uclibc-ng build\r\n  * stress-sock.c: fix build without SO_ZEROCOPY\r\n\r\n  [Hsieh-Tseng Shen]\r\n  * stress-cache: add stress_cache_bzero() to support cache-based bzero\r\n  * core-asm-riscv.h: support riscv zicboz ext cbo.zero instruction\r\n\r\n  [John Kacur]\r\n  * stress-ng: stress-stream: Fix use of uninitialized variable\r\n\r\n  [Po-Hsu Lin]\r\n  * core-ops: fix --logmath-ops option\r\n  * core-ops: fix --binderfs-ops option\r\n\r\n  [Colin Ian King]\r\n  * stress-mincore: cater for mincore on NULL returning ENOMEM on kfreebsd\r\n    systems\r\n  * stress-vm-segv: only use mprotect if system call is supported\r\n  * stress-mseal: only use madvise if system call is supported\r\n  * README.md: add two more research papers that reference stress-ng\r\n  * stress-cache: add STRESS_ARCH_RISCV check and voidify func args for\r\n    non-RISC-V\r\n  * stress-flock: voidify i for non-linux builds\r\n  * stress-af-alg: add more verification when using --verify\r\n  * README.md: add another research paper citation\r\n  * Manual: add a couple more stress-ng examples\r\n  * stress-vm-segv: don't unmap self for OS X\r\n  * core-lock: use stress_asm_loong64_dbar for loong64 relax spin lock\r\n    delay\r\n  * stress-urandom: ignore ENOSYS system call returns\r\n  * stress-sigsegv: allow BUS_ADRERR for bus error codes\r\n  * stress-fcntl: add Linux 6.10 fcntl command F_DUPFD_QUERY, improve\r\n    checking\r\n  * stress-cache: remove extraneous {\r\n  * stress-cache: remove unused cache flags more succinctly\r\n  * core-lock: disable atomic spin locks for ARM\r\n  * stress-af-alg: replace spaces with tab in indentation\r\n  * core-resources: allocate mutexes for each resource array loop\r\n  * core-resources: use ISO C mtx mutex resources\r\n  * stress-af-alg: add forced abort after 5 seconds of alarms\r\n  * stress-af-alg: add checks for EINTR on recv/send calls\r\n  * core-mincore: add MADV_POPULATE_WRITE to madvise flags\r\n  * core-vecmath: add check for 32 bit PPC to work around build issue\r\n  * core-lock: only perform backoff for fast CPU relax pauses\r\n  * README.md: add another kernel issue found by stress-ng\r\n  * stress-efivar: ensure stress_efi_var_t is aligned to clean up build\r\n    warning\r\n  * core-lock: remove ARM yield, fallback to shim_sched_yield\r\n  * core-cpu-cache: fix bitmask of cache coherency line size\r\n  * core-lock: fix missing spinlock destroy when removing a spinlock\r\n  * Makefile: allow COVERITY=1 to disable macros that confuse cov builds\r\n  * stress-mseal: cast pointer to uint8_t * to clean up void * pointer\r\n    addition warnings\r\n  * stress-vm-segv: make addr a uint8_t * pointer to simplify pointer\r\n    addition\r\n  * stress-*: rename variable index to avoid name shadowing with lib\r\n    function index\r\n  * stress-sysbadaddr: reduce scope of variable newargv\r\n  * stress-sleep: ensure residency_ns is computed using unsigned long\r\n    multiplication\r\n  * stress-nanosleep: reduce scope of variable i\r\n  * stress-mmaphuge: reduce scope of array filename\r\n  * stress-mmapfiles: reduce scope of variable delta\r\n  * stress-iomix: reduce scope of variable ret\r\n  * stress-fork: reduce scope of variable pid\r\n  * stress-dirname: rename dirname to dirpath to avoid name shadowing\r\n    dirname function\r\n  * stress-dirdeep: constify char * pointer name\r\n  * stress-crypt: reduce scope of string str\r\n  * stress-cgroup: reduce scope of some variables\r\n  * core-config-check: constify static char array path[]\r\n  * stress_rndstr: remove decrement of len in stress_rndstr, make len\r\n    const\r\n  * core-ftrace: constify a few char * pointers\r\n  * stress-sysbadaddr: add mseal()\r\n  * stress-sysinval: add mseal\r\n  * stress-enosys: add mseal system call\r\n  * stress-vm-segv: force stack segv by mprotecting pages to PROT_READ\r\n  * stress-vm-segv: force zero optimization to ensure stackvar is on stack\r\n  * stress-vm-segv: ensure stackvar is written to and read from\r\n  * stress-bad-altstack: fix OpenBSD, add MAP_STACK and don't throw errors\r\n  * stress-vm-segv: unmap stack to force SIGSEGVs in child\r\n  * core-cpu-cache.h: include <stdarg.h> for shim_builtin_prefetch()\r\n  * stress-timerfd: open file_fd before all timer fds are opened\r\n  * stress-mmap: make rc non-clobberable due to longjmp\r\n  * core-shim: force emulation if posix_fallocate returns EINVAL\r\n  * stress-mseal: replace variable fail with boolean keep_running\r\n  * Makefile.config: remove some debug echos\r\n  * stress-mseal: add Linux 6.10 mseal system call exercising stressor\r\n  * Makefile.config: add libgmp when checking libmpfr\r\n  * stress-mutex: remove OpenBSD sleep\r\n  * core-mwc: re-work mwc*modn() using bit masking and removing modulo\r\n    operation\r\n  * stress-vm-segv: remove clflush for OpenBSD as this causes issue\r\n  * stress-mlock: ensure max is not larger than the max number of mappings\r\n  * stress-mutex: fix some potential race issues\r\n  * stress-mutex: NetBSD requires the yield and sleep\r\n  * stress-mutex: use zero usleep instead of yield for NetBSD\r\n  * core-shim: emulate posix_fallocate for FreeBSD\r\n  * stress-sigsegv: remove __OpenBSD__ check now that BUS_OBJERR is used\r\n  * stress-sigsegv: handle SIGBUS code with correct BUS_OBJERR\r\n  * stress-fp-error: relax fp error checks on soft-float builds\r\n  * README.md: add another citiation\r\n  * stress-schedmix: remove trailing space at end of a line\r\n  * core-mwc: remove tab in empty line\r\n  * core-mwc: use stress_get_machine_id to add extra data to seed\r\n  * core-helper: add stress_get_machine_id to get a 64 bit machine id\r\n  * stress-dup: only use O_CLOEXEC if it is defined for dup3 calls\r\n  * stress-tun: cast int value to uint8_t type for PRIu8 format\r\n  * stress-schedmix: ensure all pids in pids array are initialized to -1\r\n  * stress-dev-shm: use correct format strings for unsigned type\r\n  * core-parse-opts: use correct format strings for unsigned types\r\n  * core-ignite-cpu.c: use correct format strings for int types\r\n  * stress-vnni: force -O2 at -Os/-Oz as well\r\n  * core-helper: fix spelling mistake in comment\r\n  * stress-ng.h: increase per-stressor metrics STRESS_MISC_METRICS_MAX\r\n    to 96 for af-alg\r\n  * stress-loadavg: remove system limit of pthreads when reducing\r\n    loadavg-max\r\n  * core-ftrace: show failed open filename in error message\r\n  * stress-besselmath: use double precision for check sum on float bessel\r\n    functions\r\n  * stress-netlink-task: break out of loop on EINTR or EAGAIN sendto\r\n    errors\r\n  * stress-vm: remove redundant assignments to pointer ptr\r\n  * stress-prime: remove redundant assignment to variable rate\r\n  * stress-munmap: fix file descriptor resource leak on error return path\r\n  * stress-af-alg: add some sanity checks on digest and info args\r\n  * stress-fault: ensure buffer is zero'd\r\n  * core-job: zero string txt, keep cppcheck happy\r\n  * clear up pedantic cppcheck warning\r\n  * core-builtin.h: remove long cast workaround macros for Bessel shim\r\n    wrappers\r\n  * core-buildin: fix j*l macros\r\n  * core-lock: uncomment #undefs used for debugging new locks\r\n  * stress-dev: include missing <sys/ioctl.h>\r\n  * stress-ng.h: move #include <sys/times.h> into sources that require it\r\n  * stress-ng.h: move #include <stdarg.h> into sources that require it\r\n  * stress-ng.h: remove #include <sys/file.h>, it was commented out\r\n  * stress-ng.h: move #include <sys/file.h> into sources that require it\r\n  * stress-ng.h: move #include <sys/ioctl.h> into sources that require it\r\n  * core-shim: add __NR_fallocate check for fallocate syscall\r\n  * stress-ng.h: move #include <ctype.h> into sources that require it\r\n  * README.md: add two more kernel improvement references\r\n  * stress-ng: make stress_exclude_unimplemented static\r\n  * stress-ng.h: remove commented out math.h include\r\n  * stress-ng.h: move <math.h> into sources that require it\r\n  * stress-*: add ( ) around expressions\r\n  * core-*: add ( ) around expression\r\n  * core-cpu-cache: fix misplaced )\r\n  * core-parse-opts: use standard seconds in a year and not equinoctial\r\n    seconds\r\n  * core-lock, stress-mtx: add build time checks for mtx_destroy, mtx_init\r\n  * stress-mtx: add mtx_t check and remove need for stack size attr\r\n  * core-lock: add OSI C mtx mutex option for locking\r\n  * stress-mtx: remove includes that are not required\r\n  * core-lock: lock name for sysv semaphore\r\n  * stress-mutex: fix --mutex-procs option\r\n  * stress-mtx: Add new ISO C mtx (mutex) stressor\r\n  * stress-besselmath: add a new Bessel function stressor\r\n  * stress-sockfd: voidify return from stress_socket_fd_send\r\n  * stress-insertionsort: add new insertion sort stressor\r\n  * core-ops: fix --powmath-ops option\r\n  * Manual: update list of classes for the --class option\r\n  * stress-ng: annotate stress_sigalrm_info_t fields and make sigalrm_info\r\n    static\r\n  * stress-ng: add global lock create/destroy helpers\r\n  * stress-ng: fix incorrect name of function in comment\r\n  * stress-sockfd: add new --sockfd-reuse option to re-use file descriptor\r\n  * Manual: add size of the matrix-3d stressor matrix to the documentation\r\n  * Manual: add size of the matrix stressor matrix to the documentation\r\n  * core-ops: fix --expmath-ops option\r\n  * stress-zlib: add metric for the amount of input data that has been\r\n    compressed\r\n  * stress-sigchld: replace debug SIGCHLD stats with metrics\r\n  * stress-seek: add total number of seeks metric\r\n  * stress-rawpkt: move debug packet stats to metrics\r\n  * stress-link: add link create/remove rate metrics\r\n  * stress-key: add successful key add/operation/remove rate as metric\r\n  * stress-icmp-flood: replace sendto % success debug with metrics\r\n  * Makefile: remove empty lines\r\n  * stress-dup: add number of dup calls as a metric\r\n  * stress-aiol: add total number of successful async I/O events metric\r\n  * stress-factor: report maximum factor digit size as a metric\r\n  * stress-aio: report total number of async I/O signals using metrics\r\n  * stress-*: rename GEOMETRIC_MEAN and HARMONIC_MEAN metric macros\r\n  * stress-prime: add metrics for total primes found and maximum digits\r\n    found\r\n  * stress-ng: add metrics for total and maximum values\r\n  * stress-*: Remove HOT attribute\r\n  * stress-cpu: add more information on ackermann failure message\r\n  * stress-fractal: use stress_lock_acquire_relax() to reduce atomic lock\r\n    contention\r\n  * core-lock: add stress_lock_acquire_relax()\r\n  * stress-lsm: use ~0 for invalid ctx addr, re-work error messages\r\n  * stress-nanosleep: remove \"just\" from C states message\r\n  * stress-ipsec-mb: remove \"none detected\" if no features are found\r\n  * stress-ng: no need to check metrics if no stressors actually ran\r\n  * stress-ng: report unimplemented stressors early and don't execute them\r\n  * stress-rawdev: remove duplicated rawdev name in skipped message\r\n  * stress-lsm: remove whitespace in tabs\r\n  * stress-lsm: fix missing shim_lsm_set_self_attr helper\r\n  * core-lock: include asm headers for arch specific pause/yield ops\r\n  * stress-rtc: ignore ioctl EINVAL errors if the ioctl is not implemented\r\n  * stress-rtc: ignore RTC_ALRM_READ EINVAL errors if the ioctl is not\r\n    implemented\r\n  * stress-crypt: fix performance issues with crypt_r data\r\n  * core-shim: add mseal shim wrapper\r\n  * stress-lsm: exercise lsm set with invalid ctx_len\r\n  * core-lock: always inline helper function stress_lock_valid()\r\n  * core-lock: add pause/yield in spinlock for architectures other than\r\n    x86\r\n  * core-asm-arm.h: declare stress_asm_arm_yield when HAVE_ASM_ARM_YIELD\r\n    is defined\r\n",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.18.00",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.18.00",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.18.00",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/159147349",
                "release_id": 159147349,
                "date_created": "2024-06-06T08:54:13Z",
                "date_published": "2024-06-06T08:49:00Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/153777024",
                "tag": "V0.17.08",
                "name": "V0.17.08",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "stress-ng V0.17.08 \"consummate cpu crusher\"\r\n\r\nNew stressors:\r\n  * fractal stressor (Na\u00efve concurrent implementations of Mandelbrot and Julia set fractal generators)\r\n  * prime stressor (Prime search using GNU Multiple Precision Arithmetic Library for large integers)\r\n  * unlink stressor (Exercise concurrent racy unlinking of files)\r\n\r\nNew options:\r\n  * --yield-procs to specify number of child processes per stressor\r\n  * --prime-start N option to specify starting point of search\r\n  * --swap-self option to force self process pages out\r\n  * --fork-pageout option to force pages to be paged out\r\n  * --prime-progress option to periodically show prime finding progress\r\n  * --get-slow-sync option to force get stressor system calls to be called in sync\r\n \r\nImportant Fixes:\r\n * Fix page overflow on edge cases of non-libc mergesort\r\n * Ensure system call and test error failures are fully propagated to error status at end of stressors \r\n\r\nDetailed Changelog:\r\n\r\n  [ruihongw]\r\n  * fix spelling of lsm_list_modules in Makefile.config\r\n\r\n  [Yiwei Lin]\r\n  * Fix unterminated cpu-stress if non 0% or 100% load\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * stress-epoll: fix missing space after comma in error messages\r\n  * README.md: add another bug found by stress-ng\r\n  * stress-sigfpe: report SIGILL trap information when --verify is used\r\n  * stress-sigfpe: handle unexpected SIGILL signals\r\n  * stress-rtc: silently ignore RTC sys read EINVAL errors\r\n  * stress-rtc: don't fail on ENOENT errors\r\n  * stress-tsearch: remove double comma\r\n  * stress-rtc: fix error handling, don't fail on EINTR or EPERM\r\n  * stress-mergesort: remove MAP_32BIT\r\n  * stress-mergesort: fix out of bounds copy\r\n  * stress-unlink: use shim'd versions of fsync and fdatasync\r\n  * stress-swap: ensure opt_set_funcs and stress_set_swap_self are\r\n    declared for all builds\r\n  * stress-io: fix build issues when HAVE_SYNCFS is not defined\r\n  * core-out-of-memory: move #define of WAIT_TIMEOUT to fix non-linux\r\n    builds\r\n  * stress-judy: clean up variable shadowing warning\r\n  * stress*: Add compute to the --class option for high compute stressors\r\n  * stress-prime: fix spelling mistakes in comments\r\n  * stress-factal: fix spelling mistake of Mandelbrot\r\n  * stress-ng: fix --permute with checksum verification enabled\r\n  * stress-fractal: minor tweaks to reduce front end delays and improve\r\n    core utilization\r\n  * stress*: Add search to the --class option for searching stressors\r\n  * Manual: remove duplicated comma\r\n  * stress-fault: fix fd leak on error path\r\n  * stress-fractal: add Mandelbrot and Julia set fractal stressor.\r\n  * stress-*: clean up errno handling\r\n  * core-ftrace: remove redundant initialization of pointer num\r\n  * core-klog: remove redundant initialization of pointer msg\r\n  * stress-yield: constify variable residual\r\n  * Manual: waitcpu: add more per-processor notes for waiting\r\n    instructions\r\n  * stress-yield: add --yield-procs option, specify child processes per\r\n    stressor\r\n  * stress-forkheavy: fix typo in comments forke -> fork\r\n  * Makefile: improve toolchain detection, fixes scan-build builds\r\n  * stress-pidfd: ensure return code in rc is returned to parent\r\n  * stress-mq: ensure child rc status is returned to parent\r\n  * stress-judy: re-work rc status so the default is EXIT_FAILURE\r\n  * stress-hsearch: ensure rc is set to EXIT_SUCCESS for success path\r\n  * stress-file-ioctl: assign rc to EXIT_NOT_IMPLEMENTED and not ret\r\n  * stress-close: remove redundant assignments to rc\r\n  * core-mwc: remove unused 32 bit mwc implementation\r\n  * Makefile.config: fix float checks, need LIB_MATH not LIB_M\r\n  * stress-prime: add --prime-start N option to specify starting point\r\n    of search\r\n  * stress-fork: add #ifdef check around MADV_PAGEOUT\r\n  * stress-swap: add --swap-self option to force self process pages out\r\n  * stress-fork: make --fork-pageout more aggressive, do all maps\r\n  * stress-prime: remove empty line\r\n  * stress-fork: add --fork-pageout option to force pages to be paged out\r\n  * stress-prime: add hourly prime rate in --prime-progress output\r\n  * README.md: update contributors list\r\n  * stress-prime: move variables and a function to clean up build warning\r\n  * stress-enosys: fix typo: SYS_lsm_modules -> SYS_lsm_list_modules\r\n  * Manual: clarify the time between each prime progress update\r\n  * core-builtin: fix macros and shims\r\n  * Manual: add new --primes-progress option, fix prime-ops name\r\n  * core-log: don't report timestamp if localtime_r does not exist\r\n  * stress-prime: add --prime-progress option to periodically show prime\r\n    finding progress\r\n  * stress-prime: add long integer prime computations stressor\r\n  * stress-factor: fix short description of stressor\r\n  * stress-unlink: add end of test check in link phase, add missing\r\n    deinit state\r\n  * stress-unlink: make file syncs less frequent\r\n  * core-config-check: minor re-phrasing of scaling governors note\r\n  * stress-unlink: remove some whitespaces\r\n  * stress-unlink: use random open flags\r\n  * stress-unlink: add occasional fd sync'ing and data syncing\r\n  * Manual: correct the --vm-bytes description.\r\n  * stress-unlink: add new stressor to exercise concurrent racing unlink\r\n    calls\r\n  * stress-dev: add a few more HID specific ioctls\r\n  * stress-dev: add linux frame buffer /dev/fb* ioctl exercising\r\n  * core-version.h: wrap macro parameters with ( )\r\n  * core-io-priority: wrap macro parameters with ( )\r\n  * core-builtin: wrap macro parameters with ( ), align macros\r\n  * Manual: replace ',' with '|' in the --prio-inv-policy option\r\n  * Manual: replace ',' with '|' in --fd-fork-file option\r\n  * core-builtin: fix brackets on shim'd helpers shim_ccosl and\r\n    shim_csinl\r\n  * stress-get: add --get-slow-sync option to force get system calls to\r\n    be in sync\r\n  * stress-zlib: use shim wrapped sin function\r\n  * stress-remap: remove empty line\r\n  * stress-monte-carlo: use shim'd math functions\r\n  * core-builtin: add hyperbolic sin, cos float and double shim wrappers\r\n  * stress-*: constify variables\r\n  * core-helper: remove duplicated null check on gpu_freq\r\n  * stress-*: ensure EXIT_FAILURE is returned on failures\r\n  * stress-sockdiag: rename rc to ret and ret to rc\r\n  * stress-cacheline: ensure EXIT_FAILURE is returned on data corruption\r\n  * stress-bsearch: ensure EXIT_FAILURE is returned on data mismatches\r\n  * stress-ng: set success flag to false on EXIT_SIGNALED exits\r\n  * stress-bitonicsort: ensure EXIT_FAILURE is returned on data\r\n    mismatches\r\n  * stress-bigheap: ensure EXIT_FAILURE is returned on memory failures\r\n  * stress-affinity: remove space\r\n  * stress-matrix-3d: ensure EXIT_FAILURE is returned on data mismatch\r\n  * stress-matrix: ensure EXIT_FAILURE is returned on data mismatch\r\n  * stress-ng: fix missing FAILED flag increment for EXIT_SIGNALED state\r\n  * stress-fma: increment b in add231 to force use of fma instruction\r\n  * stress-filename: make static array posix_allowed const\r\n  * stress-acl: make static array stress_acl_tags const\r\n  * stress-workload: add some constifications and UNLIKELY on an if\r\n  * stress-io-uring: improve termination by enabling various flags\r\n  * core-out-of-memory: give at least 2 minutes before giving up waiting\r\n    for OOMable child processes\r\n  * stress-ng: bail out with EXIT_NO_RESOURCE on sched_settings_apply\r\n    call\r\n  * stress-inotify: replace __s32 with int32_t\r\n",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.08",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.08",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.08",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/153777024",
                "release_id": 153777024,
                "date_created": "2024-05-02T07:59:31Z",
                "date_published": "2024-05-02T08:09:42Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/149855816",
                "tag": "V0.17.07",
                "name": "V0.17.07",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "stress-ng V0.17.07 \"trusty task trasher\"\r\n\r\nKey Highlights:\r\n\r\n * New powmath stressor (power math functions)\r\n * New expmath stressor (exponent math functions)\r\n * New logmath stressor (logarithmic math functions)\r\n * New LSM stressor (exercise Linux LSM lsm_list_modules and lsm_get_self_attr system calls)\r\n * New statmount stressor (exercise Linux statmount and listmount system calls)\r\n * New --fma-libc option to use libc fma functions (if available)\r\n * New --memhotplug-mmap option to exercising mmap/munap during memory hotplugging\r\n * New walking flush vm stressor method to walk through memory doing writes followed by cache flushes\r\n * New --mmap-stressful option to enable all --mmap options to make mmap stressor more stressful\r\n\r\nFixes:\r\n * Porting fixes to support modern Solaris systems\r\n * Improve vecshuf performance (regression due to using -O3 on gcc on vec ops)\r\n\r\nDetailed changelog:\r\n\r\nstress-ng (0.17.07-1) unstable; urgency=medium\r\n\r\n  [Stian Onarheim]\r\n  * core-stressors.h: Sort the stressor list\r\n\r\n  [Amit Singh Tomar]\r\n  * stress-vm: fix the stress_vm_check argument name\r\n\r\n  [Erik Stahlman]\r\n  * Remove write potentially outside of buffer\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * Manual: fix table T{ T} around --eigen-method add-double\r\n  * core-shared-heap: double size of shared heap allocation slab\r\n  * core-helper: move gpu_freq null check to start of function\r\n    stress_get_gpu_freq_mhz\r\n  * stress-zlib: negative read size check\r\n  * core-helper: move null ptr checks earlier in stress_get_meminfo\r\n  * core-helper: add #else path in stress_get_load_avg\r\n  * stress-fma: voidify return from stress_get_setting call\r\n  * core-helper: add endianness information\r\n  * stress-pty: break out of loop if EINTR occurs on pty open\r\n  * stress-access: set errno to 0 before access calls\r\n  * stress-filename: ignore ENOTSUP failures\r\n  * stress-msyncmany: break out of test loop if failed more than 5 times\r\n  * stress-filename: add ENOSUP error check for Solaris\r\n  * stress-clock: ignore EINTR for clock_nanosleep for Solaris\r\n  * stress-clock: ignore EINTR for clock_gettime for Solaris\r\n  * Add build check and use <sys/mkdev.h> for makedev() macro\r\n  * Makefile: enable compile/link garbage collection when GARBAGE_COLLECT\r\n    is set to 1\r\n  * stress-powmath: increase precision for float tests sum and result to\r\n    double\r\n  * stress-logmath: increase precision for float tests sum and result to\r\n    double\r\n  * stress-expmath: increase precision for float tests sum and result to\r\n    double\r\n  * stress-fma: munmap pfma and not fma\r\n  * stress-x86syscall: make function wrap_dummy static\r\n  * core-helper: make function stress_fs_magic_to_name static\r\n  * stress-powmath: compare floating point values using difference and\r\n    precision\r\n  * stress-logmath: compare floating point values using difference and\r\n    precision\r\n  * stress-expmath: compare floating point values using difference and\r\n    precision\r\n  * stress-enosys: fix system call name __NR_lsm_list_modules\r\n  * README.md: update contributor list\r\n  * Makefile.config: break functions into 1 line entries and sort them\r\n  * Makefile.config: break types into 1 line entries and sort them\r\n  * Makefile.config: break cpufeatures into 1 line entries and sort them\r\n  * Makefile.config: rename *_WCHAR to *_WCHAR_H to match header naming\r\n  * Makefile.config: break headers into 1 line entries and sort them\r\n  * core-helper: fix error return code, should be EINVAL\r\n  * stress-powmath: remove redundant cast on sum addition\r\n  * stress-expmath: remove redundant cast on sum addition\r\n  * stress-logmath: remove redundant cast on sum addition\r\n  * stress-cgroup: add missing wait for each fork'd child\r\n  * core-helper: make stress_fs_magic_to_name static\r\n  * core-time: manually inline stress_timespec_to_double into code\r\n  * core-perf: make stress_perf_stat_succeeded static\r\n  * stress-x86syscall: remove dummy_x86syscalls\r\n  * Makefile: add linker garbage collection to remove unreferenced\r\n    sections\r\n  * core-helper: add some argument sanity checking\r\n  * stress-syscall: add maximum system call time in nanoseconds\r\n  * stress-syscall: add lsm_list_modules and lsm_get_self_attr system\r\n    calls\r\n  * stress-enosys: add lsm_list_modules and lsm_get_self_attr system calls\r\n  * stress-powmath: add hypotenuse functions\r\n  * stress-fma: disable FP_FAST_FMA, FP_FAST_FMAF for now\r\n  * stress-mathlog: add logb, logbf and logbl exponent get libc functions\r\n  * stress-fma: add the --fma-libc option to use libc fma functions\r\n  * README.md: update number of tests\r\n  * stress-powmath: add power maths function exercising\r\n  * stress-vecshuf: for x86, reduce optimization levels to avoid STLF\r\n  * stress-vnni: add build time check for target clone avxvnni\r\n  * stress-memhotplug: make variable max non-clobberable by longjmp\r\n  * core-target-clones: remove need for gcc version check\r\n  * stress-vecshuf: remove OPTIMIZE3 setting\r\n  * stress-expmath: add exponential maths function exercising\r\n  * README.md: add a couple more paper references\r\n  * stress_vm_walking_flush_data: fix buffer overflow on last 7 bytes\r\n  * README.md: update contributors list\r\n  * stress-logmath: add logarithmic maths function exercising\r\n  * README.md: Add another publication link\r\n  * memhotplug: add --memhotplug-mmap option\r\n  * stress-prio-inv: ensure parent has higher priority than children\r\n  * stress-prio-inv: break kill and wait into separate phases\r\n  * README.md: add missing newline\r\n  * README.md: add some more upstream linux git commit references\r\n  * stress-acl: fix typo in unimplemented_reason string\r\n  * stress-lsm: exercise new LSM system calls lsm_list_modules and\r\n    lsm_get_self_attr\r\n  * core-cpu: remove trainling white space\r\n  * stress-statmount: Add new stressor to exercise statmount and\r\n    listmount system calls\r\n  * stress-file-ioct: exercise FS_IOC_GETFSSYSFSPATH\r\n  * stress-file-ioctl: add FS_IOC_GETFSSYSFSPATH ioctl\r\n  * stress-vm: add walking memory flush stress method\r\n  * core-cpu: add a couple more obscure CPU id strings\r\n  * stress-monte-carlo: add area of a unit squircle\r\n  * kernel-coverage: add --mmap-stressful option\r\n  * stress-malloc: add malloc_usable_size allocation size verification\r\n  * Makefile.config: filter out -Werror from CFLAGS\r\n  * core-perf: remove duplicated \"Cgroup Switches\" event",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.07",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.07",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.07",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/149855816",
                "release_id": 149855816,
                "date_created": "2024-04-04T21:46:50Z",
                "date_published": "2024-04-04T22:12:17Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/144913552",
                "tag": "V0.17.06",
                "name": "V0.17.06",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "New features:\r\n   * New fd-fork stressor, force copying of tens of thousands of file descriptors on fork() system calls\r\n   * New bitonicsort stressor: sort 32 bit integers using bitonic sort, exercises integer compare, copying/cache/memory.\r\n   * Add more signals in the nested signal signest stressor\r\n   * New --progress option to show --seq stressor progress and expected end of run time\r\n   * Add Arrowlake and Pantherlake CPU support for target clones gcc optimizations\r\n   * Add IRQ tasklet entry/exit events, IPI Raise event, swiotlb event to --perf option\r\n   * Add --crypt-method option to allow crypt stressor to be selected\r\n   * Add --fork-unmap option to fork stressor to force unmapping of shared libs to speed up forks\r\n   * Add --fpunch-bytes option to fpunch stressor to specify fpunch file size\r\n   * Add --vforkmany-bytes option to specify mmap size\r\n   * Add NUMA hit/miss metrics to numa stressor\r\n   \r\nFixes:\r\n  * Fix aiol stressor race condition on termination of pending I/Os\r\n  * Fix race on peterson stressor with modern out-of-order execution ARM CPUs\r\n\r\nDetailed changelog:\r\n\r\n  [Hsieh-Tseng Shen]\r\n  * Manual: fix a few typos\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * stress-fd-fork: fix comment for STRESS_FD_DEFAULT\r\n  * stress-fd-fork: fix spelling mistake \"discriptors\" -> \"descriptors\"\r\n  * test/test-utime: zero buf\r\n  * test/test/test-pthread-setaffinity-np: zero cpuset\r\n  * stress-fork: voidify pid\r\n  * Makefile.config: ensure all CONFIG_LDFLAGS are passed through\r\n    LIB_ORDER filter\r\n  * stress-sigsegv: ignore SEGV_ACCERR error check on OpenBSD\r\n  * stress-hsearch: typedef ACTION if we don't have native hsearch support\r\n  * Makefile.config: workaround a make issue on Nixos, add empty echo in\r\n    loop\r\n  * stress-aiol: fix interrupted or end of stressing aiol waits with -1\r\n    return\r\n  * stress-peterson: add mfence to fix failures on out-of-order ARM cpus\r\n  * stress-pci: report untested PCI rates as \"unknown\" rather than 0.00\r\n  * stress-ng.h: only define _FILE_OFFSET_BITS if it is not defined\r\n  * stress-signest: add some more signals, sort them in name order\r\n  * Makefile: add --cache-enable-all for slow-test-all and verify-test-all\r\n  * stress-chroot: fix placement of colon in chroot escape message\r\n  * stress-ng: add a few more percent wiggle room on end of run estimate\r\n  * stress-stream: improve memrate message\r\n  * stress-mq: add note to increase /proc/sys/fs/mqueue/queues_max for\r\n    linux\r\n  * stress-kvm: report KVM kernel API as a debug message\r\n  * stress-dev: add notes about running as root to exercise more devices\r\n  * Makefile: add --progress and remove --verbose from verify-test-all\r\n    and slow-test-all\r\n  * stress-mlock: remove extranous space in debug message\r\n  * stress-fd-fork: report approx number of fds\r\n  * stress-fd-fork: report how many fds were closed\r\n  * core-shim: add warning disabling pragma on extern stime declaration\r\n  * stress-fork: handle 32/64 bit address for 32 bit systems\r\n  * stress-enosys: don't exercise > 32 bits for 32 bit systems\r\n  * stress-exec: only use MAP_STACK if it is defined\r\n  * stress-memfd: remove duplicated declaration of fd\r\n  * stress-cpu-online: remove duplicated declaration of variable cpu\r\n  * stress-monte-carlo: declare stress_mc_supported for HAVE_ARC4RANDOM\r\n  * stress-fork: voidify unused arg fork_unmap for non-linux builds\r\n  * stress-cache: voidify cache related flags and mask\r\n  * stress-dev: swap calloc arguments to the correct way around\r\n  * core-target-clones: add Arrowlake and Pantherlake CPU support\r\n  * Dockerfile: remove kmod and xxhash\r\n  * Dockerfile: add mpfr and judy from community repos\r\n  * stress-sigsegv: methodically exercise reads from all VM address range\r\n  * core-perf: add swiotlb perf event and bump event count up as we are\r\n    running low\r\n  * core-perf: add IRQ tasklet entry/exit metrics\r\n  * core-perf: add IPI Raise event\r\n  * stress-resources: only declare ppid if HAVE_PIDFD_OPEN is defined\r\n  * stress-cpu-online: ensure cpu is initialized\r\n  * core-klog: ignore cpu affinity warnings, these are benign\r\n  * stress-cpu-online: round-robin CPUs for instances 1 and 2\r\n  * stress-cpu-online: always try a different cpu and don't try an\r\n    already offlined cpu\r\n  * stress-ng: Fix net_port_map lock failure\r\n  * stress-cpu: don't check for onlining failure for more than 1 instance\r\n  * stress-bitonic: rename bionicsort_count to bitonic_count\r\n  * stress-shellsort: remove redundant 8 bit sort\r\n  * stress-bitonicsort: Add another sorting stressor\r\n  * stress-cpu-online: run a child process that tries to pin itself to\r\n    offlined CPU\r\n  * core-resouces: open another fd, based on the stdout of parent pid\r\n  * stress-memfd: don't populate memfd mapped pages\r\n  * stress-memfd: exercise each flag per iteration\r\n  * stress-memfd: change memfd_fds to a int32_t\r\n  * stress-memfd: create some filenames just one\r\n  * stress-memfd: use close_range on fds, fall back to loop'd fd close\r\n  * stress-enosys: add 24, 40, 48, 56 bit syscalls\r\n  * stress-malloc: add some SEGV action information\r\n  * stress-fd-fork: add --fd-fork-file option to specify file to dup\r\n  * stress-fd-fork: add metrics on time to open all fds and open 10000\r\n    files per loop\r\n  * stress-fd-fork: add --fd-fork-fds option to specify number of files\r\n    to open\r\n  * Manual: add note about fd-fork bogo-op rate dropping over time\r\n  * Manual: recommend using the maxtrix-3d stressor for cache misses\r\n  * stress-ng: avoid potential division by zero by total_run\r\n  * stress-fd-fork: add a file descriptor copying via fork stressor\r\n  * Manual: Fix typo \"maybe\" -> \"may be\"\r\n  * stress-crypt: add --crypt-method to allow encryption method to be\r\n    selected\r\n  * Manual: update crypt stressor with list of all crypt methods used\r\n  * stress-memfd: fix #endif, removed the wrong one\r\n  * stress-memfd: remove debug #ifdef's\r\n  * stress-memfd: make random madvise calls an optional opt-in with\r\n    --memfd-madvise\r\n  * stress-memfd: add in opt-in zap pte test option --memfd-zap-pte\r\n  * stress-memfd: include <linux/memfd.h> for MEMFD huge page flags\r\n  * TODO: add IP_LOCAL_PORT_RANGE\r\n  * stress-ng: add estimated completion time for --progress option\r\n  * stress-ng: add a --progress option to show --sequential run progress\r\n  * stress-fork: disable --fork-unmap if --fork-vm is also enabled\r\n  * stress-fork: remove stress_set_proc_state so libbsd can be removed\r\n  * stress-fork: don't remove readable pages that may be used in dlsym\r\n    searches\r\n  * stress-syscall: only define SHADOW_STACK_SET_TOKEN if it's not defined\r\n  * stress-fork: add --fork-unmap option to force unmapping of shared libs\r\n  * Makefile.config: specify library link ordering\r\n  * stress-clone: force lazy bind libc functions to be bound before clone\r\n    is run\r\n  * stress-stream: fix collapse stream-madvise option to use MADV_COLLAPSE\r\n  * stress-fpunch: add --fpunch-bytes option to specify fpunch file size\r\n  * stress-fork: force lazy bind libc functions to be bound before child\r\n    is run\r\n  * stress-fork: do immediate _exit() call for short lived processes\r\n  * stress-fork: make help clearer on process creation naming\r\n  * core-thrash: no need to snprintf a fixed path name, clean up code\r\n  * stress-fork: align info array to cacheline\r\n  * stress-skiplist: add bounds check on ln2n\r\n  * Manual: fix misalignment of --misaligned-ops option\r\n  * stress-cache: zero buffer before benchmarking read/write rates\r\n  * stress-cache: correctly report the cache flags being used\r\n  * stress-vforkmany: add --vforkmany-bytes option to specify mmap size\r\n  * core-mincore: add missing --page-in OPT_FLAGS_MMAP_MINCORE check\r\n  * stress-vforkmany: use waste_size instead of WASTE_SIZE for mmap'd\r\n    waste region\r\n  * stress-numa: add support for MPOL_WEIGHTED_INTERLEAVE\r\n  * core-helper: use program_invocation_name to get program name\r\n  * stress-monte-carloc: add arc4 cryptographically-secure pseudorandom\r\n    generator\r\n  * stress-numa: add NUMA hit/miss metrics\r\n  * stress-context: make context regions smaller, move stack to new\r\n    mmap'd area",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.06",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.06",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.06",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/144913552",
                "release_id": 144913552,
                "date_created": "2024-03-05T16:58:50Z",
                "date_published": "2024-03-05T17:16:57Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/139540129",
                "tag": "V0.17.05",
                "name": "V0.17.05",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "New Features:\r\n\r\n  * New  Monte Carlo computational stressor (--monte-carlo)\r\n  * New time warp clock reading and time skew stressor (--time-warp)\r\n  * New Priority Inversion scheduler stressor (--prio-inv)\r\n  * New huge integer factorization stressor (--factor)\r\n  * Extra device ioctl stressing in dev stressor (/dev/kvm, /dev/uinput, /dev/input, /dev/random, /dev/rtc)\r\n  * New NUMA stressor options (--numa-bytes, --numa-shuffle-node, --numa-shuffle-addr)\r\n  * stress-x86syscall: add geteuid, getgid and getuid\r\n  * replace strlcpy with safer strscpy\r\n  * New mmap stressor options (--mmap-write-check, --mmap-madvise, --mmap-mergeable, \r\n \r\nOptimizations:\r\n  * AVL tree optimization (~7% faster)\r\n  * Added Link Time Optimization\r\n  * Random number generators: optimize and generalize mwc*modn() functions\r\n\r\nFixes:\r\n  * rseq stressor now uses glibc rseq struct\r\n\r\nDetailed Changelog:\r\n\r\n  [Nikolas Kyx]\r\n  * stress-syscall: fix cmp_test_duration() return value\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * Makefile: add core-asm-loong64.h to HEADERS\r\n  * stress-atomic: make atomic region 64 bytes wide, step through it\r\n  * Manual: update caveat concerning bogo-op rates\r\n  * Manual: update date\r\n  * stress-unshare: silently ignore EACCES returns\r\n  * core-pragma: drop packed gcc version to 9.4\r\n  * Manual: fix a couple of typos\r\n  * stress-prio-inv: fix typo \"cheduling\" -> \"scheduling\"\r\n  * core-helper: fix some spelling mistakes\r\n  * stress-landlock: ensure all set bits work in mask and zero\r\n    ruleset_attr before use\r\n  * stress-sysfs: ignore SIGKILL as bad signal\r\n  * stress-numa: fix one more %zu format specifier\r\n  * stress-numa: use %zu format specifier for size_t\r\n  * stress-monte-carlo: don't use getrandom for Solaris, it's very slow\r\n  * core-vmstat: only account for CP_SPIN on OpenBSD if it exists\r\n  * stress-stack: make rc no-clobberable, cleans up gcc 4.9.2 warning on\r\n    kfreebsd\r\n  * core-shim: disabled process_mrelease for SPARC\r\n  * stress-monte-carlog: only define stress_mc_no_seed if it is required\r\n  * core-perf: make filemap page cache description match existing style\r\n  * stress-numa: report per instance mapping size to 1 decimal place\r\n  * stress-numa: add --numa-bytes option to specify total memory size\r\n  * kernel-coverage: add numa addr and node shuffling options\r\n  * stress-numa: add --numa-shuffle-addr and --numa-shuffle-node\r\n  * stress-numa: ensure pages get re-assigned to different nodes\r\n  * stress-tree: disable warnings on misaligned pointer access\r\n  * stress-numa: use stress_mmap_set_light to touch pages\r\n  * core-pragma: add checks for gcc 10\r\n  * core-pragma: add missing \\\r\n  * stress-monte-carlo: use generic supported and no_seed functions\r\n  * stress-dev: add include ifdefs around stress_dev_ptp_linux\r\n  * stress-dev: add macro VOID_ARGS to voidify common function args\r\n  * stress-dev: remove UNEXPECTED checks, add more linux guarding\r\n  * stress-dev: add some kvm ioctls\r\n  * stress-dev: exercise UI_GET_VERSION ioctl on /dev/uinput\r\n  * stress-dev: add RNDGETPOOL ioctl on /dev/random\r\n  * stress-dev: exercise /dev/input/event*\r\n  * stress-dev: add RTC RTC_IRQP_READ32 ioctl\r\n  * stress-dev: add linux /dev/rtc ioctls, delay on -EBUSY\r\n  * stress-mmap: add missing MMAP_SYNC flag\r\n  * stress-ng.h: disable _FORTIFY_SOURCE when using PCC\r\n  * stress-ng.h: disable _FORTIFY_SOURCE when using TCC\r\n  * core-mmap: remove unused variable val\r\n  * stress-sigsegv: make pointers uint8_t * to clean up void * pointer\r\n    addition warnings\r\n  * Makefile: don't enable -fipa for icc\r\n  * stress-tree: allow tree node packed structures where packed is\r\n    allowed on x86\r\n  * core-pragma: add -Waddress-of-packed-member to WARN_OFF macro\r\n  * core-attribute.h: add PACKED macro for attribute packed\r\n  * stress-tree: move u into it's own typedef and make tree node 8 byte\r\n    aligned\r\n  * stress-tree: avl: remove redundant assignments to taller\r\n  * stress-tree: avl: add pointer r as a short cut for (*root)\r\n  * stress-tress: avl: make variable taller a register\r\n  * stress-tree: avl: remove sub_taller variable\r\n  * stress-tree: avl: replace (*root) with node on new node\r\n  * stress-tree: don't pass taller flag in avl_insert\r\n  * Add build-time test for packed attribute\r\n  * README.md: add DEBUG=1 make build instructions\r\n  * stress-monte-carlo: add some more complex integrals to compute\r\n  * stress-monte-carlo: fix ppc64 darn and add missing rand support check\r\n  * stress-rseq: add check for __builtin_thread_pointer()\r\n  * stress-monte-carlo: add Monte Carlo computation of pi and e\r\n  * stress-rseq: remove debug '| 1' for sys/rseq.h include\r\n  * stress-rseq: remove trailing white space\r\n  * stress-rseq: remove invalid rseq test cases\r\n  * stress-rseq: remove rate debug\r\n  * stress-rseq: move critical section count into a stressor metric\r\n  * stress-rseq: rework to work with rseq in glibc\r\n  * stress-sigsegv: fix exact fault address check\r\n  * stress-x86syscall: add geteuid, getgid and getuid\r\n  * README.md: add another citation link\r\n  * stress-prio-inv: remove undef of PTHREAD_MUTEX_ROBUST\r\n  * stress-prio-inv: remove prio default case from switch\r\n  * stress-prio-inv: add build time check for pthread_mutexattr_setrobust\r\n  * stress-prio-inv: add build-time checks for various SCHED_* support\r\n  * stress-prio-inv: update reason why stressor is not implemented\r\n  * stress-prio-inv: move pthread_mutex_t dependant types\r\n  * Add shim for dirent d_type\r\n  * stress-landlock: shift left with correct sized integer\r\n  * Makefile.config: cater for empty $LIB_BSD string\r\n  * stress-time-warp: add a time/clock time warp checking stressor\r\n  * stress-prio-inv: match order of STRESS_PRIO_INV_POLICY_* with\r\n    stress_prio_inv_policies\r\n  * stress-mmap: add --mmap-stressful\r\n  * stress-prio-inv: add --prio-inv-policy to select scheduler policy\r\n  * stress-prio-inv: use FIFO sched by default\r\n  * README.md: add Nikolas Kyx to contributors list\r\n  * Add new prio-inv (priority inversion) stressor\r\n  * stress-mmap: add --mmap-slow-munmap option\r\n  * core-perf: add some more trace events\r\n  * stress-landlock: only exercise flags that are usable\r\n  * core-shim: replace strlcpy with safer strscpy\r\n  * stress-landlock: add more landlock access flags, add check for\r\n    usability\r\n  * core-mwc: optimize and generalize mwc*modn() functions, remove pwr2\r\n    helpers\r\n  * stress-mmap: use non-mod random mwc functions for faster index\r\n    generation\r\n  * stress-mmap: add new option --mmap-write-check for opt-in write +\r\n    checks\r\n  * stress-factor: up the maximum digit size to 100000000 digits\r\n  * stress-mmap: add --mmap2 option in short help\r\n  * kernel-coverage: add new mmap options to mmap stress cases\r\n  * stress-mmap: add opt-in randomized madvise on pages\r\n  * core-mmap: touch + check just start of each page rather than filling\r\n    them\r\n  * debian/control: add libgmp-dev for factor stressor\r\n  * README.md: update number of stressors (320+) and add loong64 arch\r\n  * stress-mmap: touching pages should be using sz and not\r\n    context->mmap_bytes\r\n  * stress-mmap: add --mmap-mergeable option\r\n  * stress-factor: clean up indentation\r\n  * stress-mmap: reduce affect of mumap on stressor\r\n  * stress-factor: add factorization stressor using libgmp\r\n  * core-mmap: replace add/sub with xor\r\n  * core-mmap: remove need for shift and compare, replace with add/sub\r\n  * Manual: add \"next generation\" reference in title to explain why it\r\n    is called stress-ng\r\n  * core-mmap: replace compare + check for each value with 32 sum + check\r\n  * Manual: add missing System V semaphore stressor title\r\n  * stress-mmapfiles: ensure fd is closed on loop break paths\r\n  * stress-mmapfiles: add ENOMEM check to bail out early\r\n  * Manual: add notes to --mmapfiles stressor\r\n  * stress-mmapfiles: add missing , between literal strings\r\n  * stress-mmapfiles: remove ANONYMOUS mapping flag and use fd in mmap\r\n  * stress-mmapfile: add file based memory mapping stressor\r\n  * stress-cpu-online: move stressor back onto newly online'd cpu\r\n  * stress-affinity: let main stress process reap all children\r\n  * core-vmstat: Add OpenBSD implementation of stress_get_cpu_ghz\r\n  * core-vmstat: add vmstat support for OpenBSD\r\n  * stress-crypt: fix FreeBSD build issues\r\n  * README.md: add note about snaps of stress-ng\r\n  * core-shim: add missing shim block comments\r\n  * Makefile: add support for Link Time Optimization\r\n  * stress-ng: keep track of metrics overflow, report so.\r\n  * stress-af-alg: add metrics for each af-alg crypto type\r\n  * README.md: add another link to a kernel issue found by using stress-ng\r\n  * stress-sysbadaddr: add Linux 6.8 lsm system calls\r\n  * stress-waitcpu: add support for loong64 by using dbar instruction\r\n  * stress-workload: RISC-V: use stress_asm_riscv_pause instead of a fence\r\n  * stress-waitcpu: use RISC-V pause instruction for small delays\r\n  * stress-waitcpu: only sanity check non-rates on non virt x86 systems\r\n  * stress-eigen-ops.cpp: remove commented out debug code\r\n  * stress-priv-instr: add loong64 privileged instructions\r\n  * stress-pipe: add debug to log default pipe read/write sizes\r\n  * core-*.h: add ALWAYS_INLINE annotation for small inline helpers\r\n  * stress-regs: add loong64 implementation\r\n  * core-asm-loong64.h: Add support for cpucfg instruction\r\n  * stress-acl: terminate do-while stressor loop on acl error exit\r\n  * kernel-coverage: exercise all ioschedulers on filesystems\r\n  * stress-tsc: add rdtime.d instruction auto-built detection\r\n  * stress-workload: add Loong64 support for dbar instruction\r\n  * Manual: Add Loong64 implementation details for tsc stressor\r\n  * stress-tsc: add Loong64 tsc reading support\r\n  * core-asm-arch: initial support of Loong64 arch\r\n  * Makefile: swap order of -U and -D FORTIFY_SOURCE\r\n  * Makefile: ensure cc_supports_flag is defined outside the PEDANTIC\r\n    flag settings\r\n  * stress-io-uring: add optimizations - late sqe memset and optimize\r\n    out zero stores",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.05",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.05",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.05",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/139540129",
                "release_id": 139540129,
                "date_created": "2024-02-01T15:32:19Z",
                "date_published": "2024-02-01T16:34:47Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/135944348",
                "tag": "V0.17.04",
                "name": "V0.17.04",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "Stress-ng V0.17.04 \"pragmatic problem producer\" highlights:\r\n\r\n * Support for Cygwin builds\r\n * More system calls exercised in sysbadaddr (cacheflush, xattrs) and better mixed invalid address exercising\r\n * Reduced spawning rate in sysbadaddr stressor for improved faster system call coverage\r\n * Improved SO_SOCKET SO_* option exercising in sock stressor\r\n * Add native radixsort, heapsort and mergesort support if BSD sort functions are not available, these can be faster than the libc variants\r\n * sysfs stressor: Exercise /sys/power/disk test resume command\r\n * pty stressor: Exercise cfgetispeed and cfgetospeed\r\n * Add map_shadow_stack system call to sysinval and syscall stessors\r\n * Add Access Control Lists exercising with new acl stessor\r\n * Exercise all open mode permutations in open stressor\r\n\r\nNotable Bug Fixes:\r\n * don't kill entire process group or pid 1 (init) on SIGTERM\r\n * sock stressor: fix zerocopy - enable it via setsockopt and use zerocopy flag appropriately\r\n * sock stressor: retry send on ENOBUFS\r\n * vma stressor: fix non-termination of vma pthreads and child processes\r\n * mmap stressor: add mprotect EACCESS error check for NetBSD\r\n * metamix stessor: add EBADF on fdatasync on read-only fd\r\n   \r\nChangelog:\r\n\r\n[Munehisa Kamata]\r\n  * README.md: fix a typo in the contributor name\r\n  * stress-acl: Fix stress_acl_info definition\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version, change code name\r\n  * README.md: add Cygwin to supported systems\r\n  * kernel-coverage: add longer duration sysbadaddr test\r\n  * stress-pthread: disable pthread_sigqueue call for CYGWIN\r\n  * stress-tree: disable RB trees for CYGWIN\r\n  * stress-sparsematrix: disable RB trees for CYGWIN\r\n  * core-helper: add _start workaround for CYGWIN\r\n  * core-shim: fix setdomainname check on HAVE_SETDOMAINNAME\r\n  * stress-dir: don't reference non-POSIX d_reclen for CYGWIN\r\n  * stress-mmapfork: use stress_mmap_populate for MAP_POPULATE\r\n  * stress-xattr: workaround ENODATA not being defined for NetBSD\r\n  * stress-metamix: voidify parameter temp_dir if O_DIRECTORY is not defined\r\n  * core-time: voidify parameter dnow, cleans up Dilos build warning\r\n  * stress-sysbadaddr: fix another valid fd check, should be >= 0\r\n  * stress-sysbadaddr: fix valid fd check, should be >= 0\r\n  * stress-sysbadaddr: close fdin rather than fdout on fdout open failure\r\n  * stress-sysfs: use SCNu16 formate specifier for sscanf uint16_t\r\n  * stress-sock: remove shadowed declaration of variable i\r\n  * stress-vdso: add clock_getres\r\n  * stress-sysinval: set dirfd mode, gid and uid back to original setting\r\n  * stress-sigxfsz: retry setrlimit with smaller size if limit is too large\r\n  * stress-copy-file: replace sizeof(char) with 8\r\n  * stress-copy-file: fix the max off_t, it's signed to cater for this\r\n  * stress-sysbadaddr: use shim_cacheflush instead of direct system call\r\n  * stress-sysbadaddr: pass different addresses to ppoll\r\n  * stress-af-alg-defconfigs: re-order and remove blank lines\r\n  * stress-mmap: add mprotect EACCESS error check for NetBSD\r\n  * stress-metamix: add EBADF on fdatasync on read-only fd\r\n  * stress-metamix: fix incorrect EBADF check\r\n  * stress-metamix: ignore EBADF on fdatasync on read-only file\r\n  * stress-ng: don't call mprotect if it does not exist\r\n  * stress-syscall: add comment explaining why shell sort is used instead\r\n    of qsort\r\n  * stress-sysbadaddr: use VOID_RET for typed voidification of system call\r\n    returns\r\n  * Update copyright year to 2024\r\n  * Manual: remove . in Eigen description\r\n  * stress-sock: exercise SO_SOCKET SO_* opts that return int type values\r\n  * stress-sysbadaddr: only increment counter if a syscall is to be made\r\n  * stress-sysbadaddr: avoid exercising system calls that will not fail\r\n  * stress-sysbadaddr: add some more xattr system calls\r\n  * stress-sysbadaddr: bad_fstat: exercise fstat on temp dir\r\n  * stress-sysbadaddr: add copy_file_range\r\n  * stress-sysbadaddr: add missing MIPS cacheflush system call\r\n  * stress-syscall: add missing MIPS cacheflush system call\r\n  * stress-sysbadaddr: exercise shim'd and non-shim'd syscalls\r\n  * stress-sysbadaddr: exericse system call parameters with range of\r\n    parameters\r\n  * stress-sysbadaddr: only respawn child when bad addr breaks system call\r\n  * core-version: define EQUAL_GNUC for all compiler times\r\n  * stress-radixsort: remove array size specifiers to fix tcc build failures\r\n  * core-builtin: add shim wrapper for __builtin_assume_aligned()\r\n  * core-cache: add missing tab to clean up \\ alignments\r\n  * stress-vecshuf: remove redundant variables total_ops and total_bytes\r\n  * stress-numa: Fix spelling mistake in comment\r\n  * stress-memthrash: remove trailing space at end of line\r\n  * README.md: update contributors list\r\n  * stress-syscall: add the --syscall-top N option to report top N fastest\r\n    syscalls\r\n  * Manual: fix typo \"fasted\" -> \"fastest\"\r\n  * stress-radixsort: reduce memory bandwidth by making length 2 bytes\r\n  * stress-radixsort: clean up casting in IDX and IDX_T macros\r\n  * stress-radixsort: remove signed conversions in radix_strlen\r\n  * stress-radixsort: offset digit counter by 1\r\n  * stress-radixsort: optimize radixsort\r\n  * stress-radixsort: add nonlibc implementation of radixsort\r\n  * stress-heapsort: add new --heapsort-method option to help\r\n  * stress-mergesort: add new --mergesort-method option to help\r\n  * stress-mergesort: add some more memory copying optimizations\r\n  * stress-mergesort: optimize for 4 byte data\r\n  * stress-mergesort: remove base_ptr, replace with base\r\n  * stress-mergesort: optimize copying of lhs and rhs to base\r\n  * stress-mergesort: add missing base_ptr increment\r\n  * stress-mergesort: optimize lhs and rhs copying\r\n  * stress-mergesort: add nonlibc implementation of mergesort\r\n  * stress-heapsort: optimize copy and swap for common size cases\r\n  * stress-heapsort: add nonlibc implementation of heapsort\r\n  * Makefile: add cc_supports_flag to simplify CFLAGS checking\r\n  * Makefile: add gcc optimization flag -fipa-pta\r\n  * stress-sysfs: exercise test resume command for /sys/power/disk\r\n  * stress-pty: exercise cfgetispeed and cfgetospeed on leader and follower\r\n  * stress-vecshuf: report shuffle rates as Harmonic Mean\r\n  * stress-sysinval: add map_shadow_stack system call\r\n  * stress-syscall: add map_shadow_stack call\r\n  * core-*: add more comments\r\n  * core-helper: assign val2 to avoid any static analysis warnings\r\n  * stress-acl: add randomized acl attribute order shuffling with --acl-rand\r\n  * Makefile.config: Fix incorrect addition of -DSTRFUNC to LDFLAGS\r\n  * stress-ng: initialize values to 0.0 rather -1.0\r\n  * stress-acl: exercise all ACL types, ACL_TYPE_ACCESS and ACL_TYPE_DEFAULT\r\n  * core-shim: shim_kill: don't allow SIGKILL on pid -1\r\n  * stress-ng: don't kill entire group or pid 1 (init)\r\n  * stress-acl: uppercase ACL in help text\r\n  * stress-acl: add ACL set vs get verification\r\n  * stress_acl: rename acl functions, prefix with stress_\r\n  * stress-acl: exercise acl_get_file and add metrics for this\r\n  * kernel-coverage: enable acl for reiserfs\r\n  * README.md: add another link to a research paper\r\n  * stress-open: add open using all the possible file modes\r\n  * stress-acl: compute and cache all valid ACLs to improve performance\r\n  * stress-vma: voidify returns using VOID_RET macro\r\n  * Update documentation and debian/control for libacl dev libs\r\n  * stress-acl: exercise POSIX ACLs using libacl\r\n  * README.md: add another link to a research paper\r\n  * stress-inotify: exercise ioctl command INOTIFY_IOC_SETNEXTWD\r\n  * stress-sock: retry send on ENOBUFS\r\n  * stress-sock: fix zerocopy - enable it via setsockopt and use flag\r\n    appropriately\r\n  * core-asm-x86.h: remove duplicated cpuid legacy implementation\r\n  * kernel-coverage: add extra bcachefs format options for more test\r\n    coverage\r\n  * core-helper: stress_get_null: cast zero to uintptr_t before void * cast\r\n  * stress-sem-sysv: reduce the rate at which proc info is being read\r\n  * stress-vecwide: don't use target clones for gcc 9.4.0\r\n  * core-asm-x86.h: remove STRESS_ARCH_X86_32 variant of rdtsc\r\n  * stress-vma: fix non-termination of vma pthreads and child processes\r\n  * kernel-coverage: reduce tmp file system image size to 4000MB for bfs\r\n  * stress-raw[pkg|udp]: only include linux/udp.h if netinet/udp.h does not\r\n    exist\r\n  * core-helper: add null function to obfuscate (void *)0 values\r\n  * stress-workload: include sched.h required for\r\n    aarch64-linux-android33-clang\r\n  * stress-rawudp: fix type comparison warning, cast to in_addr_t\r\n  * Fix missing headers and rindex/index for clang android static builds\r\n  * stress-malloc: only declare trim_counter when it's required\r\n  * Fix open calls that have extraneous mode flags on non-create opens\r\n  * kernel-coverage: add collapse --stream-madvise option\r\n  * stress-stream: add collapse --stream-madvise option\r\n  * kernel-coverage: add in some extra stressing options\r\n\r\n**Full Changelog**: https://github.com/ColinIanKing/stress-ng/compare/V0.17.03...V0.17.04",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.04",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.04",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.04",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/135944348",
                "release_id": 135944348,
                "date_created": "2024-01-05T09:39:16Z",
                "date_published": "2024-01-05T10:22:11Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/133299394",
                "tag": "V0.17.03",
                "name": "V0.17.03",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "Bug fix release, address shared memory unmapping for opcode, sysbadaddr, enosys and sysinval stressors. Fix trimming in malloc stressor, fixes memory leak in mmap stressor.\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * Makefile: remove -g from CFLAGS\r\n  * stress-sock: fix memory real on mmap_buffer\r\n  * stress-malloc: replace pre-inc with post-inc on trim_counter\r\n  * stress-tsc: only define stress_tsc_check when required\r\n  * manual: update release date\r\n  * stress-opcode: allow exit system call\r\n  * stress-sysbadaddr: don't unmap shared memory, just make it read-only\r\n  * stress-enosys: don't unmap shared memory, just make it read-only\r\n  * stress-opcode: don't unmap shared memory, just make it read-only\r\n  * stress-sysinval: don't unmap shared memory, just make it read-only\r\n  * stress-tsc: clean up warnings with systems that do not support lfence\r\n  * stress-sysonval: add in missing old/deprecated and new system calls\r\n  * stress-enosys: add in missing __NR_* syscalls\r\n  * README.md: add another kernel issue found by stress-ng\r\n  * stress-malloc: mmap addr array and prefetch values\r\n  * stress-malloc: only trim memory when new option --malloc-trim is used\r\n  * stress-tsc: add the --tsc-rdtscp option\r\n  * Add build-time check for rdtsc instruction\r\n",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.03",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.03",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.03",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/133299394",
                "release_id": 133299394,
                "date_created": "2023-12-09T23:57:40Z",
                "date_published": "2023-12-10T00:24:32Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/133020044",
                "tag": "V0.17.02",
                "name": "V0.17.02",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "Stress-ng V0.17.02 \"omniferous optimized overreacher\"\r\n\r\nKey features:\r\n   - many stressor related optimisations:\r\n   - ~5.4% improvement on Alderlake i9-12900\r\n   - ~5.2% improvement on 24 core ARM\u00ae Cortex-A53\r\n   - ~2.2% improvement on StarFive JH7100 64 bit RISC-V RV64GC\r\n   - ~7.2% improvement on Libre Computer AML-A311D-CC  (4 x ARM Cortex-A72 cores, 2 x Cortex-A53 cores)\r\n   - ~5.2% improvement on Libre Computer AML-S905D3-CC (4 x ARMv8 Cortex-A55)\r\n   (based on Geometric mean of bogo-ops throughput of over 300 stressors)\r\n\r\nNew features:\r\n   - sigxfsz and sigxcpu stressors for SIGXFSZ and SIGXCPU signals\r\n   - bsearch, hsearch, lsearch have new method options to specify libc or optimized non-libc search functions\r\n   - io-uring stressor has new --io-uring-entries option to specify number of entries in the io-uring\r\n\r\nChangelog: \r\n\r\n [Sascha Hauer]\r\n  * stress-physpage: explicitly use 64bit type for physical addresses\r\n  * stress-ng.h: define _FILE_OFFSET_BITS before including features.h\r\n\r\n  [Rulin Huang]\r\n  * Reduce the file operations if the unused pid can be found within\r\n    several tries\r\n\r\n  [Colin Ian King]\r\n  * stress-bigheap: ensure value in *uintptr is initialized\r\n  * stress-workload: clean up some clang-scan-build warnings\r\n  * stress-workload: remove redundant assignments to variable t\r\n  * stress-workload: remove redundant initialization of t_begin\r\n  * stress-sigpipe: add wrapper to pipe_child to clear up tcc warning\r\n  * stress-reboot: add wrapper to reboot_clone_func to clear up tcc\r\n    warning\r\n  * stress-vma: remove volatile cast, it is unnecessary\r\n  * stress-lsearch: add casts to const char * to avoid void * arithmetic\r\n  * stress-bsearch: cast base to const char * to avoid void * arithmetic\r\n  * core-time: return -1 if time not available via\r\n    stress_time_now_timespec\r\n  * stress-msync: make pointer buf unclobberable\r\n  * stress-msg: remove another invalid msgrcv calls that work for\r\n    OpenBSD systems\r\n  * stress-msg: remove invalid msgrcv calls that work for *BSD systems\r\n  * core-shim: Fix non-PURE shim_enosys function\r\n  * core-resources: include core-pthread.h for pthread types\r\n  * stress-get: don't call gettimeofday with NULL values\r\n  * core-shim/stress-get: use gettimeofday() for non-linux shim_time calls\r\n  * core-shim: fix typo: tlock -> tloc\r\n  * core-shim/stress-get: use time() for non-linux shim_time calls\r\n  * stress-get: fix error messages, replace gettimeval with gettimeofday\r\n  * stress-get: only exercise time(NULL) on Linux\r\n  * core-helper: move ret inside #ifdef block\r\n  * README.md: Update contributor list\r\n  * stress-*: clean up a handful of spelling mistakes\r\n  * stress-stream: unmap in correct idx order\r\n  * README.md: add another link to a research paper\r\n  * stress-prctl: munmap page_anon on error return path\r\n  * stress-seal: unmap buf on error return paths\r\n  * stress-cyclic: unmap latencies mappings on error return\r\n  * stress-zero: unmap read/write buffers on error return paths\r\n  * stress-stream: simplify error unmapping return paths\r\n  * stress-rawdev: fix memory leak on mmap'd buffer on error return path\r\n  * stress-fail: use fail error exit path for non-implemented /dev/full\r\n  * stress-sockmany: fix memory leak on signal handler error return path\r\n  * stress-signest: fix memory leak on signal handler error return path\r\n  * stress-sock: fix memory leak on fork failure error return path\r\n  * stress-sigpipe: fix memory leak on signal handler error return path\r\n  * stress-stackmmap: make stack_sig non-clobberable\r\n  * stress-sigbus: make ptr non-clobberable\r\n  * core-helper: add stress_mmap_populate to mmap with MAP_POPULATE\r\n  * stress-qsort: add missing tab\r\n  * stress-bseach: add -O3 for nonlibc bsearch function\r\n  * stress-waitcpu: add some more nops\r\n  * stress-vm: remove volaile where it's not required, add memory barrier\r\n  * stress-vm: speed up prime-gray-0 and prime-gray-1 by reducing total\r\n    memory read/writes\r\n  * stress-vm: speed up prime-0 and prime-1 by reducing total memory\r\n    read/writes\r\n  * stress-vma: provide different handlers for SIGBUS and SIGSEGV\r\n  * stress-vma: optimize matrics, add cacheline pad and remove volatile\r\n  * stress-vdso: add dummy function call to emulate minimal vdso function\r\n  * stress-udp: don't memset the send buffer on each send\r\n  * stress-trig: replace iterations with macro STRESS_TRIG_LOOPS\r\n  * stress-trig: unroll loops, speed up by ~4.2%\r\n  * stress-memthrash: only report lack of NUMA support with instance 0\r\n  * stress-schedmix: reduce compute overhead on prime number CPU load\r\n  * stress-stack: unroll loop in stress_stack_alloc\r\n  * stress-sockpair: optimize buffer setting and checking\r\n  * stress-sockdiag: move bogo-op count to outside parser loop\r\n  * stress-skiplist: use 8 bits for skip_list_random_level generation\r\n  * stress-skiplist: optimize ln2 operation using clzl\r\n  * stress-sigxfs: optimize counter increment, remove branch\r\n  * stress-sigxfsz: don't make async_sigs volatile\r\n  * core-helper: only declare array buf when it is required\r\n  * core-helper: voidify function argument dumpable\r\n  * core-helper: only declare array buf when it is required\r\n  * core-shim: move include <sys/uio.h> to core-shim.h\r\n  * stress-gpu: move declarations for gpu_freq_sum and gpu_freq_count\r\n  * core-numa: add stress_numa_nodes helper for non-linux builds\r\n  * stress-stream: don't print numa nodes related info for non-linux\r\n    systems\r\n  * core-shim: add missing include of sys/uio.h required for struct iovec\r\n  * stress-mmapfixed: fix array overflow, iterate over only the array\r\n    elements\r\n  * stress-gpu: ensure usec computations are using uint64_t type\r\n  * stress-hsearch: voidify return from stress_get_setting\r\n  * core-helper: use STRESS_MAXIMUM on maximum pid\r\n  * stress-vma: add in extra protection flags and mmap flags for more\r\n    stress\r\n  * stress-vma: add PROT_NONE back\r\n  * stress-vma: ensure page is always mappable\r\n  * stress-ng: move ci counter struct into args and args into stat struct\r\n  * stress-signal: don't use volatile for in-signal handler counter\r\n    increment\r\n  * stress-ring-pipe: replace % operator with compare and set\r\n  * stress-resched: remove need to check for non-mapped yields array\r\n  * README.md: add more research paper links\r\n  * stress-remap: unroll a handful of loops\r\n  * stress-regs: reference registers rather than v variable\r\n  * stress-readahead: unroll some loops\r\n  * stress-randlist: add prefetch to next pointer in list scanning\r\n  * core-mwc: use clz for shift maximization for 8 and 16 bit mwci\r\n    functions\r\n  * core-sort: optimize of powers of 2 size for\r\n    stress_sort_data_int32_shuffle\r\n  * stress-gpu: only report GPU frequency if > 0.0 MHz\r\n  * core-time: optimize get_time_now()\r\n  * stress-procfs: use MAP_POPULATE on mmap to reduce read-fault hit\r\n  * stress-procfs: perform less timeout checks on 1 byte reads and\r\n    optimize timeout paths\r\n  * stress-poll: switch order of read return checks\r\n  * stress-opcode: inline and unroll loop in stress_opcode_random\r\n  * stress-null: scale down mmaps to 1 once every 500 iterations\r\n  * stress-nice: add ( ) to clarify precedence\r\n  * stress-syncload: add yield delay for ppc\r\n  * core-builtin.h: Add llabs builtin shim wrapper\r\n  * core-ops: add in missing OPT_hsearch_method\r\n  * stress-nanosleep: ensure no overflow occurs on 32 bit systems\r\n  * stress-hsearch: add hsearch method for libc and non-libc versions\r\n  * stress-mmaphuge: simplyfy the set and check memory exercising\r\n  * stress-mmapfixed: make vec array uint32 to speed up mincore checking\r\n  * stress-mmapfixed: move memset in stress_mmapfixed_is_mapped_slow\r\n  * core-helper: add missing space between ) and {\r\n  * core-helper: stress_process_dumpable: use stress_system_write\r\n    to write data\r\n  * core-helper: stress_get_memlimits: use stress_system_read to read data\r\n  * stress-lsearch: use lfind_nonlibc in lsearch_nonlibc\r\n  * stress-lsearch: add lsearch method for libc and non-libc versions\r\n  * stress-bsearch: add --bsearch-method short help\r\n  * stress-lockofd: remove yield point, it's not helping that much\r\n  * stress-lockf: remove yield point, it's not helping that much\r\n  * stress-locka: remove yield point, it's not helping that much\r\n  * Makefile.config: echo the number of configurations in config.h\r\n  * stress-jpeg: compute gradient image using float instead of double\r\n  * stress-io-uring: add UNLIKELY hint on error return check\r\n  * stress-iomix: stress-_iomix_rd_wr_mmap: just read 1 byte from page\r\n  * core-mwc: move stress_rndstr from core-helper to core-mwc\r\n  * stress-icache: add missing space before + operator\r\n  * stress-hdd: optimize hdd_fill_buf\r\n  * core-mwc: move stress_rndbuf from core-helper to core-mwc\r\n  * stress-gpu: add GPU frequency metrics based on 10 samples per second\r\n  * stress-ng: emit plural of instance if instances > 1\r\n  * core-config-check: replace \"will\" with \"may\"\r\n  * stress-getrandom: reduce overhead of gettimeofday calls\r\n  * stress-full: fix and optimize stress_data_is_not_zero\r\n  * core-mwc: optimize modulo mwc32 and mwc64 functions\r\n  * stress-fifo: add poll replacement to select, disable it for now\r\n  * stress-far-branch: inline the branch shuffling, reduce iterations\r\n    from 5 to 1\r\n  * stress-epoll: don't fill send buffer on each send\r\n  * core-time: make function stress_timeval_to_double PURE\r\n  * core-helper: add PURE annotation to two more helper functions\r\n  * core-helper: optimize stress_rndstr\r\n  * stress-clock: move memsets outside of loops for minor performance\r\n    improvement\r\n  * stress-bsearch: allocate bsearch array using mmap\r\n  * stress-ng: fix short help for change-cpu, fix missing -\r\n  * stress-bsearch: add bsearch method for libc and non-libc versions\r\n  * stress-qsort: add in missing qsort-method short help\r\n  * stress-ng: don't timeout until all stressors are spawned\r\n  * core-helper: fix low memory swap check\r\n  * stress-sigxfsz: remove unused include files\r\n  * stress-sigxcpu: Add new SIGXCPU stressor\r\n  * stress-sig*: add new class \"signal\", add signal stressors to this\r\n    class\r\n  * stress-cpu-online: write the string length rather than buffer size\r\n  * core-helper: make inline helper function stress_chr_munge PURE\r\n  * stress-pthread: constify variable trun\r\n  * stress-pthread: use same racy pid for tgid rather than fetching one\r\n    3 times\r\n  * README.md: Update contributors name list\r\n  * stress-sigxfsz: Add new SIGXFSZ stressor\r\n  * README.md: add some more kernel issues found with stress-ng\r\n  * core-cpuidle: report C states with commas between each state\r\n  * stress-sysbadaddr: add missing #include <termios.h>\r\n  * Add in some missing <sched.h> includes\r\n  * fix up build errors from unchecked in changes\r\n  * stress-ng.h: move #include <sched.h> to sources that require it\r\n  * stress-af-alg: add in missing #include <sys/socket.h>\r\n  * README.md: add another citation link\r\n  * stress-ng.h: move #include <pthread.h> to core-pthread.h\r\n  * stress-ng.h: move #include <termios.h> to sources that require it\r\n  * stress-ng.h: move #include <pwd.h> to sources that require it\r\n  * stress-ng.h: remove #include <getopt.h>\r\n  * stress-ng.h: move #include <sys/socket.h> to sources that require it\r\n  * core-helper: move MEM_CACHE_SIZE from stress-ng.h to core-helper.c\r\n  * stress-stream: decouple the default guess cache size from\r\n    MEM_CACHE_SIZE\r\n  * core-attribute: add extra checks for attribute noinline\r\n  * core-attribute: add extra checks for attribute always_inline\r\n  * core-attribute: add extra checks for attribute weak\r\n  * core-attribute: add extra checks for attribute noreturn\r\n  * core-attribute: add extra checks for attribute warn_unused_result\r\n  * core-attribute: add extra build checks for hot attribute\r\n  * core-attribute: add PURE macro for gcc pure attribute\r\n  * stress-crypt: use the correct size to strlcpy to\r\n  * stress-cpu-online: report the sysfs file when writes fail\r\n  * core-helper: take into consideration NUMA nodes for full cache size\r\n  * stress-msync: mark fd as NOCLOBBER, clean up gcc 13.2.1 warning\r\n  * Makefile: remove gcc optimization flags\r\n  * Makefile: fix gcc detection for extra gcc optimization flags\r\n  * stress-memthrash: add a buffer 8 bit reverse method\r\n  * stress-malloc: use valloc in non-thread scenarios\r\n  * stress-malloc: add valloc (or valloc emulation) for more calls to\r\n    exercise\r\n  * stress-hsearch: add -O3 optimization\r\n  * stress-hsearch: move repeated verify flag check to a const bool\r\n  * stress-fma: improve fma buffer copying\r\n  * core-sort: minor re-ordering of load/stores and compute for minor\r\n    speed improvement\r\n  * core-sort: minor optimization in stress_sort_data_int32_init\r\n  * stress-zlib: improve rarely0 and rarely1 performance\r\n  * stress-ng: clean up some more whitespace / tab issues\r\n  * stress-ng: replace spaces with tab\r\n  * stress-zlib: implement rdrand filler for non-x86 systems\r\n  * stress-zlib: improve performance of rdrand filling of buffer\r\n  * stress-tree: remove the UNLIKELY hint in avl_find\r\n  * stress-tree: remove the UNLIKELY hint in binary_find\r\n  * stress-tree: remove TARGET_CLONES from binary tree find/insert\r\n  * stress-stream: add TARGET_CLONES for index0 level streaming\r\n  * core-nt-store.h: use a union cast for stress_nt_store_double store\r\n  * stress-prefetch: clean up some source white space/tabs\r\n  * stress-io-uring: tweak number of io-uring entries depending on CPU\r\n    count\r\n  * stress-io-uring: add --io-uring-entries N option to specify ring size\r\n  * Revert \"stress-context: avoid using alternative stacks in a\r\n    swapcontext\"\r\n  * stress-fork: replace slow mwc8 with fair round-robin switch\r\n    selection index\r\n  * stress-hash: don't call expensive mwc reseed for non-verify mode\r\n  * stress-branch: load next goto address in previous loop\r\n  * stress-branch: re-order branching code to compute idx before jmp\r\n  * test/test-crypt-r: check for support of GNU libcrypt data fields\r\n  * stress-ng: Fix stupid extraneous {\r\n  * Makefile.config: remove some trailing spaces\r\n  * stress-*: improve rate metrics by using harmonic mean\r\n  * kernel-coverage: remove scheduler names\r\n  * stress-cpu: replace 64 bit mwc and 7 shifts with 2 x 32 bit mwc and\r\n    6 shifts\r\n  * stress-crypt: remove redundant prefix initialization\r\n  * stress-crypt: remove a few more args from stress_crypt_id call\r\n  * stress-crypt: optimize crypt_r usage with less memory buffer copying\r\n  * stress-memfd: store and read data in cacheline strides\r\n  * kernel-coverage: add bcachefs\r\n  * stress-metamix: remove empty line\r\n  * stress-metamix: handle EINTR for fdatasync and fsync\r\n  * stress-iomix: break out of stressor loops on EINTR for read or writes\r\n  * core-helper: add bcachefs magic",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.02",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.02",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.02",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/133020044",
                "release_id": 133020044,
                "date_created": "2023-12-07T11:43:19Z",
                "date_published": "2023-12-07T13:22:41Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/128780564",
                "tag": "V0.17.01",
                "name": "V0.17.01",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "Changelog:\r\n\r\n  [Andrey Gelman]\r\n  * stress-led: use shim_strlcpy instead of strlcpy\r\n\r\n  [Max Kellermann]\r\n  * stress-splice: remove \"Exercise 1 byte splice, zero flags\" call\r\n\r\n  [Colin Ian King]\r\n  * Makefile: bump version\r\n  * debian/control: move homepage URL\r\n  * README.md: add a few more links to research papers\r\n  * Manual: update date with release\r\n  * stress-vnni: remove extraneous word just in some messages\r\n  * core-config-check: only report non-tty attached message when not\r\n    using a tty\r\n  * core-cpuidle: remove redundant initialization of cc\r\n  * stress-sigsegv: only reference expected_addr if SA_SIGINFO is defined\r\n  * core-helper: rename si_code to sig_code to fix macro clash with Minix\r\n  * stress-trig: cater for 16, 12 and other sized long doubles\r\n  * stress-utime: cast integer constants to time_t for time_t struct\r\n    values\r\n  * stress-schedmix: fix build warning for SCHED_OTHER case\r\n  * stress-schedmix: only declare case_sched_other when required\r\n  * stress-trig: voidify return from call to stress_get_setting\r\n  * stress-uprobe: check for concurrent access to\r\n    /sys/kernel/debug/tracing/trace_pipe\r\n  * stress-schedpolicy: only declare case_sched_other when is required\r\n  * stress-sigsegv: add PROT_NONE read to force SIGSEGV\r\n  * core-shim: just call stat libc funcs for stat/lstat/fstat\r\n  * stress-trig: lower precision if long double is same size as double\r\n  * stress-msg: pass down error from receiver to parent\r\n  * stress-cpu: advise not to use --cpu-method all when specifying\r\n    --cpu-load\r\n  * stress-ng: remove need to include core-put.h\r\n  * core-madvise: add mergeable madvise helper, use it on some mmap calls\r\n  * stress-trig: drop precision for float trig functions, add NULL on\r\n    opt_set_funcs\r\n  * stress-trig: Add TARGET_CLONES to use optimial float instructions\r\n  * stress-trig: add a new trigonometric function stressor\r\n  * stress-workload: remove NOINLINE to fix clang builds\r\n  * stress-workload: make buffer uint8_t * rather than void *\r\n  * stress-workload: constify pointers w1 and w2 in stress_workload_cmp\r\n  * stress-copy-file: make stress_copy_file_seek64 an inlined static\r\n    helper\r\n  * core-config-check: include core_config_check.h to check\r\n    stress_config_check prototype\r\n  * stress-ng: remove CASE_FALLTHROUGH macro\r\n  * stress-ng: exit with EXIT_FAILURE if locks fail to create\r\n  * stress-ng: exit with EXIT_FAILURE if shared heap cannot be allocated\r\n  * core-helper: add missing check for HAVE_SYS_PRCTL_H when using prctl\r\n  * core-helper: add extra macro check for HAVE_SYS_UTSNAME_H when using\r\n    utsname\r\n  * stress-sctp: add extra macro checks for SCTP_SS_* macros\r\n  * stress-remap: voidify unused function parameter remap_mlock\r\n  * stress-switch: add extra check for HAVE_KEY_T\r\n  * stress-sem-sysv: add extra check for HAVE_KEY_T\r\n  * stress-syscall: need to check for HAVE_REMOVEXATTR for\r\n    syscall_xattr_name\r\n  * stress-syscall: need to check for HAVE_GETXATTR for syscall_xattr_name\r\n  * stress-wcs: add some extra macro sanity checking for wcs* functions\r\n  * core-ftrace: add extra macro check for RB tree functionality\r\n  * stress-sparsematrix: add extra macro checks for tree types\r\n  * core-ftrace: check if HAVE_BSD_SYS_TREE_H is defined for trees\r\n  * stress-ng.h: clean up some spacing in macros\r\n  * stress-context: only report context address mapping for instance 0\r\n  * stress-context: avoid using alternative stacks in a swapcontext\r\n  * stress-ng: add aligned padding for counter metrics, rename it to pad\r\n  * core-log: move ABORT_FAILURES from stress-ng.h to core-log\r\n  * core-try-open: move STRESS_TRY_* macros to core-try-open.h\r\n  * stress-dup: move STRESS_FD_MAX from stress-ng.h to stress-dup\r\n  * stress-ng: move a few more macros from stress-ng.h to stress-ng.c\r\n  * stress-mknod: move DEFAULT_DIRS macro to stress-mknod\r\n  * stress-ng: move macros from stress-ng.h to stress-ng.c\r\n  * stress-link: move DEFAULT_LINKS macro to stress-link\r\n  * stress-access: remove trailing tab\r\n  * stress-context: add SIGSEGV debug handling\r\n  * core-helper: only dump object code for SIGILL\r\n  * core-helper: add sigsegv handler and more debug to handlers\r\n  * stress-mpfr: clean up indentation\r\n  * stress-workload: add fused-multiply-add workload method\r\n  * stress-workload: add --workload method option to specify work\r\n    exercising method\r\n  * stress-workload: add pause/yield workload\r\n  * stress-syncload: use arm asm built-in for yield\r\n  * syscalls.txt: update Copyright dates\r\n  * stress-udp: use SO_REUSEADDR before bind\r\n  * README.md: add another kernel bug found by using stress-ng\r\n  * stress-file-ioctl: remove size check on FIOQSIZE\r\n  * core-shim: fix missing ; on stat calls\r\n  * core-shim: add shim wrapper for stat\r\n  * core-shim: add shim wrapper for lstat\r\n  * stress-iomix: use shim_copy_filerange and 64 bit offsets\r\n  * stress-fpunch: cast offset to intmax_t to match print format specifier\r\n  * core-shim: shim_copy_file_range: use shim_off64_t instead of\r\n    shim_loff_t\r\n  * core-helper: make buffer tmp larger to avoid gcc-12.2.0 m68k warning\r\n  * core-shim: add shim wrapper for fstat\r\n  * stress-open: try O_TMPFILE on temp_dir first, then fall back to /tmp\r\n  * stress-workload: scale workload by number of threads\r\n  * stress-workload: use correct delay time between next work item for\r\n    threaded workloads\r\n  * stress-workload: add an evenly spaced scheduling distribution option\r\n  * stress-workload: add in missing workload duration for poisson dist\r\n  * core-helper: provide warning when using the 0 reset timer-slack\r\n    setting\r\n  * stress-workload: provide --timer-slack advice when quanta is low\r\n  * stress-workload: add a poisson process method of scheduled time\r\n    generation\r\n  * stress-*: add support for more floating point types\r\n  * Makefile.config: use actual _Decimal* type names\r\n  * stress-*: use _Float128 or __float128 depending on what is available\r\n  * stress-*: replace HAVE_FLOAT128 with HAVE__float128\r\n  * stress-*: replace HAVE_FLOAT80 with HAVE__float80\r\n  * stress-*: replace HAVE_FLOAT64 with HAVE_Float64\r\n  * stress-*: replace HAVE_FLOAT32 with HAVE_Float32\r\n  * stress-*: replace HAVE_FLOAT16 with HAVE_fp16\r\n  * stress-*: replace HAVE_FLOAT_DECIMAL* with HAVE_Decimal*\r\n  * stress-workload: set workload_threads to zero if mq or pthreads not\r\n    available\r\n  * stress-workload: compare failed wq with cast value of -1\r\n  * stress-workload: add --workload-threads option to use threads\r\n  * stress-workload: remove CLASS_INTERRUPT from class\r\n  * stress-link: minor speedup for mass file unlinking for minix 3 fs\r\n  * stress-workload: fix scheduler build issues for non-linux builds\r\n  * stress-vma: use shim_mincore instead of mincore\r\n  * stress-workload: add memory flush/read work item\r\n  * stress-workload: fix missing break in switch\r\n  * stress-workload: add yield instead of very small sleeps\r\n  * stress-workload: add a getpid() workload\r\n  * stress-vma: fix missing proc-maps metrics\r\n  * kernel-coverage: add workload sched workers\r\n  * stress-workload: add --workload-sched option\r\n  * stress-workload: add more randomly selected workloads\r\n  * stress-workload: print histograph in debug verbose mode only\r\n  * stress-workload: add a new scheduling workload stressor\r\n  * stress-access: remove trailing space\r\n  * README.md: update contributors list\r\n  * stress-shm-sysv: add more information on shmat failure\r\n  * README.md: add two more research citations\r\n  * kerne-coverage: mount hfs, hfsplus with -o rw, increase loopback to\r\n    4GB\r\n  * stress-swap: handle ENOSPC more gracefully as a skipped stressor\r\n  * stress-access: don't report chmod errors for some filesystems\r\n  * stress-led: add LED /sysfs exercising stressor (Linux)\r\n  * README.md: update contributors list\r\n  * core-killpid: make killable timeout 10 minutes instead of 3\r\n  * core-helper: add musl gcc detection\r\n  * Add HOT OPTIMIZE3 attributes to random data filling helper funcs\r\n  * core-mwc: replace just OPTIMIZE3 with HOT OPTIMIZE3 on highly used\r\n    mwc funcs\r\n  * test/test-libxxhash.c: include string.h and make buffer static\r\n  * Manual: update vma manual description to reflect recent vma changes\r\n  * stress-vma: reduce number of concurrent vma processes per instances\r\n    to 2\r\n  * stress-vma: fix 32/64 bit address generation\r\n  * README.md: add two more research paper citations\r\n  * core-*, stress-*: Add musl-gcc detection and HAVE_COMPILER_MUSL\r\n  * stress-vma: add reading /proc/self/maps\r\n  * stress-mva: add mprotect and msync\r\n  * stress-vma: add mincore calls on pages\r\n  * stress-procfs: use pthread_cancel to cancel pthreads before join\r\n  * core-config-check: fix inverted tty message\r\n  * stress-cgroup: fix duplicated open flags, use S_IRGRP | S_IWGRP\r\n  * core-config-check: check for powersave cpu governor\r\n  * core-shim: remove debug stress_process_info call\r\n  * stress-open: report filesystem type on O_DIRECT open/create issue\r\n  * stress-dev: use stress_kill_and_wait instead of kill and wait combo\r\n  * core-shim: shim_wait: bail out after 3 minutes of waiting\r\n  * core-helper: add stress_process_info to dump process state\r\n  * core-*, stress-*: use %jd and (intmax_t) cast for all pid_t formatting\r\n  * core-*/stress-*: rename pid to PID across system\r\n  * core-killpid: give up killing PID and debug report this after 3\r\n    minutes\r\n  * kernel-coverage.sh: add --mmaphuge-file option to text mix\r\n  * stress-mmaphuge: add --mmaphuge-file option to attempt to mmap onto\r\n    a 16GB file\r\n  * core-config-check: add system configuration sanity checks\r\n  * kernel-coverage.sh: add /usr/sbin to path for gcov tools\r\n  * stress-sysfs: terminate child process and pthreads using helper\r\n",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.01",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.01",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.01",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/128780564",
                "release_id": 128780564,
                "date_created": "2023-11-09T17:42:55Z",
                "date_published": "2023-11-09T19:04:23Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/124188517",
                "tag": "V0.17.00",
                "name": "V0.17.00",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "Celebrating a decade of stress-ng, the 0.17.00 stress-ng release contains three new stressors; a virtual memory area (vma) stressor, a Linux cgroup v2 stressor (cgroup) and a mixed metadata file stressor (metamix)\r\n\r\nChangelog:\r\n\r\n  * Makefile: bump version to 0.17.00\r\n  * core-out-of-memory: treat zero timeout as ignore timeout check\r\n  * stress-nanosleep: voidify function parameter ctxt\r\n  * stress-nanosleep: fix build issue on Oracle Linux 6.1\r\n  * README.md: add another research paper citation\r\n  * test/test-swap.c: make array swapfile const\r\n  * test/test-sendmmsg: fix incorrect indexes in msg_iov2\r\n  * test/test-recvmmsg: fix incorrect indexes in msg_iov2\r\n  * test/test-lseek: reduce scope of variables offset and ret\r\n  * test/test-libkmod: constify pointer mod\r\n  * test/test-inotify: constify pointer\r\n  * README.md: update number of stressors\r\n  * stress-af-alg: treat EINTR as non-fatal in error reporting\r\n  * stress-vma: add madvise() calls to pages for extra contention\r\n  * README.md: Add another presentation link\r\n  * sreess-io-uring: remove verbose debug\r\n  * stress-ng: remove redundant assignment to variable handler_set\r\n  * stress-vma: remove redundant call to getpid\r\n  * stress-metamix: remove unused calls to stress_exit_status\r\n  * stress-cgroup: voidify return from fstat\r\n  * stress-softlockup: cast mmap return to uint8_t * to clear up build\r\n    warning\r\n  * core-helper: fix uninitialized totalswap and freeswap for BSD\r\n    stress_get_meminfo\r\n  * stress-cgroup: exercise a child process in cgroup\r\n  * stress-cgroup: exercise seek+read on cgroup files for more exercising\r\n  * stress-landlock: silently ignore ENOSYS when EINVAL is intended\r\n  * stress-cgroup: improve linux only build checks\r\n  * stress-cgroup: minimal linux cgroup v2 stressor\r\n  * stress-landlock: remove debug return 0 in landlock supported check\r\n  * stress-io-uring: silently ignore EINVAL for unimplemented ops\r\n  * core-shim: fix FTBFS, missing ; on membarrier call\r\n  * README.md: Add citation link to another academic paper\r\n  * stress-vma: cast mmap'd void pointer to stress_vma_metrics_t *\r\n  * stress-nanosleep: re-order #defines and typedef for non-pthread builds\r\n  * stress-dir: cast isdigit arg to int to clear up minix build warning\r\n  * core-cpuidle: only define stress_cpuidle_cstate_add_unique for linux\r\n    builds\r\n  * stress-vma: use MAP_GROWSDOWN only if it is defined\r\n  * stress-utime: only exercise VFAT utime bounds for 64 bit systems\r\n  * core-pragma.h: remove -Wstringop-overflow for older toolchains\r\n  * core-pragma: use -Wstringop-overflow on toolchains that support it\r\n  * stress-vma: fix build issues with systems without MLOCK_ONFAULT\r\n  * stress-softlockup: add rep sto on 1MB buffer for x86\r\n  * stress-landlock: traverse file system adding as many files as possible\r\n  * stress-landlock: fix non-working flags, re-work stressor\r\n  * stress-vma: Add a new virtual memory address stressor\r\n  * presentations: Add kernel recipes 2023 presentation\r\n  * stress-dev: remove shadowed pointer dev\r\n  * core-cpuidle: remove unused variable max_cpus\r\n  * core-shim: add waitpid build check and use waitpid if it is defined\r\n  * core-shim: use membarrier if it is defined\r\n  * stress-dev: exercise /dev/cdc-wdm*\r\n  * README.md: add another performance issue found with stress-ng\r\n  * stress-swap: add filesystem type when swapon fails\r\n  * kernel-coverage: fix typo in ionice loop\r\n  * kernel-coverage: add swap on file systems for more exercising\r\n  * stress-getrandom: add invalid GRND_INSECURE | GRND_RANDOM |\r\n    GRND_NONBLOCK flags\r\n  * stress-dev: add Linux /dev/vmci version ioctls\r\n  * stress-dev: exercise /dev/radio with v4l ioctls\r\n  * stress-dev: add /dev/lirc ioctl get commands\r\n  * stress-sysfs: add finer grained locking, add sysfs exercise metrics\r\n  * stress-utime: exercise some more times outside specific ranges\r\n  * stress-fallocate: use O_SYNC'd fallocate every 16 bogo-loops\r\n  * core-shim: handle posix_fallocate error returns correctly\r\n  * stress-open: exercise two different invalid futimesat times\r\n  * stress-shm: exercise a range of fallocate modes on shm\r\n  * stress-sleep: add C state residency sleep durations to exercise deep\r\n    C state sleeps\r\n  * stress-nanosleep: add --nanosleep-method to specify different\r\n    nanosleep methods\r\n  * stress-nanosleep: also use C state residency durations for nanosleeps\r\n  * core-cpuidle: allocate cpu C states and residency info in linked list\r\n  * stress-dir: use stat or fstat depending if open fails or not\r\n  * stress-dev: randomize the order of devices\r\n  * stress-apparmor: remove unused commented out variable counter_lock\r\n  * stress-dir: add file open/close on concurrent directory accesses\r\n  * stress-dev: exercise /dev/dm with queued IO under RCU protection\r\n  * stress-dir: reduce scope of variable d and make it const\r\n  * core-helper: reduce scope of variable duration, make t const\r\n  * core-log: clean up redundant variable initialization and\r\n    constifications\r\n  * core-clocksource: add check to see if HPET clocksource is being used\r\n  * stress-dir: exercise readdir and rewinddir after populating a directory\r\n  * stress-metamix: make verification optional with --verify option\r\n  * stress-metamix: allow small 512 byte sizes, and mmap + check pages\r\n  * stress-*: remove SIGTERM kills before SIGKILL kills\r\n  * stress-*: use stress_kill_pid_wait() for kill/wait combos\r\n  * core-*: use stress_kill_pid_wait() for kill/wait combos\r\n  * stress-*: use stress_kill_pid() for kill SIGKILLs\r\n  * core-log: only sync writes to log file and not stderr, stdout\r\n  * core-log: don't write to logfile if it is not opened\r\n  * core-*: fix syscall typo process_release -> process_mrelease\r\n  * core-out-of-memory: include core-killpid.h\r\n  * core: use stress_kill_pid for SIGKILLs\r\n  * core-killpid: use process memory relasing if signal is SIGKILL\r\n  * core-helper: remove some empty lines\r\n  * core-helper: join broken literal strings\r\n  * stress-vecmath: fix call to stress_catch_sigill\r\n  * stress-ng: remove some empty lines\r\n  * core-helper: add SIGILL handler for code that uses target clones\r\n  * stress-metamix: add a new stressor that exercises a mix of file\r\n    metadata operations\r\n  * stress-epoll: silently ignore -ve parameter passed to epoll_wait\r\n  * README.md: Add citation link to FIRESTARTER 2\r\n  * stress-ng: move child stressor invoking code into stress_run_child\r\n  * stress-ng: use stressor array size as limit for stressor loops\r\n  * core-log: fix ptr and size changes per write\r\n  * core-log: add pr_log_write_buf_fd helper for writes of buffer to a fd\r\n  * core-log: change semantics of pr_lock/unlock\r\n  * Manual: add more explanation why --log-lockess is useful\r\n  * core-helper: Add 1 ms yielding in logging and fork child startup\r\n  * README.md: add three more research paper links\r\n  * README.md: add four more research paper links",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.17.00",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.17.00",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.17.00",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/124188517",
                "release_id": 124188517,
                "date_created": "2023-10-08T19:31:59Z",
                "date_published": "2023-10-08T20:10:49Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/119904657",
                "tag": "V0.16.05",
                "name": "V0.16.05",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "  [Anisse Astier]\r\n  * stress-vnni: verify if selected method supports intrinsic in intrisinc\r\n    mode\r\n\r\n  [Erwan Velu]\r\n  * Manual: Indent stressors to ease man page reading\r\n\r\n  [John Kacur]\r\n  * stress-ng: Fix text of license in stress-sleep.c\r\n\r\n  [Hsieh-Tseng Shen]\r\n  * stress-pty: don't treat EINTR as failure when tcdrain is interrupted\r\n\r\n  [matoro]\r\n  * core-asm-generic: reintroduce HAVE_ASM_NOP check\r\n\r\n  [ Colin Ian King ]\r\n  * Makefile: bump version\r\n  * Makefile: add missing core-time.h from headers\r\n  * Makefile: remove snap from make dist rule\r\n  * stress-touch: fix missing help args for --touch-method and --touch-opts\r\n  * stress-ng: fix missing arg for --timer-slack help\r\n  * stress-stream: fix --stream-index help, missing arg\r\n  * stress-ring-pipe: fix help, missing args for --ring-pipe-num and\r\n    --ring-pipe-size\r\n  * stress-mremap: fix type in mremap-mlock help\r\n  * stress-module: use settings names and variable names that match\r\n    boolean args\r\n  * core-opts: module-no-modver and module-no-vermag are argless, fix these\r\n  * stress-ng: fix --max-fd help, needs arg N\r\n  * stress-dirmany: fix --dirmany-bytes option in help\r\n  * stress-cache: fix help for cacheline writeback should be --cache-clwb\r\n  * stress-affinity: add missing numeric arg in --affinity-sleep option\r\n    help\r\n  * stress-llc-affinity: Fix spelling mistake \"memiry\" -> \"memory\"\r\n  * Makefile: restore verify-test-all to 5 secs per stressor\r\n  * stress-misaligned: double the timeout time for very heavily loaded\r\n    systems\r\n  * stress-cpu-online: fix nixos build error, missing semicolon\r\n  * stress-kvm: skip stressor if /dev/kvm is already in use\r\n  * Makefile: ignore warning return values in regression tests\r\n  * stress-syscall: Add BSD rfork() system call\r\n  * README.md: add another kernel reference\r\n  * stress-mlock: only show munlock metrics if they are available\r\n  * core-opts: fix disabled --perf option\r\n  * Add map_shadow_stack to TODO list\r\n  * stress-enosys: add map_shadow_stack\r\n  * stress-dev: only use stress_dev_hid_linux if HAVE_LINUX_HIDRAW_H is\r\n    defined\r\n  * stress-ng.h: define _RENTRANT for __sun__ builds for threading\r\n  * test/test-builtin-bitreverse: don't use random() to remove OpenBSD\r\n    warnings\r\n  * tests: don't use random() to remove OpenBSD warnings\r\n  * core-cpu-cache: cast uint32 values to uint64_t before multiply\r\n  * stress-sigbus: unconstify ptr8, clean up pedantic warnings:\r\n  * core-helper: stress_write_buffer: use void * for ptr rather than char *\r\n  * core-setting: fix  const warning with pedantic builds\r\n  * core-sort: fix const warning with pedantic builds\r\n  * stress-icache: make function stress_icache_func static\r\n  * stress-zero.c: only declare mmap_counter and mmap_index for linux\r\n    builds\r\n  * stress-softlockup: reduce scope of variables t and d\r\n  * stress-icache: reduce scope of variable val\r\n  * stress-fma: fix return type of stress_fma_rnd_float to float\r\n  * core-builtin: ensure shim_sqrtl returns long double\r\n  * stress-bad-ioctl: constify pointers\r\n  * stress-bad-ioctl: reduce scope of variables type, nr and ret\r\n  * stress-aiol: cast result of multiply to same type as offset\r\n  * core-cpu-cache: make cache_size match the same type as\r\n    cpu->caches[i].size\r\n  * stress-af-alg: constify pointer ptr\r\n  * core-shim: shim_posix_fallocate: reduce scope of variable ret\r\n  * core-numa: stress_parse_node: constify pointer str\r\n  * core-affinity: stress_parse_cpu: constify pointer str\r\n  * core-setting: remove unused field uintptr_t from struct\r\n  * core-interrupts: change scope of pointer ptr\r\n  * stress-watchdog: re-work code to remove need for watchdog_close label\r\n  * Makefile: force vnni to be built with at least -O2\r\n  * stress-vnni: move scope of variable to inside loop\r\n  * stress-far-branch: clean false positive gcc warning by initializing ptr\r\n  * stress-bad-altstack: make variable rnd non-clobberable\r\n  * Add --interrupts option to enable interrupt accounting\r\n  * core-interrupts: parse /proc/interrupts once for all types\r\n  * README.md: add another paper citation\r\n  * README.md: add two more kernel issues found with stress-ng\r\n  * stress-enosys: add fchmodat2\r\n  * stress-syscall: add fchmodat2\r\n  * test-chmod: add fchmodat2 Linux 6.6 call and shim, add fchmodat shim\r\n  * core-opts.h: move PR_OPT option macros to core-opts.h\r\n  * core-opts: move gnu long options into core-opts.c\r\n  * stress-prctl: add build check for new prctl macros\r\n  * stress-prctl: exercise PR_RISCV_V_{GET|SET}_CONTROL\r\n  * stress-prctl: add PR_GET_AUXV\r\n  * README.md: add another kernel issue found using stress-ng\r\n  * stess-schedmix: reduce scope of variable policy and remove\r\n    initialisation\r\n  * test/test-vfork.c: replace exit with _exit\r\n  * stress-jpeg: stress_rgb_compress_to_jpeg: ensure duration is\r\n    initialized to zero\r\n  * stress-dev: add lseek + read on /dev/nvram, voidify some args to\r\n    /dev/hid\r\n  * stress-dev: exercise linux /dev/hid ioctls\r\n  * stress-dev: exercise linux /dev/acpi_thermal_rel ioctls\r\n  * stress-ng.h: rename PR_* macros to OPT_FLAGS_PR_*\r\n  * core-thermal-zone.h: move perf related structs and defines to\r\n    core-thermal-zone.h\r\n  * core-perf.h: move perf related structs and defines to core-perf.h\r\n  * stress-ng.h: remove unused typedef stress_func_t\r\n  * README.md: add Anisse Astier to contributors list\r\n  * Manual: rename AF_ALG stressor title\r\n  * stress-netdev: exercise invalid lengths in ifr_ifindex and ifc_len\r\n  * core-helper.h: move stress_align_stack into core-helper.h\r\n  * core-time: move function prototypes to core-time.h\r\n  * move stress_pagein_self definition to core-thrash.h\r\n  * core-helper.h: move stress_warn_once from stress-ng.h to core-helper.h\r\n  * stress-ng.h: remove unused legacy function declarations\r\n  * core-helper: move stress_sigchld_set_handler from stress-ng.c to\r\n    core-helper.c\r\n  * include core-killpid.h for stress_killpid definition\r\n  * stress-ng.h: remove stress_killpid, it is in core-kill.h\r\n  * stress-ng.h: remove stress_clean_dir\r\n  * core-helper: move stress_clean_dir and helpers to core-helper.c\r\n  * core-helper: rename pr_* helper functions to stress_*\r\n  * Makefile: add core-shim.h to headers\r\n  * core-helper: move function prototypes and macros to core-helper.h\r\n  * core-shim: move function prototypes and typedefs to core-shim.h\r\n  * Remove snapcraft yaml file\r\n  * core-helper: provide non BSD no-op variants of getsysctl functions\r\n  * stress-sock: enable --sock-msgs option, set default from 1 to 1000\r\n    messages\r\n  * stress-sock: remove need to assign recvfunc pointer for every send\r\n  * Manual: clarify support for --vmstat option\r\n  * Manual: add --metrics RSS description\r\n  * stress-dccp: add --dccp-msgs option, set default from 16 to 10000\r\n    messages\r\n  * README.md: add some more citiations\r\n  * Manual: minor stressor description tweaks\r\n  * Manual: minor corrections\r\n  * Manual: re-adjust first option after each stressor heading using .TQ\r\n  * stress-ng: make --metrics brief dump just bogo-ops metrics, more\r\n    metrics with --metrics option\r\n  * stress-null: add --null-write for write only null benchmarking\r\n  * core-shared-heap: move function prototypes to core-shared-heap.h\r\n  * core-processes: move function prototypes to core-processes.h\r\n  * core-sched: remove unused function stress_set_deadline_sched\r\n  * core-sched: move function prototypes to core-sched.h\r\n  * Makefile: add missing core-limit.h\r\n  * stress-ng.h: replace lock declarations with include of core-lock.h\r\n  * core-mwc: move function prototypes to core-mwc.h\r\n  * core-log: move function prototypes to core-log.h\r\n  * core-setting: move function prototypes to core-setting.h\r\n  * core-*: add missing extern and missing inclusion of header in core*c\r\n  * Add core-attribute.h and core-parse-opts.h\r\n  * core-out-of-memory: move function prototypes to core-out-of-memory.h\r\n  * core-lock: move function prototypes to core-lock.h\r\n  * core-limit: move function prototypes to core-limit.h\r\n  * core-job: move function prototypes to core-job.h\r\n  * core-vmstat: move function prototypes to core-vmstat.h\r\n  * core-try-open: move function prototypes to core-try-open.h\r\n  * core-numa: move function prototypes to core-numa.h\r\n  * core-mounts: move function prototypes to core-mounts.h\r\n  * Makefile: add two missing header files\r\n  * core-mmap: move function prototypes to core-mmap.h\r\n  * core-mlock: move function prototypes to core-mlock.h\r\n  * core-mincore: move function prototypes to core-mincore.h\r\n  * core-madvise: move function prototypes to core-madvise.h\r\n  * core-klog: move function prototypes to core-klog.h\r\n  * core-killpid: move function prototypes to core-killpid.h\r\n  * core-io-priority: move function prototypes to core-io-priority.h\r\n  * core-interrupts: move function prototypes to core-interrupts.h\r\n  * core-ignite-cpu: move function prototypes to core-ignite-cpu.h\r\n  * core-cpuidle: move stress_log_cpuidle_info to core-cpuidle.h\r\n  * core-affinity: move function prototypes to core-affinity.h\r\n  * stress-ng: stress_class_info_t: constify class\r\n  * stress-ng: stress_verifiable_mode: constify mode arg\r\n  * stress-ng: move stress_kill_stressors to remove need for forward\r\n    declaration\r\n  * stress-ng: rename some variables, add some inlining\r\n  * stress-ng: rename classes to stress_classes\r\n  * stress-ng.h: minor clean-ups\r\n  * stress-ng.h: move some compiler specific #define's\r\n  * core-opts: move long option enum into core-opts.h\r\n  * stress-ng: fix spelling mistake in --oom-avoid message\r\n  * README.md: update list of contributors\r\n  * Manual: minor indention fixup for some hdd stressor options\r\n  * stress-ng.h: use STATX definitions for SHIM'd macros if they exist\r\n  * stress-ng.h: some minor #define and comment clean-ups\r\n  * stress-ng.h: remove old legacy HDD flags and fix starting bit for\r\n    OPT_FLAGS_METRICS\r\n  * stress-ng.h: annotate the bit flags for the option flags\r\n  * stress-ng.h: remove g_caught_signal - it is no longer used\r\n  * stress-ng.h: remove g_opt_parallel from header, it's only used in\r\n    stress-ng.c\r\n  * stress-ng.h: remove g_opt_sequential from header, it's only used in\r\n    stress-ng.c\r\n  * stress-sem-sysv: skip stressor if semaphore can't be initialized early\r\n  * stress-zero: rate reduce the amount of mmap's in stressor loop\r\n  * stress-zero: add --zero-read option just to benchmark /dev/zero reads\r\n  * stress-dir: add directory renaming while exercising readdir\r\n  * stress-vecshuf: implement shuffle if __builtin_shuffle does not exist\r\n  * README.md: add two more research paper citations\r\n",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.16.05",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.16.05",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.16.05",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/119904657",
                "release_id": 119904657,
                "date_created": "2023-09-05T08:03:02Z",
                "date_published": "2023-09-05T08:34:51Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/117117568",
                "tag": "V0.16.04",
                "name": "V0.16.04",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "Fixes for non-linux build issues ",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.16.04",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.16.04",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.16.04",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/117117568",
                "release_id": 117117568,
                "date_created": "2023-08-13T22:12:37Z",
                "date_published": "2023-08-14T07:42:13Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/116039678",
                "tag": "V0.16.03",
                "name": "V0.16.03",
                "author": {
                    "name": "ColinIanKing",
                    "type": "User"
                },
                "description": "**Full Changelog**: https://github.com/ColinIanKing/stress-ng/compare/V0.16.02...V0.16.03",
                "tarball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/tarball/V0.16.03",
                "zipball_url": "https://api.github.com/repos/ColinIanKing/stress-ng/zipball/V0.16.03",
                "html_url": "https://github.com/ColinIanKing/stress-ng/releases/tag/V0.16.03",
                "url": "https://api.github.com/repos/ColinIanKing/stress-ng/releases/116039678",
                "release_id": 116039678,
                "date_created": "2023-08-11T08:33:37Z",
                "date_published": "2023-08-11T09:08:44Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/Dockerfile"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/kernel-coverage.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "run": [
        {
            "result": {
                "value": "```bash\ndocker run --rm ghcr.io/colinianking/stress-ng --help\n```\n\nor\n\n```bash\ndocker run --rm colinianking/stress-ng --help\n```\n",
                "type": "Text_excerpt",
                "original_header": "Running latest stress-ng snapshot in a container",
                "parent_header": [
                    "stress-ng (stress next generation)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "Send patches to colin.i.king@gmail.com or merge requests at\nhttps://github.com/ColinIanKing/stress-ng\n",
                "type": "Text_excerpt",
                "original_header": "Contributing to stress-ng:",
                "parent_header": [
                    "stress-ng (stress next generation)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "The [Ubuntu stress-ng reference guide](https://wiki.ubuntu.com/Kernel/Reference/stress-ng)\ncontains a brief overview and worked examples.\n",
                "type": "Text_excerpt",
                "original_header": "Quick Start Reference Guide",
                "parent_header": [
                    "stress-ng (stress next generation)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "value": "Run 4 CPU, 2 virtual memory, 1 disk and 8 fork stressors for 2 minutes and print measurements:\n```\nstress-ng --cpu 4 --vm 2 --hdd 1 --fork 8 --timeout 2m --metrics\nstress-ng: info:  [573366] setting to a 120 second (2 mins, 0.00 secs) run per stressor\nstress-ng: info:  [573366] dispatching hogs: 4 cpu, 2 vm, 1 hdd, 8 fork\nstress-ng: info:  [573366] successful run completed in 123.78s (2 mins, 3.78 secs)\nstress-ng: info:  [573366] stressor       bogo ops real time  usr time  sys time   bogo ops/s     bogo ops/s CPU used per\nstress-ng: info:  [573366]                           (secs)    (secs)    (secs)   (real time) (usr+sys time) instance (%)\nstress-ng: info:  [573366] cpu              515396    120.00    453.02      0.18      4294.89        1137.24        94.42\nstress-ng: info:  [573366] vm              2261023    120.01    223.80      1.80     18840.15       10022.27        93.99\nstress-ng: info:  [573366] hdd              367558    123.78     10.63     11.67      2969.49       16482.42        18.02\nstress-ng: info:  [573366] fork             598058    120.00     68.24     65.88      4983.80        4459.13        13.97\n```\n\nRun matrix stressor on all online CPUs for 60 seconds and measure temperature:\n```\nstress-ng --matrix -1 --tz -t 60\nstress-ng: info:  [1171459] setting to a 60 second run per stressor\nstress-ng: info:  [1171459] dispatching hogs: 8 matrix\nstress-ng: info:  [1171459] successful run completed in 60.01s (1 min, 0.01 secs)\nstress-ng: info:  [1171459] matrix:\nstress-ng: info:  [1171459]               acpitz0   75.00 C (348.15 K)\nstress-ng: info:  [1171459]               acpitz1   75.00 C (348.15 K)\nstress-ng: info:  [1171459]          pch_skylake   60.17 C (333.32 K)\nstress-ng: info:  [1171459]         x86_pkg_temp   62.72 C (335.87 K)\n```\n\nRun a mix of 4 I/O stressors and check for changes in disk S.M.A.R.T. metadata:\n```\nsudo stress-ng --iomix 4 --smart -t 30s\nstress-ng: info:  [1171471] setting to a 30 second run per stressor\nstress-ng: info:  [1171471] dispatching hogs: 4 iomix\nstress-ng: info:  [1171471] successful run completed in 30.37s\nstress-ng: info:  [1171471] Device     ID S.M.A.R.T. Attribute                 Value      Change\nstress-ng: info:  [1171471] sdc        01 Read Error Rate                   88015771       71001\nstress-ng: info:  [1171471] sdc        07 Seek Error Rate                   59658169          92\nstress-ng: info:  [1171471] sdc        c3 Hardware ECC Recovered            88015771       71001\nstress-ng: info:  [1171471] sdc        f1 Total LBAs Written               481904395         877\nstress-ng: info:  [1171471] sdc        f2 Total LBAs Read                 3768039248        5139\nstress-ng: info:  [1171471] sdd        be Temperature Difference             3670049           1\n```\n\nBenchmark system calls using the VDSO:\n```\nstress-ng --vdso 1 -t 5 --metrics\nstress-ng: info:  [1171584] setting to a 5 second run per stressor\nstress-ng: info:  [1171584] dispatching hogs: 1 vdso\nstress-ng: info:  [1171585] stress-ng-vdso: exercising vDSO functions: clock_gettime time gettimeofday getcpu\nstress-ng: info:  [1171585] stress-ng-vdso: 9.88 nanoseconds per call (excluding 1.73 nanoseconds test overhead)\nstress-ng: info:  [1171584] successful run completed in 5.10s\nstress-ng: info:  [1171584] stressor       bogo ops real time  usr time  sys time   bogo ops/s     bogo ops/s CPU used per\nstress-ng: info:  [1171584]                           (secs)    (secs)    (secs)   (real time) (usr+sys time) instance (%)\nstress-ng: info:  [1171584] vdso          430633496      5.10      5.10      0.00  84375055.96    84437940.39        99.93\nstress-ng: info:  [1171584] vdso               9.88 nanoseconds per call (average per stressor)\n```\n\nGenerate and measure branch misses using perf metrics:\n```\nsudo stress-ng --branch 1 --perf -t 10 | grep Branch\nstress-ng: info:  [1171714]                604,703,327 Branch Instructions            53.30 M/sec\nstress-ng: info:  [1171714]                598,760,234 Branch Misses                  52.77 M/sec (99.02%)\n```\n\nRun permutations of I/O stressors on a ZFS file system, excluding the rawdev stressor with kernel log error checking:\n```\nstress-ng --class io --permute 0 -x rawdev -t 1m --vmstat 1 --klog-check  --temp-path /zfs-pool/test\n```\n\nx86 only: measure power using the RAPL interfaces on 8 concurrent 3D matrix stressors with verification enabled.\nNote that reading RAPL requires root permission.\n\n```\nsudo stress-ng --matrix-3d 8 --matrix-3d-size 512 --rapl -t 10 --verify\nstress-ng: info:  [4563] setting to a 10 secs run per stressor\nstress-ng: info:  [4563] dispatching hogs: 8 matrix-3d\nstress-ng: info:  [4563] matrix-3d:\nstress-ng: info:  [4563]  core                     6.11 W\nstress-ng: info:  [4563]  dram                     2.71 W\nstress-ng: info:  [4563]  pkg-0                    8.20 W\nstress-ng: info:  [4563]  psys                    16.90 W\nstress-ng: info:  [4563]  uncore                   0.06 W\nstress-ng: info:  [4563] skipped: 0\nstress-ng: info:  [4563] passed: 8: matrix-3d (8)\nstress-ng: info:  [4563] failed: 0\nstress-ng: info:  [4563] metrics untrustworthy: 0\nstress-ng: info:  [4563] successful run completed in 11.38 secs\n```\n\nMeasure C-state residency:\n\n```\nstress-ng --intmath 0 -t 1m --c-states\nstress-ng: info:  [6998] setting to a 1 min run per stressor\nstress-ng: info:  [6998] dispatching hogs: 8 intmath\nstress-ng: info:  [6998] intmath:\nstress-ng: info:  [6998]  C0     99.98%\nstress-ng: info:  [6998]  C1      0.00%\nstress-ng: info:  [6998]  C1E     0.01%\nstress-ng: info:  [6998]  C3      0.00%\nstress-ng: info:  [6998]  C6      0.01%\nstress-ng: info:  [6998]  C7s     0.00%\nstress-ng: info:  [6998]  C8      0.00%\nstress-ng: info:  [6998]  POLL    0.00%\nstress-ng: info:  [6998] skipped: 0\nstress-ng: info:  [6998] passed: 8: intmath (8)\nstress-ng: info:  [6998] failed: 0\nstress-ng: info:  [6998] metrics untrustworthy: 0\nstress-ng: info:  [6998] successful run completed in 1 min\n```\n",
                "type": "Text_excerpt",
                "original_header": "Examples",
                "parent_header": [
                    "stress-ng (stress next generation)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "The [Ubuntu stress-ng reference guide](https://wiki.ubuntu.com/Kernel/Reference/stress-ng)\ncontains a brief overview and worked examples.\n",
                "type": "Text_excerpt",
                "original_header": "Quick Start Reference Guide",
                "parent_header": [
                    "stress-ng (stress next generation)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "value": "* [Linux kernel performance test tool](https://cdrdv2-public.intel.com/723902/lkp-tests.pdf)\n\n2015:\n* [Enhancing Cloud energy models for optimizing datacenters efficiency](https://cs.gmu.edu/~menasce/cs788/papers/ICCAC2015-Outin.pdf)\n* [Tejo: A Supervised Anomaly Detection Scheme for NewSQL Databases](https://hal.archives-ouvertes.fr/hal-01211772/document)\n* [CoMA: Resource Monitoring of Docker Containers](http://www.scitepress.org/Papers/2015/54480/54480.pdf)\n* [An Investigation of CPU utilization relationship between host and guests in a Cloud infrastructure](http://www.diva-portal.org/smash/get/diva2:861239/FULLTEXT02)\n\n2016:\n* [Increasing Platform Determinism PQOS DPDK](https://www.intel.com/content/dam/www/public/us/en/documents/white-papers/increasing-platform-determinism-pqos-dpdk-paper.pdf)\n* [Towards Energy Efficient Data Management in HPC: The Open Ethernet Drive Approach](http://www.pdsw.org/pdsw-discs16/papers/p43-kougkas.pdf)\n* [CPU and memory performance analysis on dynamic and dedicated resource allocation using XenServer in Data Center environment](http://ieeexplore.ieee.org/document/7877341/)\n* [How Much Power Does your Server Consume? Estimating Wall Socket Power Using RAPL Measurements](http://www.ena-hpc.org/2016/pdf/khan_et_al_enahpc.pdf)\n* [DevOps for IoT Applications using Cellular Networks and Cloud](https://www.ericsson.com/assets/local/publications/conference-papers/devops.pdf)\n* [A Virtual Network Function Workload Simulator](https://uu.diva-portal.org/smash/get/diva2:1043751/FULLTEXT01.pdf)\n* [Characterizing and Reducing Cross-Platform Performance Variability Using OS-level Virtualization](http://www.lofstead.org/papers/2016-varsys.pdf)\n* [How much power does your server consume? Estimating wall socket power using RAPL measurements](https://www.researchgate.net/publication/306004997_How_much_power_does_your_server_consume_Estimating_wall_socket_power_using_RAPL_measurements)\n* [UIE: User-centric Interference Estimation for Cloud Applications](https://www3.cs.stonybrook.edu/~anshul/ic2e16_uie.pdf)\n\n2017:\n* [Auto-scaling of Containers: the impact of Relative and Absolute Metrics](https://www.researchgate.net/publication/319905237_Auto-Scaling_of_Containers_The_Impact_of_Relative_and_Absolute_Metrics)\n* [Testing the Windows Subsystem for Linux](https://blogs.msdn.microsoft.com/wsl/2017/04/11/testing-the-windows-subsystem-for-linux/)\n* [Practical analysis of the Precision Time Protocol under different types of system load](http://www.diva-portal.org/smash/get/diva2:1106630/FULLTEXT01.pdf)\n* [Towards Virtual Machine Energy-Aware Cost Prediction in Clouds](http://eprints.whiterose.ac.uk/124309/1/paper_final.pdf)\n* [Algorithms and Architectures for Parallel Processing](https://books.google.co.uk/books?id=S4wwDwAAQBAJ&pg=PA7&lpg=PA7&dq=http://kernel.ubuntu.com/~cking/stress-ng/&source=bl&ots=bVZccBq2Io&sig=rIqKWyEhGmVPosAJiemKjGgEv0M&hl=en&sa=X&ved=0ahUKEwiFo6LO2fbXAhWBtxQKHRcnDY04HhDoAQguMAE#v=onepage&q=http%3A%2F%2Fkernel.ubuntu.com%2F~cking%2Fstress-ng%2F&f=false)\n* [Advanced concepts and tools for renewable energy supply of Data Centres](https://www.riverpublishers.com/pdf/ebook/RP_9788793519411.pdf)\n* [Monitoring and Modelling Open Compute Servers](http://staff.www.ltu.se/~damvar/Publications/Eriksson%20et%20al.%20-%202017%20-%20Monitoring%20and%20Modelling%20Open%20Compute%20Servers.pdf)\n* [Experimental and numerical analysis for potential heat reuse in liquid cooled data centres](http://personals.ac.upc.edu/jguitart/HomepageFiles/ECM16.pdf)\n* [Modeling and Analysis of Performance under Interference in the Cloud](https://www3.cs.stonybrook.edu/~anshul/mascots17.pdf)\n* [Effectively Measure and Reduce Kernel Latencies for Real time Constraints](https://elinux.org/images/a/a9/ELC2017-_Effectively_Measure_and_Reduce_Kernel_Latencies_for_Real-time_Constraints_%281%29.pdf)\n* [Monitoring and Analysis of CPU load relationships between Host and Guests in a Cloud Networking Infrastructure](http://www.diva-portal.org/smash/get/diva2:861235/FULLTEXT02)\n* [Measuring the impacts of the Preempt-RT patch](http://events17.linuxfoundation.org/sites/events/files/slides/rtpatch.pdf)\n* [Reliable Library Identification Using VMI Techniques](https://rp.os3.nl/2016-2017/p64/report.pdf)\n* [Elastic-PPQ: A two-level autonomic system for spatial preference query processing over dynamic data stream](https://www.researchgate.net/publication/319613604_Elastic-PPQ_A_two-level_autonomic_system_for_spatial_preference_query_processing_over_dynamic_data_streams)\n* [OpenEPC integration within 5GTN as an NFV proof of concept](http://jultika.oulu.fi/files/nbnfioulu-201706082638.pdf)\n* [Time-Aware Dynamic Binary Instrumentation](https://uwspace.uwaterloo.ca/bitstream/handle/10012/12182/Arafa_Pansy.pdf?sequence=3)\n* [Experience Report: Log Mining using Natural Language Processing and Application to Anomaly Detection](https://hal.laas.fr/hal-01576291/document)\n* [Mixed time-criticality process interferences characterization on a multicore Linux system](https://re.public.polimi.it/retrieve/handle/11311/1033069/292404/paper-accepted-version.pdf)\n* [Cloud Orchestration at the Level of Application](https://ec.europa.eu/research/participants/documents/downloadPublic/RFpPOGljenYrclUyK3N5eFN4NnVVZEJpVEl3TTAxcFhXRzRGaXdzN2dmSjBycjNIbXB6dlJ3PT0=/attachment/VFEyQTQ4M3ptUWQ4VDN5UWNDYVZ0UEVSWSt2REhrV1Q=)\n\n2018:\n* [Multicore Emulation on Virtualised Environment](https://indico.esa.int/event/165/contributions/1230/attachments/1195/1412/04b_-_Multicore_-_Presentation.pdf)\n* [Stress-SGX : Load and Stress your Enclaves for Fun and Profit](https://seb.vaucher.org/papers/stress-sgx.pdf)\n* [quiho: Automated Performance Regression Testing Using Inferred Resource Utilization Profiles](https://dl.acm.org/citation.cfm?id=3184422&dl=ACM&coll=DL&preflayout=flat)\n* [Hypervisor and Virtual Machine Memory Optimization Analysis](http://dspace.ut.ee/bitstream/handle/10062/60705/Viitkar_BSc2018.pdf)\n* [Real-Time testing with Fuego](https://elinux.org/images/4/43/ELC2018_Real-time_testing_with_Fuego-181024m.pdf)\n* [FECBench: An Extensible Framework for Pinpointing Sources of Performance Interference in the Cloud-Edge Resource Spectrum](https://www.academia.edu/68455840/FECBench_An_Extensible_Framework_for_Pinpointing_Sources_of_Performance_Interference_in_the_Cloud_Edge_Resource_Spectrum)\n* [Quantifying the Interaction Between Structural Properties of Software and Hardware in the ARM Big.LITTLE Architecture](https://research.abo.fi/ws/files/26568716/QuantifyingInteraction.pdf)\n* [RAPL in Action: Experiences in Using RAPL for Power Measurements](https://dl.acm.org/doi/10.1145/3177754)\n\n2019:\n* [Performance Isolation of Co-located Workload in a Container-based Vehicle Software Architecture](https://www.thinkmind.org/articles/ambient_2019_2_20_40020.pdf)\n* [Analysis and Detection of Cache-Based Exploits](https://ssg.lancs.ac.uk/wp-content/uploads/2020/07/analysis_and_detection_vateva.pdf)\n* [kMVX: Detecting Kernel Information Leaks with Multi-variant Execution](https://research.vu.nl/ws/files/122357910/KMVX.pdf)\n* [Scalability of Kubernetes Running Over AWS](https://www.diva-portal.org/smash/get/diva2:1367111/FULLTEXT02)\n* [A study on performance measures for auto-scaling CPU-intensive containerized applications](https://link.springer.com/article/10.1007/s10586-018-02890-1)\n* [Scavenger: A Black-Box Batch Workload Resource Manager for Improving Utilization in Cloud Environments](https://www3.cs.stonybrook.edu/~sjavadi/files/javadi_socc2019.pdf)\n* [Estimating Cloud Application Performance Based on Micro-Benchmark Profiling](https://core.ac.uk/download/pdf/198051426.pdf)\n* [Anomaly Detection in NFV Using Tree-Based Unsupervised Learning Method](https://osf.io/preprints/indiarxiv/fxubm)\n\n2020:\n* [Performance and Energy Trade-Offs for Parallel Applications on Heterogeneous Multi-Processing Systems](https://www.mdpi.com/1996-1073/13/9/2409/htm)\n* [C-Balancer: A System for Container Profiling and Scheduling](https://arxiv.org/pdf/2009.08912.pdf)\n* [Modelling VM Latent Characteristics and Predicting Application Performance using Semi-supervised Non-negative Matrix Factorization](https://ieeexplore.ieee.org/document/9284328)\n* [Semi-dynamic load balancing: efficient distributed learning in non-dedicated environments](https://dl.acm.org/doi/10.1145/3419111.3421299)\n* [A Performance Analysis of Hardware-assisted Security Technologies](https://openscholarship.wustl.edu/cgi/viewcontent.cgi?article=1556&context=eng_etds)\n* [Green Cloud Software Engineering for Big Data Processing](https://eprints.leedsbeckett.ac.uk/id/eprint/7294/1/GreenCloudSoftwareEngineeringForBigDataProcessingPV-KOR.pdf)\n* [Real-Time Detection for Cache Side Channel Attack using Performance Counter Monitor](https://www.proquest.com/docview/2533920884)\n* [Subverting Linux\u2019 Integrity Measurement Architecture](https://svs.informatik.uni-hamburg.de/publications/2020/2020-08-27-Bohling-IMA.pdf)\n* [Real-time performance assessment using fast interrupt request on a standard Linux kernel](https://onlinelibrary.wiley.com/doi/full/10.1002/eng2.12114)\n* [Low Energy Consumption on Post-Moore Platforms for HPC Research](https://revistas.usfq.edu.ec/index.php/avances/article/download/2108/2919/18081)\n* [Managing Latency in Edge-Cloud Environment](https://s2group.cs.vu.nl/files/pubs/2020-JSS-IG-Edge_Cloud.pdf)\n* [Demystifying the Real-Time Linux Scheduling Latency](https://bristot.me/files/research/papers/ecrts2020/deOliveira2020Demystifying.pdf)\n\n2021:\n* [Streamline: A Fast, Flushless Cache Covert-Channel Attack by Enabling Asynchronous Collusion](https://dl.acm.org/doi/pdf/10.1145/3445814.3446742)\n* [Experimental Analysis in Hadoop MapReduce: A Closer Look at Fault Detection and Recovery Techniques](https://www.mdpi.com/1131714)\n* [Performance Characteristics of the BlueField-2 SmartNIC](https://arxiv.org/pdf/2105.06619.pdf)\n* [Evaluating Latency in Multiprocessing Embedded Systems for the Smart Grid](https://www.mdpi.com/1996-1073/14/11/3322)\n* [Work-in-Progress: Timing Diversity as a Protective Mechanism](https://dl.acm.org/doi/pdf/10.1145/3477244.3477614)\n* [Sequential Deep Learning Architectures for Anomaly Detection in Virtual Network Function Chains](https://arxiv.org/pdf/2109.14276.pdf)\n* [WattEdge: A Holistic Approach for Empirical Energy Measurements in Edge Computing](https://www.researchgate.net/publication/356342806_WattEdge_A_Holistic_Approach_for_Empirical_Energy_Measurements_in_Edge_Computing)\n* [PTEMagnet: Fine-Grained Physical Memory Reservation for Faster Page Walks in Public Clouds](https://www.pure.ed.ac.uk/ws/portalfiles/portal/196157550/PTEMagnet_MARGARITOV_DOA19112020_AFV.pdf)\n* [The Price of Meltdown and Spectre: Energy Overhead of Mitigations at Operating System Level](https://www4.cs.fau.de/Publications/2021/herzog_2021_eurosec.pdf)\n* [An Empirical Study of Thermal Attacks on Edge Platforms](https://digitalcommons.kennesaw.edu/cgi/viewcontent.cgi?article=1590&context=undergradsymposiumksu)\n* [Sage: Practical & Scalable ML-Driven Performance Debugging in Microservices](https://people.csail.mit.edu/delimitrou/papers/2021.asplos.sage.pdf)\n* [A Generalized Approach For Practical Task Allocation Using A MAPE-K Control Loop](https://www.marquez-barja.com/images/papers/A_Generalized_Approach_For_Software_Placement_In_The_Fog_Using_A_MAPE_K_Control_Loop-AuthorVersion.pdf)]\n* [Towards Independent Run-time Cloud Monitoring](https://research.spec.org/icpe_proceedings/2021/companion/p21.pdf)\n* [FIRESTARTER 2: Dynamic Code Generation for Processor Stress Tests](https://tu-dresden.de/zih/forschung/ressourcen/dateien/projekte/firestarter/FIRESTARTER-2-Dynamic-Code-Generation-for-Processor-Stress-Tests.pdf?lang=en)\n* [Performance comparison between a Kubernetes cluster and an embedded system](http://www.diva-portal.se/smash/get/diva2:1569829/FULLTEXT01.pdf)\n* [Performance Exploration of Virtualization Systems](https://www.researchgate.net/publication/350061536_Performance_Exploration_of_Virtualization_Systems)\n* [Tricking Hardware into Efficiently Securing Software](https://research.vu.nl/ws/portalfiles/portal/120740500/983666.pdf)\n\n2022:\n* [A general method for evaluating the overhead when consolidating servers: performance degradation in virtual machines and containers](https://link.springer.com/article/10.1007/s11227-022-04318-5)\n* [FedComm: Understanding Communication Protocols for Edge-based Federated Learning](https://arxiv.org/pdf/2208.08764.pdf)\n* [Achieving Isolation in Mixed-Criticality Industrial Edge Systems with Real-Time Containers](https://drops.dagstuhl.de/opus/volltexte/2022/16332/pdf/LIPIcs-ECRTS-2022-15.pdf)\n* [Design and Implementation of Machine Learning-Based Fault Prediction System in Cloud Infrastructure](https://www.mdpi.com/2079-9292/11/22/3765)\n* [The TSN Building Blocks in Linux](https://arxiv.org/pdf/2211.14138.pdf)\n* [uKharon: A Membership Service for Microsecond Applications](https://www.usenix.org/system/files/atc22-guerraoui.pdf)\n* [Evaluating Secure Enclave Firmware Development for Contemporary RISC-V WorkstationsContemporary RISC-V Workstation](https://scholar.afit.edu/cgi/viewcontent.cgi?article=6319&context=etd)\n* [Evaluation of Real-Time Linux on RISC-V processor architecture](https://trepo.tuni.fi/bitstream/handle/10024/138547/J%C3%A4mb%C3%A4ckMarkus.pdf)\n* [Hertzbleed: Turning Power Side-Channel Attacks Into Remote Timing Attacks on x86](https://www.hertzbleed.com/hertzbleed.pdf)\n* [Don\u2019t Mesh Around: Side-Channel Attacks and Mitigations on Mesh Interconnects](https://www.cs.cmu.edu/~rpaccagn/papers/dont-mesh-around-usenix2022.pdf)\n* [Performance Implications for Multi-Core RISC-V Systems with Dedicated Security Hardware](https://papers.academic-conferences.org/index.php/iccws/article/download/56/55/96)\n\n2023:\n* [Fight Hardware with Hardware: System-wide Detection and Mitigation of Side-Channel Attacks using Performance Counters](https://dl.acm.org/doi/10.1145/3519601)\n* [Introducing k4.0s: a Model for Mixed-Criticality Container Orchestration in Industry 4.0 ](https://arxiv.org/pdf/2205.14188.pdf)\n* [A Comprehensive Study on Optimizing Systems with Data Processing Units](https://arxiv.org/pdf/2301.06070.pdf)\n* [Estimating Cloud Application Performance Based on Micro-Benchmark Profiling](https://research.chalmers.se/publication/506903/file/506903_Fulltext.pdf)\n* [PSPRAY: Timing Side-Channel based Linux Kernel Heap Exploitation Technique](https://lifeasageek.github.io/papers/yoochan-pspray.pdf)\n* [Robust and accurate performance anomaly detection and prediction for cloud applications: a novel ensemble learning-based framework](https://journalofcloudcomputing.springeropen.com/articles/10.1186/s13677-022-00383-6#Fn4)\n* [Feasibility Study for a Python-Based Embedded Real-Time Control System](https://www.mdpi.com/2079-9292/12/6/1426)\n* [Adaptation of Parallel SaaS to Heterogeneous Co-Located Cloud Resources](https://www.mdpi.com/2076-3417/13/8/5115#B56-applsci-13-05115)\n* [A Methodology and Framework to Determine the Isolation Capabilities of Virtualisation Technologies](https://dl.acm.org/doi/pdf/10.1145/3578244.3583728)\n* [Data Station: Delegated, Trustworthy, and Auditable Computation to Enable Data-Sharing Consortia with a Data Escrow](https://arxiv.org/pdf/2305.03842.pdf)\n* [An Empirical Study of Resource-Stressing Faults in Edge-Computing Applications](https://dl.acm.org/doi/pdf/10.1145/3578354.3592873)\n* [Finding flaky tests in JavaScript applications using stress and test suite reordering](https://repositories.lib.utexas.edu/handle/2152/120282)\n* [The Power of Telemetry: Uncovering Software-Based Side-Channel Attacks on Apple M1/M2 Systems](https://arxiv.org/pdf/2306.16391.pdf)\n* [A Performance Evaluation of Embedded Multi-core Mixed-criticality System Based on PREEMPT RT Linux](https://www.jstage.jst.go.jp/article/ipsjjip/31/0/31_78/_pdf)\n* [Data Leakage in Isolated Virtualized Enterprise Computing SystemsSystems](https://scholar.smu.edu/cgi/viewcontent.cgi?article=1034&context=engineering_compsci_etds)\n* [Considerations for Benchmarking Network Performance in Containerized Infrastructures](https://datatracker.ietf.org/doc/draft-dcn-bmwg-containerized-infra/)\n* [EnergAt: Fine-Grained Energy Attribution for Multi-Tenancy](https://hotcarbon.org/2023/pdf/a4-he.pdf)\n* [Quantifying the Security Profile of Linux Applications](https://dl.acm.org/doi/10.1145/3609510.3609814)\n* [Gotham Testbed: a Reproducible IoT Testbed for Security Experiments and Dataset Generation](https://arxiv.org/pdf/2207.13981.pdf)\n* [Profiling with Trust: System Monitoring from Trusted Execution Environments](https://assets.researchsquare.com/files/rs-3169665/v1_covered_63751076-8387-429e-8296-3f3cc4c3ed34.pdf?c=1689832627)\n* [Thermal-Aware on-Device Inference Using Single-Layer Parallelization with Heterogeneous Processors](https://www.sciopen.com/article/pdf/10.26599/TST.2021.9010075.pdf)\n* [Towards Fast, Adaptive, and Hardware-Assisted User-Space Scheduling](https://arxiv.org/pdf/2308.02896.pdf)\n* [Heterogeneous Anomaly Detection for Software Systems via Semi-supervised Cross-modal Attention](https://arxiv.org/pdf/2302.06914.pdf)\n* [Green coding : an empirical approach to harness the energy consumption ofsoftware services](https://theses.hal.science/tel-04074973/document)\n* [Enhancing Empirical Software Performance Engineering Research with Kernel-Level Events: A Comprehensive System Tracing Approach](https://papers.ssrn.com/sol3/papers.cfm?abstract_id=4556983)\n* [Cloud White: Detecting and Estimating QoS Degradation of Latency-Critical Workloads in the Public Cloud](https://www.sciencedirect.com/science/article/pii/S0167739X22002734)\n* [Dynamic Resource Management for Cloud-native Bulk Synchronous Parallel Applications](http://www.dre.vanderbilt.edu/~gokhale/WWW/papers/ISORC23_BSP.pdf)\n* [Towards Serverless Optimization with In-place Scaling](https://arxiv.org/pdf/2311.09526.pdf)\n* [A Modular Approach to Design an Experimental Framework for Resource Management Research](https://assets.researchsquare.com/files/rs-3400308/v1_covered_90a108f8-065c-4e38-9c56-990424f66afd.pdf?c=1697164725)\n* [Targeted Deanonymization via the Cache Side Channel: Attacks and Defenses](https://leakuidatorplusteam.github.io/preprint.pdf)\n* [Validating Full-System RISC-V Simulator: A Systematic Approach](https://infoscience.epfl.ch/record/302433)\n* [Lightweight Implementation of Per-packet Service Protection in eBPF/XDP](https://arxiv.org/pdf/2312.07152.pdf)\n* [ROS2 Real-time Performance Optimization and Evaluation](https://cjme.springeropen.com/articles/10.1186/s10033-023-00976-5)\n* [Experimental and numerical analysis of the thermal behaviour of a single-phase immersion-cooled data centre](https://www.sciencedirect.com/science/article/pii/S1359431123012899)\n\n2024:\n* [IdleLeak: Exploiting Idle State Side Effects for Information Leakage](https://www.sicheroder.net/files/idleleak.pdf)\n* [Profiling with trust: system monitoring from trusted execution environments](https://www.researchgate.net/publication/378265673_Profiling_with_trust_system_monitoring_from_trusted_execution_environments)\n* [Exemplary Determination of Cgroups-Based QoS Isolation for a Database Workload](https://dl.acm.org/doi/pdf/10.1145/3629527.3652267)\n* [BARO: Robust Root Cause Analysis for Microservices via Multivariate Bayesian Online Change Point Detection](https://arxiv.org/pdf/2405.09330)\n* [Disambiguating Performance Anomalies from Workload Changes in Cloud-Native Applications](https://dl.acm.org/doi/pdf/10.1145/3629526.3645046)\n* [Take a Step Further: Understanding Page Spray in Linux Kernel Exploitation](https://arxiv.org/html/2406.02624v2)\n* [Impact of power consumption in containerized clouds: A comprehensive analysis of open-source power measurement tools](https://www.sciencedirect.com/science/article/pii/S1389128624002032)\n* [Evaluation of Thermal Stress on Heterogeneous IoT-Based Federated Learning](https://www.mdpi.com/2079-9292/13/16/3140)\n* [Anomaly Detection Within Mission-Critical Call Processing](https://arxiv.org/html/2408.14599v1)\n* [A Preliminary Assessment of the real-time capabilities of Real-Time Linux on Raspberry Pi 5](https://www.ecrts.org/wp-content/uploads/2024/07/ospert24-proceedings.pdf)\n\nI am keen to add to the stress-ng project page any citations to research or\nprojects that use stress-ng.  I also appreciate information concerning kernel\nbugs or performance regressions found with stress-ng.\n",
                "type": "Text_excerpt",
                "original_header": "Citations",
                "parent_header": [
                    "stress-ng (stress next generation)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "The [Ubuntu stress-ng reference guide](https://wiki.ubuntu.com/Kernel/Reference/stress-ng)\ncontains a brief overview and worked examples.\n",
                "type": "Text_excerpt",
                "original_header": "Quick Start Reference Guide",
                "parent_header": [
                    "stress-ng (stress next generation)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "<a href=\"https://repology.org/project/stress-ng/versions\">\n    <img src=\"https://repology.org/badge/vertical-allrepos/stress-ng.svg\" alt=\"Packaging status\" align=\"right\">\n</a> \n  * 350+ stress tests\n  * 80+ CPU specific stress tests that exercise floating point, integer,\n    bit manipulation and control flow\n  * 20+ virtual memory stress tests\n  * 40+ file system stress tests\n  * 30+ memory/CPU cache stress tests\n  * portable: builds on Linux (Debian, Devuan, RHEL, Fedora, Centos, Slackware\n    OpenSUSE, Ubuntu, etc..), Solaris, FreeBSD, NetBSD, OpenBSD, DragonFlyBSD,\n    Minix, Android, MacOS X, Serenity OS, GNU/Hurd, Haiku, Windows Subsystem\n    for Linux, Cygwin and SunOs/Dilos/Solaris.\n    with gcc, musl-gcc, clang, icc, icx, tcc and pcc.\n  * tested on alpha, armel, armhf, arm64, hppa, i386, loong64, m68k, mips32, mips64,\n    power32, ppc64el, risc-v, sh4, s390x, sparc64, x86-64 \n",
                "original_header": "stress-ng (stress next generation)"
            },
            "confidence": 0.9991103772859324,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "https://github.com/ColinIanKing/stress-ng/tarball/version \nhttps://github.com/ColinIanKing/stress-ng/tarball/V0.13.05\n \n",
                "original_header": "Tarballs"
            },
            "confidence": 0.9999315469409893,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Recent versions of stress-ng are available in the Ubuntu stress-ng ppa for various\nUbuntu releases: \nhttps://launchpad.net/~colin-king/+archive/ubuntu/stress-ng\n```\nsudo add-apt-repository ppa:colin-king/stress-ng\nsudo apt update\nsudo apt install stress-ng\n```\n \n",
                "original_header": "Debian packages for Ubuntu"
            },
            "confidence": 0.9999375671493156,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To build, the following libraries will ensure a fully functional stress-ng\nbuild: (note libattr is not required for more recent disto releases). \nDebian, Ubuntu: \n  * gcc g++ libacl1-dev libaio-dev libapparmor-dev libatomic1 libattr1-dev libbsd-dev libcap-dev libeigen3-dev libgbm-dev libcrypt-dev libglvnd-dev libipsec-mb-dev libjpeg-dev libjudy-dev libkeyutils-dev libkmod-dev libmd-dev libmpfr-dev libsctp-dev libxxhash-dev zlib1g-dev \nRHEL, Fedora, Centos (static builds): \n  * gcc g++ eigen3-devel glibc-static Judy-devel keyutils-libs-devel libacl-devel libaio-devel libatomic-static libattr-devel libbsd-devel libcap-devel libgbm-devel libcrypt-devel libglvnd-core-devel libglvnd-devel libjpeg-devel libmd-devel libX11-devel libXau-devel libxcb-devel lksctp-tools-devel mpfr-devel xorg-x11-proto-devel xxhash-devel zlib-devel \nSUSE:\n  * gcc gcc-c++ eigen3-devel keyutils-devel libaio-devel libapparmor-devel libatomic1 libattr-devel libbsd-devel libcap-devel libgbm-devel libglvnd-devel libjpeg-turbo libkmod-devel libmd-devel libseccomp-devel lksctp-tools-devel mpfr-devel xxhash-devel zlib-devel \nAlpine Linux:\n  * build-base eigen-dev jpeg-dev judy-dev keyutils-dev kmod-dev libacl-dev libaio-dev libatomic libattr libbsd-dev libcap-dev libmd-dev libseccomp-dev lksctp-tools-dev mesa-dev mpfr-dev xxhash-dev zlib-dev \nNOTE: the build will try to detect build dependencies and will build an image\nwith functionality disabled if the support libraries are not installed. \nAt build-time stress-ng will detect kernel features that are available on the\ntarget build system and enable stress tests appropriately. Stress-ng has been\nbuild-tested on Ubuntu, Debian, Debian GNU/Hurd, Slackware, RHEL, SLES, Centos,\nkFreeBSD, OpenBSD, NetBSD, FreeBSD, Debian kFreeBSD, DragonFly BSD, OS X, Minix,\nSolaris 11.3, OpenIndiana and Hiaku. Ports to other POSIX/UNIX like operating\nsystems should be relatively easy. \nNOTE: ALWAYS run ```make clean``` after fetching changes from the git repository\nto force the build to regenerate the build configuration file. Parallel builds using\nmake -j are supported. \nTo build on BSD systems, one requires gcc and GNU make:\n```\n        CC=gcc gmake clean\n\tCC=gcc gmake\n``` \nTo build on OS X systems, just use:\n```\n\tmake clean\n\tmake -j\n``` \nTo build on MINIX, gmake and clang are required:\n```\n\tCC=clang gmake clean\n\tCC=clang gmake\n``` \nTo build on SunOS, one requires GCC and GNU make, build using:\n```\n\tCC=gcc gmake clean\n\tCC=gcc gmake\n``` \nTo build on Dilos, one requires GCC and GNU make, build using:\n```\n\tCC=gcc gmake clean\n\tCC=gcc gmake\n``` \nTo build on Haiku R1/beta5:\n```\n\t# GCC\n\tmake clean\n\tmake\n\t# Clang\n\tCC=clang make clean\n\tCC=clang make\n``` \nTo build a static image (example, for Android), use:\n```\n\t# path to Android NDK\n\texport NDK=$HOME/android-ndk-r27-beta2\n\texport PATH=$PATH:$NDK/toolchains/llvm/prebuilt/linux-x86_64/bin\n\texport TARGET=aarch64-linux-android\n\t# Define Android API level\n\texport API=27\n\texport CC=$TARGET$API-clang\n\n\tmake clean\n\tSTATIC=1 make\n``` \nTo build with full warnings enabled:\n```\n\tmake clean\n\tPEDANTIC=1 make\n``` \nTo build with the Tiny C compiler:\n```\n\tmake clean\n\tCC=tcc make\n``` \nTo build  with the PCC portable C compiler use:\n```\n\tmake clean\n\tCC=pcc make\n``` \nTo build with the musl C library:\n```\n\tmake clean\n\tCC=musl-gcc\n``` \nTo build with the Intel C compiler icc use:\n```\n\tmake clean\n\tCC=icc make\n``` \nTo build with the Intel C compiler icx use:\n```\n\tmake clean\n\tCC=icx make\n``` \nTo perform a cross-compilation using gcc, use a static build, specify\nthe toolchain (both CC and CXX). For example, a mips64 cross build:\n```\n\tmake clean\n\tSTATIC=1 CC=mips64-linux-gnuabi64-gcc CXX=mips64-linux-gnuabi64-g++ make -j $(nproc)\n```\nTo perform a cross-compile for qnx, for example, a aarch64 qnx cross build:\n```\n    make clean\n    CC=aarch64-unknown-nto-qnx7.1.0-gcc CXX=aarch64-unknown-nto-qnx7.1.0-g++ STATIC=1 make\n```\n \nTo build with debug (-g) enabled use:\n```\n\tmake clean\n\tDEBUG=1 make\n```\n \n",
                "original_header": "Building stress-ng"
            },
            "confidence": 0.9912811014759251,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "contributors": [
        {
            "result": {
                "value": "Many thanks to the following contributors to stress-ng (in alphabetical order):\n\nAbdul Haleem, Aboorva Devarajan, Adriand Martin, Adrian Ratiu,\nAleksandar N. Kostadinov, Alexander Kanavin, Alexandru Ardelean,\nAlfonso S\u00e1nchez-Beato, Allen H, Amit Singh Tomar, Andrey Gelman,\nAndr\u00e9 Wild, Anisse Astier, Anton Eliasson, Arjan van de Ven,\nBaruch Siach, Bryan W. Lewis, Camille Constans, Carlos Santos,\nChristian Ehrhardt, Christopher Brown, Chunyu Hu, Daniel Andriesse,\nDanilo Krummrich, Davidson Francis, David Turner, Denis Ovsienko,\nDominik B Czarnota, Dorinda Bassey, Eder Zulian, Eric Lin, Erik Stahlman,\nErwan Velu, Fabien Malfoy, Fabrice Fontaine, Fernand Sieber,\nFlorian Weimer, Francis Laniel, Guilherme Janczak, Hui Wang,\nHsieh-Tseng Shen, Iy\u00e1n M\u00e9ndez Veiga, James Hunt, Jan Luebbe, Jianshen Liu,\nJohn Kacur, Jules Maselbas, Julien Olivain, Kenny Gong, Khalid Elmously,\nKhem Raj, Luca Pizzamiglio, Luis Chamberlain, Luis Henriques,\nLukas Durfina, Matthew Tippett, Mauricio Faria de Oliveira, Maxime Chevallier,\nMax Kellermann, Maya Rashish, Mayuresh Chitale, Meysam Azad, Mike Koreneff,\nMunehisa Kamata, Myd Xia, Nick Hanley, Nikolas Kyx, Paul Menzel,\nPiyush Goyal, Ralf Ramsauer, Rosen Penev, Rulin Huang, Sascha Hauer,\nSergey Matyukevich, Siddhesh Poyarekar, Shoily Rahman, Stian Onarheim,\nThadeu Lima de Souza Cascardo, Thia Wyrod, Thinh Tran, Tim Gardner,\nTim Gates, Tim Orling, Tommi Rantala, Witold Baryluk, Yiwei Lin,\nYong-Xuan Wang, Zhiyi Sun.\n",
                "type": "Text_excerpt",
                "original_header": "Contributors",
                "parent_header": [
                    "stress-ng (stress next generation)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "stress-ng (stress next generation)"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/ColinIanKing/stress-ng/wiki",
                "format": "wiki"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2306.16391.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2305.03842.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2207.13981.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/html/2408.14599v1"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/html/2406.02624v2"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2301.06070.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2308.02896.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2302.06914.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2208.08764.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2311.09526.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2405.09330"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2312.07152.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2109.14276.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2205.14188.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2009.08912.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2211.14138.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2105.06619.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ColinIanKing/stress-ng/master/README.Android"
        }
    ]
}