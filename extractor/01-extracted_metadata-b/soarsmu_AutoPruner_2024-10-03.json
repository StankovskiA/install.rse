{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 21:06:36"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/soarsmu/AutoPruner",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "soarsmu",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-08-09T01:29:23Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-02T03:02:37Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "AutoPruner: Transformer-based Call Graph Pruning (ESEC/FSE 2022, Research Track)",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The structure of our source code's repository is as follows:\n- config: contains our experimental configurations;\n- script: contains script for running our experiments;\n- src: contains our source code.\n    - finetune: contains source code for fine-tuning phase\n    - training: contains  source code for training phase\n    - utils: contains source code for utility functions, e.g., logger, visualization, ...\n    - gnn: contains source code for gnn benchmark\n    - Note that, for each sub-folder in this folder, main.py, dataset.py, model.py contains the source code of training/testing, dataset processing and deep learning models, respectively;\n- environment.yml: contains the configuration for AutoPruner's enviroment.  \nThe structure of our data's repository is as follows: \n- dl_dataset: contains our processed dataset for AutoPruner;\n- gnn_dataset: contains our processed dataset for GNN benchmark;\n- gnn_model: contains our trained models for GNN benchmarks;\n- info_data: contains the lists of training and testing programs;\n- model: contains our trained models for AutoPruner;\n- npe_result: contains the results of manual evaluation for Null-pointer analysis;\n- processed_data: contains extracted source code for methods in programs in [cgPruner's dataset](https://zenodo.org/record/5806537)\n- raw_data: contains the static call graphs generated by static analysis tools from [cgPruner](http://web.cs.ucla.edu/~akshayutture/papers/icse22_firstPaper_preprint.pdf)\n \n",
                "original_header": "\ud83c\udfc1 Repository Organization"
            },
            "confidence": 0.9489137438548734,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "In this analysis, we follow the experimental settings of [cgPruner](http://web.cs.ucla.edu/~akshayutture/papers/icse22_firstPaper_preprint.pdf) including their code of Null-pointer Analysis (NPA). Please refer to cgPruner's [replication package](https://zenodo.org/record/6057691#.YoXA8WBByek) for further instructions. You also can find our manual evaluation in npe_result folder in this [link](https://zenodo.org/record/6369874#.YjWzmi8RppR) \n \n",
                "original_header": "Null-pointer Analysis"
            },
            "confidence": 0.9919372079437477,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "AutoPruner",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "soarsmu/AutoPruner",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/soarsmu/AutoPruner/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/soarsmu/AutoPruner/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 20,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "deeplearning, program-analysis, transformer-models",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/soarsmu/AutoPruner/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 57088
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 2083
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq3_structure.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq2_doop.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq1_doop.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/gnn_wala.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/gnn_peta.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq3_semantic.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq2_wala.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq2_peta.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq3_caller.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/gnn_doop.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq3_callee.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq1_wala.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/script/rq1_peta.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "- More than 200GB disk space\n- 2 NVIDIA GPU that CUDA 11.3; supports and have at least 8GB memory.",
                "type": "Text_excerpt",
                "original_header": "Hardware",
                "parent_header": [
                    "\u2699\ufe0fAutoPruner\u2702\ufe0f",
                    "\ud83d\udd27 Installations",
                    "Requirements"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        },
        {
            "result": {
                "value": "- Ubuntu 18.04 or newer\n- Docker/Conda\n ",
                "type": "Text_excerpt",
                "original_header": "Software",
                "parent_header": [
                    "\u2699\ufe0fAutoPruner\u2702\ufe0f",
                    "\ud83d\udd27 Installations",
                    "Requirements"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        },
        {
            "result": {
                "value": "```\nconda env create -n autopruner --file environment.yml\n```\n",
                "type": "Text_excerpt",
                "original_header": "Conda",
                "parent_header": [
                    "\u2699\ufe0fAutoPruner\u2702\ufe0f",
                    "\ud83d\udd27 Installations",
                    "Environment Configuration"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        },
        {
            "result": {
                "value": "For ease of use, we also provide a \ninstallation package via a [docker image](https://hub.docker.com/r/thanhlecong/autopruner). User can setup AutoPruner's docker step-by-step as follows:\n\n- Pull AutoPruner's docker image: \n```\ndocker pull thanhlecong/autopruner:v2\n```\n- Run a docker container:\n```\ndocker run --name autopruner -it --shm-size 16G --gpus all thanhlecong/autopruner:v2\n```\n- Activate conda:\n```\nsource /opt/conda/bin/activate\n```\n- Activate AutoPruner's conda enviroment: \n```\nconda activate autopruner\n```\nNote that, the source code of AutoPruner are stored at /workspace/ in Docker. So, please move to this folder before running experiments. \n\n",
                "type": "Text_excerpt",
                "original_header": "Docker",
                "parent_header": [
                    "\u2699\ufe0fAutoPruner\u2702\ufe0f",
                    "\ud83d\udd27 Installations",
                    "Environment Configuration"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "*by Thanh Le-Cong, Hong Jin Kang, Truong Giang Nguyen, Stefanus Agus Haryono, David Lo, Xuan-Bach D. Le, Quyet Thang Huynh*\n<p align=\"center\">\n    <a href=\"https://dl.acm.org/doi/abs/10.1145/3540250.3549175\"><img src=\"https://img.shields.io/badge/Conference-ESEC/FSE 2023-green?style=for-the-badge\">\n    <a href=\"https://arxiv.org/abs/2209.03230\"><img src=\"https://img.shields.io/badge/arXiv-2209.03230-b31b1b.svg?style=for-the-badge\">\n    <br>\n    <a href=\"https://zenodo.org/records/6369874\"><img src=\"https://img.shields.io/badge/Replication-10.5281%2Fzenodo.6369874-blue?style=for-the-badge\">\n    <a href=\"https://hub.docker.com/r/thanhlecong/autopruner\"><img src=\"https://img.shields.io/badge/docker-thanhlecong%2Fautopruner-%230db7ed.svg?style=for-the-badge&logo=docker&logoColor=white\"></a>\n</p> \n",
                "original_header": "\u2699\ufe0fAutoPruner\u2702\ufe0f"
            },
            "confidence": 0.9999953211433628,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To replicate the ablation study of AutoPruner with strutural features, please use\n```\nbash script/rq3_structure.sh\n```\nTo replicate the ablation study of AutoPruner with semantic features, please use\n```\nbash script/rq3_semantic.sh\n```\nTo replicate the ablation study of AutoPruner with caller function, please use\n```\nbash script/rq3_caller.sh\n```\nTo replicate the ablation study of AutoPruner with callee function, please use\n```\nbash script/rq3_callee.sh\n```\n \n",
                "original_header": "RQ3"
            },
            "confidence": 0.9854276910742108,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "- More than 200GB disk space\n- 2 NVIDIA GPU that CUDA 11.3; supports and have at least 8GB memory.",
                "type": "Text_excerpt",
                "original_header": "Hardware",
                "parent_header": [
                    "\u2699\ufe0fAutoPruner\u2702\ufe0f",
                    "\ud83d\udd27 Installations",
                    "Requirements"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        },
        {
            "result": {
                "value": "- Ubuntu 18.04 or newer\n- Docker/Conda\n ",
                "type": "Text_excerpt",
                "original_header": "Software",
                "parent_header": [
                    "\u2699\ufe0fAutoPruner\u2702\ufe0f",
                    "\ud83d\udd27 Installations",
                    "Requirements"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "To use our tool, please use the following command\n```\npython3 -m src.training.main --config_path [config path]\n                             --mode [mode: test or train] \n                             --feature [type of features: 0: structure, 1: semantic, 2:combine] \n                             --model_path [path to saved model (for saving in train mode and loading in test mode)]\n```",
                "type": "Text_excerpt",
                "original_header": "\ud83d\ude80 Usage",
                "parent_header": [
                    "\u2699\ufe0fAutoPruner\u2702\ufe0f"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you use our tool, please cite our paper as follows:\n\n```\n@inproceedings{le2022autopruner,\n  title={AutoPruner: transformer-based call graph pruning},\n  author={Le-Cong, Thanh and Kang, Hong Jin and Nguyen, Truong Giang and Haryono, Stefanus Agus and Lo, David and Le, Xuan-Bach D and Huynh, Quyet Thang},\n  booktitle={Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},\n  pages={520--532},\n  year={2022}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "\ud83d\udcdc Citation",
                "parent_header": [
                    "\u2699\ufe0fAutoPruner\u2702\ufe0f"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{le2022autopruner,\n    year = {2022},\n    pages = {520--532},\n    booktitle = {Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering},\n    author = {Le-Cong, Thanh and Kang, Hong Jin and Nguyen, Truong Giang and Haryono, Stefanus Agus and Lo, David and Le, Xuan-Bach D and Huynh, Quyet Thang},\n    title = {AutoPruner: transformer-based call graph pruning},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "AutoPruner: transformer-based call graph pruning",
                "author": "Le-Cong, Thanh and Kang, Hong Jin and Nguyen, Truong Giang and Haryono, Stefanus Agus and Lo, David and Le, Xuan-Bach D and Huynh, Quyet Thang"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        }
    ],
    "application_domain": [
        {
            "result": {
                "type": "String",
                "value": "Graphs"
            },
            "confidence": 0.937717347346561,
            "technique": "supervised_classification"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "\u2699\ufe0fAutoPruner\u2702\ufe0f"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2209.03230\"><img src=\"https://img.shields.io/badge/arXiv-2209.03230-b31b1b.svg?style=for-the-badge\">\n    <br>\n    <a href=\"https://zenodo.org/records/6369874\"><img src=\"https://img.shields.io/badge/Replication-10.5281%2Fzenodo.6369874-blue?style=for-the-badge\">\n    <a href=\"https://hub.docker.com/r/thanhlecong/autopruner\"><img src=\"https://img.shields.io/badge/docker-thanhlecong%2Fautopruner-%230db7ed.svg?style=for-the-badge&logo=docker&logoColor=white\"></a>\n</p>\n\nWelcome to the source code repo of **AutoPruner**, a LLM-based call graph pruning tool introduced in our paper \"AutoPruner: Transformer-based Call Graph Pruning\"! \n\n\n## \ud83d\udcc3 Overview\nIf you are interested in our work, please refer to our [overview](https://github.com/soarsmu/AutoPruner/blob/main/overview.md"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/soarsmu/AutoPruner/main/README.md"
        }
    ]
}