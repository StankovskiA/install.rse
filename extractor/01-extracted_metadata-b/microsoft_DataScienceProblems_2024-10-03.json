{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 18:57:04"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/microsoft/DataScienceProblems",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "microsoft",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-09-08T20:21:32Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-19T20:27:23Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "A repository containing the Jupyter notebook code generation benchmark.",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "DataScienceProblems",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "microsoft/DataScienceProblems",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/microsoft/DataScienceProblems/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/microsoft/DataScienceProblems/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 56,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 15,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/microsoft/DataScienceProblems/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 16568
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 168
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/CODE_OF_CONDUCT.md"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/Dockerfile"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "# Contributing\n\nThis project welcomes contributions and suggestions. Most contributions require you to\nagree to a Contributor License Agreement (CLA) declaring that you have the right to,\nand actually do, grant us the rights to use your contribution. For details, visit\nhttps://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need\nto provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the\ninstructions provided by the bot. You will only need to do this once across all repositories using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/CONTRIBUTING.md"
        }
    ],
    "faq": [
        {
            "result": {
                "value": "Evaluate a natural language code generation model on real data science pedagogical notebooks! Data Science Problems (DSP) includes well-posed data science problems in Markdown along with unit tests to verify correctness and a Docker environment for reproducible execution. About 1/3 of notebooks in this benchmark also include data dependencies, so this benchmark not only can test a model's ability to chain together complex tasks, but also evaluate the solutions on real data! See our paper [Training and Evaluating a Jupyter Notebook Data Science Assistant](https://arxiv.org/abs/2201.12901) for more details about state of the art results and other properties of the dataset.\n",
                "type": "Text_excerpt",
                "original_header": "Data Science Problems"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        },
        {
            "result": {
                "value": "Extract the `juice-github-repos.tar.gz` file from the `DataScienceProblems` repository.\n\n```\n$ tar -xvzf juice-github-repos.tar.gz\n```\n",
                "type": "Text_excerpt",
                "original_header": "Reading the problems",
                "parent_header": [
                    "Data Science Problems",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        },
        {
            "result": {
                "value": "Here is an example of a notebook context, prompt cell (1 and the markdown), solution cell (2), and unit tests cell (3).\n\n![example problem](example.png)\n\nThe DSP schema corresponding to this example includes the `prompt` which is the question to be asked to the student, `solution` which is the answer to the question and `test` which is the test case to be run on the student's code.\n\n```python\n{\n    'notebook_path': '/path/to/the/notebook.ipynb',\n    'notebook_problem_index': 0,\n    'prompt': '%matplotlib inline\\n'\n            'import matplotlib.pyplot as plt\\n'\n            'import numpy as np\\n'\n            'import scipy.optimize as opt\\n'\n            '## Hat potential\\n'\n            'The following potential is often used in Physics and other fields '\n            'to describe symmetry breaking and is often known as the \"hat '\n            'potential\":\\n'\n            '\\n'\n            '$$ V(x) = -a x^2 + b x^4 $$\\n'\n            '\\n'\n            'Write a function `hat(x,a,b)` that returns the value of this '\n            'function:\\n',\n    'solution': 'def hat(x,a=5.0,b=1.0):\\n    return -a* x*x + b*x**4',\n    'task_id': 'DSP/414',\n    'test': 'assert hat(0.0, 1.0, 1.0)==0.0\\n'\n            'assert hat(0.0, 1.0, 1.0)==0.0\\n'\n            'assert hat(1.0, 10.0, 1.0)==-9.0'\n}\n```\n\nWe provide a `read_problems` function that can be used to read the problems from the jupyter notebooks. \n\nBelow is an example of how to use the `read_problems` function and use your generated code samples to save the samples to a file.\n\n\n```python\nfrom data_science_problems.read import read_problems\nfrom data_science_problems.utils import write_jsonl\n\nproblems = read_problems()\n\nnum_samples = 1\nsamples = [\n    dict(task_id=task_id, completion=generate_code(problems[task_id][\"prompt\"]))\n    for task_id in problems\n    for _ in range(num_samples)\n]\nwrite_jsonl(\"samples.jsonl\", samples)\n```\n\n",
                "type": "Text_excerpt",
                "original_header": "Data Schema",
                "parent_header": [
                    "Data Science Problems",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        },
        {
            "result": {
                "value": "Once you have saved the generated samples in the `samples.jsonl` file, you need to build the provided docker container, which would help you safely run the generated samples inside the container.\n\nUse the following command to build the docker container.\n\n```\n$ docker build --pull --rm -f \"Dockerfile\" -t datascienceproblems:latest \".\"\n```\n\nOnce the Docker container is built, you can execute the generated samples inside the container. You'll need to map the `/app/juice-github-repos` and `/samples/samples.jsonl` directory to the host directory where the notebooks are stored.\n\nUse the following command to execute the samples inside the container.  \n\n```\n$ docker run -it --rm -v $PWD/juice-github-repos:/app/juice-github-repos -v $PWD/samples.jsonl:/samples/samples.jsonl datascienceproblems /samples/samples.jsonl\n```\n\n\nThe `docker run` will perform the following things:\n\n- It will read the samples from the `samples.jsonl` file.\n- It will create new notebooks with the generated code samples. The list of new notebooks is saved in the `generates-notebooks.txt` file.\n- It will execute these new notebooks.\n- It will compute `pass@k` for generated samples. \n\n> **WARNING: Running the `docker run` command with `num_samples = 1` will create with ~1000 new notebooks and save them on your disk. This may take a while.**\n\n```\n$ docker run -it --rm -v $PWD/juice-github-repos:/app/juice-github-repos -v $PWD/samples.jsonl:/samples/samples.jsonl datascienceproblems /samples/samples.jsonl\n2021-11-02 09:11:11,847 INFO services.py:1164 -- View the Ray dashboard at http://127.0.0.1:8265\nReading the generated samples.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 305/305 [00:03<00:00, 97.34it/s]\nSaving to new notebooks with generated samples.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 305/305 [00:36<00:00,  8.47it/s]\nExecute the new notebooks with generated samples.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2192/2192 [05:17<00:40,  9.49it/s]\nComplute pass@k for the executed notebooks.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2192/2192 [00:28<00:00, 76.73it/s]\n{'pass@1': ..., 'pass@10': ...}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Executing the problems and unit tests",
                "parent_header": [
                    "Data Science Problems",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        },
        {
            "result": {
                "value": "> This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow Microsoft\u2019s Trademark & Brand Guidelines. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party\u2019s policies.\n",
                "type": "Text_excerpt",
                "original_header": "Trademarks",
                "parent_header": [
                    "Data Science Problems",
                    "Usage",
                    "Executing the problems and unit tests"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        },
        {
            "result": {
                "value": "The following table is necessary for this dataset to be indexed by search\nengines such as <a href=\"https://g.co/datasetsearch\">Google Dataset Search</a>.\n<div itemscope itemtype=\"http://schema.org/Dataset\">\n<table>\n  <tr>\n    <th>property</th>\n    <th>value</th>\n  </tr>\n  <tr>\n    <td>name</td>\n    <td><code itemprop=\"name\">Data Science Problems</code></td>\n  </tr>\n  <tr>\n    <td>url</td>\n    <td><code itemprop=\"url\">https://github.com/microsoft/DataScienceProblems</code></td>\n  </tr>\n  <tr>\n    <td>sameAs</td>\n    <td><code itemprop=\"sameAs\">https://github.com/microsoft/DataScienceProblems</code></td>\n  </tr>\n  <tr>\n    <td>description</td>\n    <td><code itemprop=\"description\">\n        Evaluate a natural language code generation model on real data science pedagogical notebooks! \n        Data Science Problems (DSP) includes well-posed data science problems in Markdown along with \n        unit tests to verify correctness and a Docker environment for reproducible execution. About \n        1/3 of notebooks in this benchmark also include data dependencies, so this benchmark not only \n        can test a model's ability to chain together complex tasks, but also evaluate the solutions \n        on real data! See our paper Training and Evaluating a Jupyter Notebook Data Science Assistant \n        (https://arxiv.org/abs/2201.12901) for more details about state of the art results and other \n        properties of the dataset.\n\t</code></td>\n  </tr>\n  <tr>\n    <td>citation</td>\n    <td><code itemprop=\"citation\">https://arxiv.org/abs/2201.12901</code></td>\n  </tr>\n  <tr>\n    <td>license</td>\n    <td><code itemprop=\"license\">https://github.com/microsoft/DataScienceProblems/blob/main/LICENSE.txt</code></td>\n  </tr>\n</table>\n</div>\n\n",
                "type": "Text_excerpt",
                "original_header": "Dataset Metadata",
                "parent_header": [
                    "Data Science Problems"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "This project requires Python 3.6+ and Docker to run. Assuming you have these, to get started first download and install the Python package:\n\n```\n$ git clone git@github.com:microsoft/DataScienceProblems.git\n$ cd DataScienceProblems/src\n$ pip install -e .\n```\n",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "Data Science Problems"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Here is an example of a notebook context, prompt cell (1 and the markdown), solution cell (2), and unit tests cell (3).\n\n![example problem](example.png)\n\nThe DSP schema corresponding to this example includes the `prompt` which is the question to be asked to the student, `solution` which is the answer to the question and `test` which is the test case to be run on the student's code.\n\n```python\n{\n    'notebook_path': '/path/to/the/notebook.ipynb',\n    'notebook_problem_index': 0,\n    'prompt': '%matplotlib inline\\n'\n            'import matplotlib.pyplot as plt\\n'\n            'import numpy as np\\n'\n            'import scipy.optimize as opt\\n'\n            '## Hat potential\\n'\n            'The following potential is often used in Physics and other fields '\n            'to describe symmetry breaking and is often known as the \"hat '\n            'potential\":\\n'\n            '\\n'\n            '$$ V(x) = -a x^2 + b x^4 $$\\n'\n            '\\n'\n            'Write a function `hat(x,a,b)` that returns the value of this '\n            'function:\\n',\n    'solution': 'def hat(x,a=5.0,b=1.0):\\n    return -a* x*x + b*x**4',\n    'task_id': 'DSP/414',\n    'test': 'assert hat(0.0, 1.0, 1.0)==0.0\\n'\n            'assert hat(0.0, 1.0, 1.0)==0.0\\n'\n            'assert hat(1.0, 10.0, 1.0)==-9.0'\n}\n```\n\nWe provide a `read_problems` function that can be used to read the problems from the jupyter notebooks. \n\nBelow is an example of how to use the `read_problems` function and use your generated code samples to save the samples to a file.\n\n\n```python\nfrom data_science_problems.read import read_problems\nfrom data_science_problems.utils import write_jsonl\n\nproblems = read_problems()\n\nnum_samples = 1\nsamples = [\n    dict(task_id=task_id, completion=generate_code(problems[task_id][\"prompt\"]))\n    for task_id in problems\n    for _ in range(num_samples)\n]\nwrite_jsonl(\"samples.jsonl\", samples)\n```\n\n",
                "type": "Text_excerpt",
                "original_header": "Data Schema",
                "parent_header": [
                    "Data Science Problems",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        },
        {
            "result": {
                "value": "> This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow Microsoft\u2019s Trademark & Brand Guidelines. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party\u2019s policies.\n",
                "type": "Text_excerpt",
                "original_header": "Trademarks",
                "parent_header": [
                    "Data Science Problems",
                    "Usage",
                    "Executing the problems and unit tests"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "Once you have saved the generated samples in the `samples.jsonl` file, you need to build the provided docker container, which would help you safely run the generated samples inside the container.\n\nUse the following command to build the docker container.\n\n```\n$ docker build --pull --rm -f \"Dockerfile\" -t datascienceproblems:latest \".\"\n```\n\nOnce the Docker container is built, you can execute the generated samples inside the container. You'll need to map the `/app/juice-github-repos` and `/samples/samples.jsonl` directory to the host directory where the notebooks are stored.\n\nUse the following command to execute the samples inside the container.  \n\n```\n$ docker run -it --rm -v $PWD/juice-github-repos:/app/juice-github-repos -v $PWD/samples.jsonl:/samples/samples.jsonl datascienceproblems /samples/samples.jsonl\n```\n\n\nThe `docker run` will perform the following things:\n\n- It will read the samples from the `samples.jsonl` file.\n- It will create new notebooks with the generated code samples. The list of new notebooks is saved in the `generates-notebooks.txt` file.\n- It will execute these new notebooks.\n- It will compute `pass@k` for generated samples. \n\n> **WARNING: Running the `docker run` command with `num_samples = 1` will create with ~1000 new notebooks and save them on your disk. This may take a while.**\n\n```\n$ docker run -it --rm -v $PWD/juice-github-repos:/app/juice-github-repos -v $PWD/samples.jsonl:/samples/samples.jsonl datascienceproblems /samples/samples.jsonl\n2021-11-02 09:11:11,847 INFO services.py:1164 -- View the Ray dashboard at http://127.0.0.1:8265\nReading the generated samples.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 305/305 [00:03<00:00, 97.34it/s]\nSaving to new notebooks with generated samples.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 305/305 [00:36<00:00,  8.47it/s]\nExecute the new notebooks with generated samples.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2192/2192 [05:17<00:40,  9.49it/s]\nComplute pass@k for the executed notebooks.\n100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2192/2192 [00:28<00:00, 76.73it/s]\n{'pass@1': ..., 'pass@10': ...}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Executing the problems and unit tests",
                "parent_header": [
                    "Data Science Problems",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        },
        {
            "result": {
                "value": "> This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow Microsoft\u2019s Trademark & Brand Guidelines. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party\u2019s policies.\n",
                "type": "Text_excerpt",
                "original_header": "Trademarks",
                "parent_header": [
                    "Data Science Problems",
                    "Usage",
                    "Executing the problems and unit tests"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Data Science Problems"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/example.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2201.12901</code></td>\n  </tr>\n  <tr>\n    <td>license</td>\n    <td><code itemprop=\"license\">https://github.com/microsoft/DataScienceProblems/blob/main/LICENSE.txt</code></td>\n  </tr>\n</table>\n</div>\n"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2201.12901"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/DataScienceProblems/main/README.md"
        }
    ]
}