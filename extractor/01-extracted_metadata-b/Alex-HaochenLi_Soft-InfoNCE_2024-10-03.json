{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:08:49"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/Alex-HaochenLi/Soft-InfoNCE",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "Alex-HaochenLi",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-10-09T07:09:09Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-30T02:13:24Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "[EMNLP'23] Code for 'Rethinking Negative Pairs in Code Search'",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This repo contains code for [Rethinking Negative Pairs in Code Search](https://arxiv.org/abs/2310.08069), accepted to EMNLP 2023. \nIn this codebase we provide instructions for reproducing our results from the paper. \nWe hope that this work can be useful for future research on contrastive learning of code search.\n \n",
                "original_header": "Rethinking Negative Pairs in Code Search"
            },
            "confidence": 0.9914976828034288,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": " \nWe follow the preprocessing rule described in [GraphCodeBERT](https://github.com/microsoft/CodeBERT/tree/master/GraphCodeBERT/codesearch).\nSince our codes are developed based on that repo, you could follow the instructions described in \n[./GraphCodeBERT/README.md](#./GraphCodeBERT/README.md). \n",
                "original_header": "Data"
            },
            "confidence": 0.9197870369194833,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "Soft-InfoNCE",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "Alex-HaochenLi/Soft-InfoNCE",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/Alex-HaochenLi/Soft-InfoNCE/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/Alex-HaochenLi/Soft-InfoNCE/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/Alex-HaochenLi/Soft-InfoNCE/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 169441
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 430
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/GraphCodeBERT/parser/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "In the paper we mention three approaches to estimate the weight term, BM25, SimCSE, and trained models.\nFor BM25, it is a built-in function. However, for learning-based SimCSE and trained models, you need to train them first.\n",
                "type": "Text_excerpt",
                "original_header": "Preparation"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        },
        {
            "result": {
                "value": "To train the unsupervised SimCSE, run:\n```angular2html\npython nl_simcse.py \\\n--output_dir ./saved_models/SimCSE \\\n--root_path ./data/ \\\n--train_batch_size 256 \\\n--num_train_epochs 10  \\\n```\n",
                "type": "Text_excerpt",
                "original_header": "SimCSE",
                "parent_header": [
                    "Preparation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        },
        {
            "result": {
                "value": "To train the CodeBERT with InfoNCE loss, run:\n```angular2html\nlang=python\nsave_dir=trained-codebert-${lang}\npython run_siamese_test.py \\\n--model_type roberta \\\n--do_train \\\n--do_eval \\\n--evaluate_during_training \\\n--eval_all_checkpoints \\\n--data_dir ./data/ \\\n--train_data_file train.jsonl \\\n--code_type code \\\n--max_seq_length 200 \\\n--per_gpu_train_batch_size 32 \\\n--per_gpu_retrieval_batch_size 100 \\\n--learning_rate 1e-6 \\\n--num_train_epochs 10 \\\n--gradient_accumulation_steps 1 \\\n--output_dir ./model/${save_dir} \\\n--encoder_name_or_path microsoft/codebert-base \\\n--lang ${lang} \\\n--infonce\n```\n",
                "type": "Text_excerpt",
                "original_header": "CodeBERT",
                "parent_header": [
                    "Preparation",
                    "Trained Models"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        },
        {
            "result": {
                "value": "To train the GraphCodeBERT with InfoNCE loss, run:\n```angular2html\nlang=python\nsave_dir=trained-graphcodebert-${lang}\npython run.py \\\n--output_dir=./saved_models/${save_dir} \\\n--config_name=microsoft/graphcodebert-base \\\n--model_name_or_path=microsoft/graphcodebert-base \\\n--tokenizer_name=microsoft/graphcodebert-base \\\n--lang=${lang} \\\n--do_train \\\n--do_eval \\\n--train_data_file=./data/${lang}/train.jsonl \\\n--eval_data_file=./data/${lang}/valid.jsonl \\\n--test_data_file=./data/${lang}/test.jsonl \\\n--codebase_file=./data/${lang}/codebase.jsonl \\\n--num_train_epochs 30 \\\n--code_length 256 \\\n--data_flow_length 64 \\\n--nl_length 128 \\\n--train_batch_size 32 \\\n--eval_batch_size 64 \\\n--learning_rate 2e-5 \\\n--seed 123456 \\\n--infonce\n```\n",
                "type": "Text_excerpt",
                "original_header": "GraphCodeBERT",
                "parent_header": [
                    "Preparation",
                    "Trained Models"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        },
        {
            "result": {
                "value": "To train the UniXCoder with InfoNCE loss, run:\n```angular2html\nlang=python\nsave_dir=trained-unixcoder-${lang}\npython run.py \\\n--output_dir ./saved_models/${save_dir} \\\n--model_name_or_path microsoft/unixcoder-base \\\n--do_train \\\n--do_eval \\\n--train_data_file ./data/${lang}/train.jsonl \\\n--eval_data_file ./data/${lang}/test.jsonl \\\n--codebase_file ./data/${lang}/codebase.jsonl \\\n--num_train_epochs 10 \\\n--code_length 256 \\\n--nl_length 128 \\\n--train_batch_size 64 \\\n--eval_batch_size 64 \\\n--learning_rate 2e-5 \\\n--seed 123456 \\\n--infonce\n```\nNote that for the simplicity of reproduction, we will directly upload the parameters of the above-mentioned models directly\nonce the paper is accepted.\n",
                "type": "Text_excerpt",
                "original_header": "UniXCoder",
                "parent_header": [
                    "Preparation",
                    "Trained Models"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "```\nconda create -n softinfonce python=3.6 -y\nconda activate softinfonce\nconda install pytorch-gpu=1.7.1 -y\npip install transformers==4.18.0 scikit-learn nltk==3.6.1 tensorboardX tqdm more_itertools pytrec_eval elasticsearch tree_sitter\n```\n \n",
                "original_header": "Environment"
            },
            "confidence": 1.0,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        }
    ],
    "support": [
        {
            "result": {
                "value": "You can also reproduce the ablation studies using this repo by using different commands.\nFor other loss functions:\n```angular2html\n# BCE loss\n--bce  \n# Weighted InfoNCE loss\n--weightedinfonce\n# KL divergence regularization\n--klregularization\n\n```\nNote that you shold remove ``--softinfonce`` from the command line.\n\nFor false negative cancellation methods:\n```angular2html\n# Activate false negative cancellation methods\n--falsecancel\n# remove top-k samples during training\n--topk\n# remove samples that similarity is greater than the threshold\n--ratio\n```\nNote that you should use ``--infonce`` at the same time.\n",
                "type": "Text_excerpt",
                "original_header": "Ablation Study"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you found this repository useful, please consider citing:\n```\n@article{li2023rethinking,\n  title={Rethinking Negative Pairs in Code Search},\n  author={Li, Haochen and Zhou, Xin and Tuan, Luu Anh and Miao, Chunyan},\n  journal={arXiv preprint arXiv:2310.08069},\n  year={2023}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citation"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        },
        {
            "result": {
                "value": "@article{li2023rethinking,\n    year = {2023},\n    journal = {arXiv preprint arXiv:2310.08069},\n    author = {Li, Haochen and Zhou, Xin and Tuan, Luu Anh and Miao, Chunyan},\n    title = {Rethinking Negative Pairs in Code Search},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Rethinking Negative Pairs in Code Search",
                "author": "Li, Haochen and Zhou, Xin and Tuan, Luu Anh and Miao, Chunyan"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        }
    ],
    "acknowledgement": [
        {
            "result": {
                "value": "The implementation of this repo relies on resources from [CoCLR](https://github.com/Jun-jie-Huang/CoCLR), [CodeBERT](https://github.com/microsoft/CodeBERT).\n The code is implemented using PyTorch, We thank the original authors for their open-sourcing.",
                "type": "Text_excerpt",
                "original_header": "Acknowledgement"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": ""
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/Figure/Soft-InfoNCE.jpg"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2310.08069"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Alex-HaochenLi/Soft-InfoNCE/master/README.md"
        }
    ]
}