{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:00:05"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/dlshriver/dnnv",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "dlshriver",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-12-12T18:27:30Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-01-25T15:46:02Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2020 David Shriver\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "A Framework for Deep Neural Network Verification",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "\r\nA framework for verification and analysis of deep neural networks. You can read an overview of DNNV in our CAV 2021 paper [*DNNV: A Framework for Deep Neural Network Verification*](https://arxiv.org/abs/2105.12841), or watch our presentation on [YouTube](https://youtu.be/GhXlONbvx1Y).\r\n\r \n",
                "original_header": "Deep Neural Network Verification"
            },
            "confidence": 0.9891443314920985,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "dnnv",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "dlshriver/dnnv",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/dlshriver/dnnv/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/dlshriver/dnnv/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 56,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "deep-neural-networks, dnnv, framework, machine-learning, neural-networks, verification",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 18,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/dlshriver/DNNV/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 1394545
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 1897
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 1326
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/73433953",
                "tag": "v0.6.0",
                "name": "v0.6.0",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "This release brings several new features, some bug fixes, and performance improvements. It also includes commits from 2 new contributors.\r\n\r\nFeatures:\r\n- support for the ONNX operators Slice (#90) and Split (#81)\r\n- support for more functions in property specifications (`len`, `min`, `max`, `sum`, `numpy.min`, `numpy.max`, `numpy.sum`, `numpy.mean`, `numpy.shape`) (#85)\r\n- add support for optional simplifiers (#87)\r\n  - add ReluifyMaxPool to transform MaxPool operations into a sequence of Conv and Relu operations\r\n  - optional verifiers can currently be specified using an environment variable, `DNNV_OPTIONAL_SIMPLIFIERS`, set to a colon separated list of optional simplifications to apply, e.g., `DNNV_OPTIONAL_SIMPLIFIERS=ReluifyMaxPool`\r\n- add support for other optimizer backends to MIPVerify, which can be specified with `--mipverify.optimizer=SOLVER` (#88)\r\n\r\nPerformance improvements:\r\n- cache hashes of complex expressions (#78)\r\n- testing performance improvements: better caching, split into separate jobs for unit and system for faster failures (#89)\r\n- optimizations for expression shape and type inference and expression concretization (#96)\r\n\r\nBug fixes:\r\n- fix non-monotonic bounds updates (#79)\r\n- fix subprocess command for finding library dependencies (#82)\r\n- use a more robust url for downloading zlib releases (#82)\r\n- fixed use of network composition in property specifications (#83)\r\n- fixes for Dropout operator (#90)\r\n- add a check for network-free properties (#95)\r\n\r\nContributors in this release:\r\n- David Shriver (dlshriver)\r\n- Meriel Stein (MissMeriel)\r\n- Felipe Toledo (Felipetoledo4815)\r\n- Samuel Teuber (samysweb)",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.6.0",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.6.0",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.6.0",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/73433953",
                "release_id": 73433953,
                "date_created": "2022-08-02T12:37:34Z",
                "date_published": "2022-08-02T12:48:01Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/58343637",
                "tag": "v0.5.1",
                "name": "v0.5.1",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "Some small optimizations and bug fixes. We now report an error for unbounded inputs addressing #34. We also fix an ExtSlice regression in the DNNP parser and modify the verifier installation scripts to be more robust for some systems.",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.5.1",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.5.1",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.5.1",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/58343637",
                "release_id": 58343637,
                "date_created": "2022-01-31T14:55:47Z",
                "date_published": "2022-01-31T15:02:20Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/58145847",
                "tag": "v0.5.0",
                "name": "v0.5.0",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "Changes:\r\n\r\n* Updated verifiers and use the latest version of Gurobi (now with Docker support!)\r\n* A significantly improved test suite\r\n* Support for verifier installation after installing DNNV with pip\r\n* DNNP finally provides access to the path of the specification being verified by using the path variable\r\n* Replace simpleparse dependency with dependency on lark and refactor property parsers\r\n* Updated and improved documentation (https://docs.dnnv.org)\r\n* Added an expression visitor for inferring types and shapes of DNNP expressions\r\n* Fixed a bug where logical negations of vector comparisons were not expanded into disjunctions of comparisons\r\n\r\nNew workflows:\r\nFor users that do not need to modify the DNNV source code, the new preferred workflow is to create and/or activate a python (python 3.7 and 3.8 are supported) virtual environment (e.g., `python -m venv .venv` and `source .venv/bin/activate`) and install DNNV with `pip install dnnv` (to install pre-releases use the `--pre` option for pip: `pip install --pre dnnv`). After that, verifiers can be managed using the included `dnnv_manage` command. For example, the nnenum verifier can be installed with `dnnv_manage install nnenum`.\r\n\r\nFor those who do need access to the DNNV source, the workflow has been simplified and no longer requires the extra environment management scripts. Simply download the source (and checkout the develop branch), set up your python virtual environment, and then run `pip install .`. Verifiers can then be installed using `dnnv_manage`.",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.5.0",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.5.0",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.5.0",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/58145847",
                "release_id": 58145847,
                "date_created": "2022-01-27T22:30:51Z",
                "date_published": "2022-01-27T23:58:15Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/55122820",
                "tag": "v0.5.0a2",
                "name": "v0.5.0a2",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "Changes:\r\n* Updated verifiers and use the latest version of Gurobi (now with Docker support!)\r\n* A significantly improved test suite\r\n* Support for verifier installation after installing DNNV with pip\r\n* DNNP finally provides access to the path of the specification being verified by using the __path__ variable\r\n* Replace simpleparse dependency with dependency on lark and refactor property parsers\r\n\r\nNew workflows:\r\nFor users that do not need to modify the DNNV source code, the new preferred workflow is to create and/or activate a python (python 3.7 and 3.8 are supported) virtual environment (e.g., `python -m venv .venv` and `source .venv/bin/activate`) and install DNNV with `pip install dnnv` (to install pre-releases use the `--pre` option for pip: `pip install --pre dnnv`). After that, verifiers can be managed using the included `dnnv_manage` command. For example, the nnenum verifier can be installed with `dnnv_manage install nnenum`.\r\n\r\nFor those who do need access to the DNNV source, the workflow has been simplified and no longer requires the extra environment management scripts. Simply download the source (and checkout the develop branch), set up your python virtual environment, and then run `pip install .`. Verifiers can then be installed using `dnnv_manage`.",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.5.0a2",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.5.0a2",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.5.0a2",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/55122820",
                "release_id": 55122820,
                "date_created": "2021-12-11T20:04:56Z",
                "date_published": "2021-12-12T04:34:56Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/44123749",
                "tag": "v0.4.8",
                "name": "v0.4.8",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "- Adds `ite` support to the vnnlib parser\r\n- Adds `NotEqual` support to the Canonical property transformer\r\n- Fix a bug that causes errors when reducing properties with input constraints over slices\r\n\r\n\r\n*note:* bumped 2 versions due to incorrect pypi package upload",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.4.8",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.4.8",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.4.8",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/44123749",
                "release_id": 44123749,
                "date_created": "2021-06-04T17:48:07Z",
                "date_published": "2021-06-04T17:56:21Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/43927369",
                "tag": "v0.4.6",
                "name": "v0.4.6",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "- extend vnnlib to support and/or\r\n- fix bug in vnnlib output constraint generator\r\n",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.4.6",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.4.6",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.4.6",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/43927369",
                "release_id": 43927369,
                "date_created": "2021-06-01T17:46:13Z",
                "date_published": "2021-06-01T17:49:34Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/43474649",
                "tag": "v0.4.5",
                "name": "v0.4.5",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "- vnnlib improvements and extensions\r\n- bundle Transpose operations into succeeding Gemm operation\r\n- reduce memory requirements by removing simple bounds from constraints matrix",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.4.5",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.4.5",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.4.5",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/43474649",
                "release_id": 43474649,
                "date_created": "2021-05-24T15:19:30Z",
                "date_published": "2021-05-24T16:19:46Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/41607393",
                "tag": "v0.4.4",
                "name": "v0.4.4",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.4.4",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.4.4",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.4.4",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/41607393",
                "release_id": 41607393,
                "date_created": "2021-04-07T04:42:02Z",
                "date_published": "2021-04-18T15:16:54Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/38002518",
                "tag": "0.4.0",
                "name": "v0.4.0",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "Update command line interface\r\nRefactor internals\r\nAdd new verifiers\r\nEnable property reductions with h-polytope input constraints for some verifiers\r\nAdd more ONNX operations",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/0.4.0",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/0.4.0",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/0.4.0",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/38002518",
                "release_id": 38002518,
                "date_created": "2021-02-13T00:16:05Z",
                "date_published": "2021-02-13T00:21:24Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/29461169",
                "tag": "v0.3.0",
                "name": "v0.3.0",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "Major changes:\r\n- add a parser for vnnlib property format\r\n- updates property extractor to support more properties for verification\r\n- support Elu activation\r\n- bug fix to support flat input tensors\r\n\r\nMinor changes:\r\n- update verifier installation scripts\r\n- bug fix for property parsing in python3.8\r\n- skip tests for verifier if not installed\r\n",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.3.0",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.3.0",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.3.0",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/29461169",
                "release_id": 29461169,
                "date_created": "2020-08-07T18:42:14Z",
                "date_published": "2020-08-07T18:47:32Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/27391162",
                "tag": "v0.2.2",
                "name": "v0.2.2",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "description": "Some general improvements and bug fixes.",
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.2.2",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.2.2",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.2.2",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/27391162",
                "release_id": 27391162,
                "date_created": "2020-06-09T23:26:47Z",
                "date_published": "2020-06-09T23:28:51Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/24139565",
                "tag": "v0.2.1",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.2.1",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.2.1",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.2.1",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/24139565",
                "release_id": 24139565,
                "date_created": "2020-03-02T17:13:26Z",
                "date_published": "2020-03-02T17:15:39Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/dlshriver/dnnv/releases/23342550",
                "tag": "v0.2.0",
                "author": {
                    "name": "dlshriver",
                    "type": "User"
                },
                "tarball_url": "https://api.github.com/repos/dlshriver/dnnv/tarball/v0.2.0",
                "zipball_url": "https://api.github.com/repos/dlshriver/dnnv/zipball/v0.2.0",
                "html_url": "https://github.com/dlshriver/dnnv/releases/tag/v0.2.0",
                "url": "https://api.github.com/repos/dlshriver/dnnv/releases/23342550",
                "release_id": 23342550,
                "date_created": "2020-02-03T14:06:40Z",
                "date_published": "2020-02-03T15:16:09Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[davidshriver@outlook.com](mailto:davidshriver@outlook.com).\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior,  harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/CODE_OF_CONDUCT.md"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/dlshriver/DNNV/main/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/Dockerfile"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n- family-names: \"Shriver\"\n  given-names: \"David\"\n  orcid: \"https://orcid.org/0000-0003-0208-6517\"\n  website: \"https://davidshriver.me\"\ntitle: \"DNNV\"\nversion: 0.6.0\ndoi: 10.5281/zenodo.4699410\ndate-released: 2022-08-02\nurl: \"https://github.com/dlshriver/dnnv\"\npreferred-citation:\n  type: conference-paper\n  authors:\n  - family-names: \"Shriver\"\n    given-names: \"David\"\n    orcid: \"https://orcid.org/0000-0003-0208-6517\"\n    website: \"https://davidshriver.me\"\n  - family-names: \"Elbaum\"\n    given-names: \"Sebastian\"\n    orcid: \"https://orcid.org/0000-0001-9592-1352\"\n  - family-names: \"Dwyer\"\n    given-names: \"Matthew\"\n    orcid: \"https://orcid.org/0000-0002-1937-1544\"\n  doi: \"10.1007/978-3-030-81685-8_6\"\n  title: \"DNNV: A Framework for Deep Neural Network Verification\"\n  conference:\n    name: \"Computer Aided Verification\"\n  collection-title: \"Computer Aided Verification - 33rd International Conference, CAV 2021, Virtual Event, July 20-23, 2021, Proceedings, Part I\"\n  editors:\n  - family-names: \"Silva\"\n    given-names: \"Alexandra\"\n  - family-names: \"Leino\"\n    given-names: \"K. Rustan M.\"\n  publisher: \"Springer International Publishing\"\n  volume: 12759\n  start: 137 # First page number\n  end: 150 # Last page number\n  month: 7\n  year: 2021\n",
                "type": "File_dump",
                "format": "cff"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/CITATION.cff"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "# Contributing to DNNV\n\nThank you for choosing to invest your time in contributing to DNNV!\nBefore participating, please read our [Code of Conduct](./CODE_OF_CONDUCT.md) \nto help keep our community approachable and respectable.\n\n\n## How to Ask a Question\n\nIf you have a question, please don't hesitate to ask!\nWe only ask that you not file an issue to ask a question. \nWe have an official [discussion board](https://github.com/dlshriver/dnnv/discussions) on GitHub where the community and DNNV developers can chime in with helpful advice on any questions.\n\n\n## How to Contribute\n\n### Report a Bug\n\nEnsure the bug was not already reported by searching on GitHub under [Issues](https://github.com/dlshriver/dnnv/issues).\nIf you're unable to find an open issue addressing the problem, [open a new one](https://github.com/dlshriver/dnnv/issues/new). \nBe sure to include a **title** and **clear description** with as much relevant information as possible, as well as a **code sample** or an **executable test case** demonstrating the issue.\n\n### Submit a Patch\n\nOpen a new GitHub pull request with the patch.\nEnsure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n<!-- \nTODO: Describe coding conventions, etc.\n-->\nEvery patch should also include relevant tests to show that the patch behaves as intended.\nBefore opening a pull request with your path, please run the test suite on your local machine to ensure that all tests pass.\nTo run the test suite, first build the test artifacts (only needs to be built once), and then run coveragepy, as follows:\n\n```bash\n$ python tests/system_tests/artifacts/build_artifacts.py # only needs to be run the first time you run the test suite\n$ coverage run\n```\n\n> Cosmetic changes that do not add anything substantial to the stability, functionality, or testability of DNNV will generally not be accepted.\n\n<!--\nTODO:\n## General Overview\n\nInformation on repo layout, standards, conventions, etc.\n-->\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/CONTRIBUTING.md"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/dlshriver/DNNV/main/scripts/convert_eran_to_onnx.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/dlshriver/DNNV/main/scripts/install_artifact.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "\r\nFor detailed instructions on installing and using DNNV, see our [documentation](https://dnnv.readthedocs.io/en/stable/).\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Getting Started",
                "parent_header": [
                    "Deep Neural Network Verification"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        },
        {
            "result": {
                "value": "\r\nProperties are specified in our Python-embedded DSL, [DNNP](https://dnnv.readthedocs.io/en/latest/usage/specifying_properties.html). A property specification can import python modules, and define variables. The only required component is the property expression, which must appear at the end of the file. An example of a local robustness property is shown below.\r\n\r\n```python\r\nfrom dnnv.properties import *\r\n\r\nN = Network(\"N\")\r\nx = Image(\"path/to/image\")\r\nepsilon = Parameter(\"epsilon\", float, default=1.0)\r\n\r\nForall(\r\n    x_,\r\n    Implies(\r\n        ((x - epsilon) < x_ < (x + epsilon)),\r\n        argmax(N(x_)) == argmax(N(x))),\r\n    ),\r\n)\r\n```\r\n\r\nTo check whether property holds for some network using the ERAN verifier, run:\r\n\r\n```bash\r\n$ dnnv property.dnnp --network N network.onnx --eran\r\n```\r\n\r\nAdditionally, if the property defines parameters, using the `Parameter` keyword, they can be specified on the command line using the option `--prop.PARAMETER_NAME`, where `PARAMETER_NAME` is the name of the parameter. For the property defined above, a value for `epsilon` can be provided with a command line option as follows:\r\n\r\n```bash\r\n$ dnnv property.dnnp --network N network.onnx --eran --prop.epsilon=2.0\r\n```\r\n\r\nTo save any counter-example found by the verifier, use the option `--save-violation /path/to/array.npy` when running DNNV. This will save any violation found as a numpy array at the path specified, which is useful for viewing counter-examples to properties and enables additional debugging and analysis later.\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "Deep Neural Network Verification",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        },
        {
            "result": {
                "value": "\r\nWe have made several DNN verification benchmarks available in DNNP+ONNX format in [dlshriver/dnnv-benchmarks](https://github.com/dlshriver/dnnv-benchmarks).\r\nThis repo includes the [ACAS Xu](https://github.com/dlshriver/dnnv-benchmarks/tree/main/benchmarks/ACAS_Xu) benchmark, ready to run with DNNV!\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Example Problems",
                "parent_header": [
                    "Deep Neural Network Verification",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "\r\nDNNV requires python >=3.7,<3.10, and has been tested on linux. To install the latest stable version run:\r\n\r\n```bash\r\n$ pip install dnnv\r\n```\r\n\r\nor\r\n\r\n```bash\r\n$ pip install git+https://github.com/dlshriver/DNNV.git@main\r\n```\r\n\r\nWe recommend installing DNNV into a [python virtual environment](https://docs.python.org/3/tutorial/venv.html).\r\n\r\nInstall any of the supported verifiers ([Reluplex](https://github.com/guykatzz/ReluplexCav2017), [planet](https://github.com/progirep/planet), [MIPVerify.jl](https://github.com/vtjeng/MIPVerify.jl), [Neurify](https://github.com/tcwangshiqi-columbia/Neurify), [ERAN](https://github.com/eth-sri/eran), [BaB](https://github.com/oval-group/PLNN-verification), [marabou](https://github.com/NeuralNetworkVerification/Marabou), [nnenum](https://github.com/stanleybak/nnenum), [verinet](https://vas.doc.ic.ac.uk/software/neural/)):\r\n\r\n```bash\r\n$ dnnv_manage install reluplex planet mipverify neurify eran bab marabou nnenum verinet\r\n```\r\n\r\n*Several verifiers make use of the [Gurobi solver](https://www.gurobi.com/).* This should be installed automatically, but requires a license to be manually activated and available on the host machine. Academic licenses can be obtained for free from the [Gurobi website](https://user.gurobi.com/download/licenses/free-academic).\r\n\r\n> After installing a verifier that requires Gurobi, the grbgetkey command can be found at `.venv/opt/gurobi912/linux64/bin/grbgetkey`.\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "Deep Neural Network Verification",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        },
        {
            "result": {
                "value": "\r\nFirst create and activate a python virtual environment.\r\n\r\n```bash\r\n$ python -m venv .venv\r\n$ . .venv/bin/activate\r\n```\r\n\r\nThen run the following commands to clone DNNV and install it into the virtual environment:\r\n\r\n```bash\r\n$ git clone https://github.com/dlshriver/DNNV.git\r\n$ cd DNNV\r\n$ pip install .\r\n```\r\n\r\nVerifiers can then be installed using the `dnnv_manage` tool as described above.\r\n\r\n**Make sure that the project environment is activated** when using dnnv or the dnnv_manage tools.\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Source Installation",
                "parent_header": [
                    "Deep Neural Network Verification",
                    "Getting Started",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        },
        {
            "result": {
                "value": "\r\nWe provide a docker image with DNNV and all non-Gurobi dependent verifiers. To obtain and use the latest pre-built image of the main branch, run:\r\n\r\n```bash\r\n$ docker pull dlshriver/dnnv:latest\r\n$ docker run --rm -it dlshriver/dnnv:latest\r\n(.venv) dnnv@hostname:~$ dnnv -h\r\n```\r\n\r\nThe latest version of the develop branch is available as `dlshriver/dnnv:develop`, and tagged releases are available as `dlshriver/dnnv:vX.X.X` where `vX.X.X` is the desired version number.\r\n\r\nThe docker image can also be built using the provided Dockerfile. The provided build file will install DNNV with all of the verifiers that do not require Gurobi. To build and run the docker image, run:\r\n\r\n```bash\r\n$ docker build . -t dlshriver/dnnv\r\n$ docker run --rm -it dlshriver/dnnv\r\n(.venv) dnnv@hostname:~$ dnnv -h\r\n```\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Docker Installation",
                "parent_header": [
                    "Deep Neural Network Verification",
                    "Getting Started",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        }
    ],
    "faq": [
        {
            "result": {
                "value": "\r\nWe have made several DNN verification benchmarks available in DNNP+ONNX format in [dlshriver/dnnv-benchmarks](https://github.com/dlshriver/dnnv-benchmarks).\r\nThis repo includes the [ACAS Xu](https://github.com/dlshriver/dnnv-benchmarks/tree/main/benchmarks/ACAS_Xu) benchmark, ready to run with DNNV!\r\n\r",
                "type": "Text_excerpt",
                "original_header": "Example Problems",
                "parent_header": [
                    "Deep Neural Network Verification",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        }
    ],
    "acknowledgement": [
        {
            "result": {
                "value": "\r\nThis material is based in part upon work supported by the National Science Foundation under grant number 1900676 and 2019239.\r\n",
                "type": "Text_excerpt",
                "original_header": "Acknowledgements",
                "parent_header": [
                    "Deep Neural Network Verification"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Deep Neural Network Verification"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://dnnv.readthedocs.io/",
                "format": "readthedocs"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2105.12841"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/dlshriver/DNNV/main/README.md"
        }
    ]
}