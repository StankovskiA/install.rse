{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:26:29"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/SoftSec-KAIST/BinKit",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "SoftSec-KAIST",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2020-11-21T11:08:44Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-18T15:57:06Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Binary Code Similarity Analysis (BCSA) Benchmark",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The main improvements of the latest version of BinKit compared to the paper\nversion of BinKit are as follows: Additional support for relatively newer\ncompiler versions for major compilation options, and support for Ofast\noptimization option. \n",
                "original_header": "BinKit 2.0"
            },
            "confidence": 0.9647175505939377,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "These files include the extracted features and useful information for each function.\n- [Normal dataset `.pickle`](https://drive.google.com/file/d/1GjVoSXPvc7oTMJM4bIpmIOd6If7PTuOm/view?usp=sharing)\n- [SizeOpt dataset `.pickle`](https://drive.google.com/file/d/1MeT9Z5aaYf0kAtGxaCnHk8nyXJddPfqC/view?usp=sharing)\n- [Noinline dataset `.pickle`](https://drive.google.com/file/d/1bXj2ZjnNOGAijleBh5Tki1XZLG2i1Hng/view?usp=sharing)\n- [PIE dataset `.pickle`](https://drive.google.com/file/d/1mVzTKeJ4OzH1fyuSCn-_CPF8BmFMkAEw/view?usp=sharing)\n- [LTO dataset `.pickle`](https://drive.google.com/file/d/1ELxkiapNnMrjfcMdltWvritwBH9pBJ7o/view?usp=sharing)\n- [Obfus dataset `.pickle`](https://drive.google.com/file/d/12r4kdMvZYE4zTD3f4FDA-kxDOy8GU5ZL/view?usp=sharing) \n",
                "original_header": "`.pickle` Files"
            },
            "confidence": 0.9409385939454681,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "In Binkit 2.0 dataset, the gsl package misses 8 binaries with Ofast option due\nto compiler bugs. Clang-8 and clang-9 induce compiler hang bug when compiling\nthe gsl package for 32bit ARM with Ofast option. We reported this issue to\nbug-gsl and llvm-project respectively. However, bug-gsl did not reply, and the\nllvm-project replied that these versions are not currently supported. The bug\nreporting links are respectively as follows:\n[bug-gsl](https://lists.gnu.org/archive/html/bug-gsl/2023-02/msg00000.html),\n[llvm-project](https://github.com/llvm/llvm-project/issues/60692)\n \n",
                "original_header": "Missing binaries"
            },
            "confidence": 0.9607774773826089,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "BinKit",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "SoftSec-KAIST/BinKit",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/SoftSec-KAIST/BinKit/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/SoftSec-KAIST/BinKit/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 133,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "benchmark, binary-analysis",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 24,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/SoftSec-KAIST/binkit/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 59425
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 25414
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/SoftSec-KAIST/BinKit/releases/95022543",
                "tag": "v2.0.0",
                "name": "v2.0",
                "author": {
                    "name": "topcue",
                    "type": "User"
                },
                "description": "# Added\r\nAdded support for relatively newer compiler versions.\r\nAdded support for `Ofast` optimization option.",
                "tarball_url": "https://api.github.com/repos/SoftSec-KAIST/BinKit/tarball/v2.0.0",
                "zipball_url": "https://api.github.com/repos/SoftSec-KAIST/BinKit/zipball/v2.0.0",
                "html_url": "https://github.com/SoftSec-KAIST/BinKit/releases/tag/v2.0.0",
                "url": "https://api.github.com/repos/SoftSec-KAIST/BinKit/releases/95022543",
                "release_id": 95022543,
                "date_created": "2023-03-09T06:26:41Z",
                "date_published": "2023-03-09T06:28:35Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/do_compile_openssl.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/do_compile_utils.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/compile_packages.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/do_extract.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/do_compile_coreutils_oldv.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/do_compile_busybox.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/install_gnu_deps.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/setup_gcc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/setup_clang.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/stop_all.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/setup_ctng.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/install_default_deps.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/cleanup_ctng.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/env.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/link_toolchains.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/install_extra_deps.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/scripts/unlink_toolchains.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "- `NUM_JOBS`: for `make`, `parallel`, and `python` multiprocessing\n- `MAX_JOBS`: maximum for `make`\n",
                "type": "Text_excerpt",
                "original_header": "1. Configure the environment in `scripts/env.sh`",
                "parent_header": [
                    "How to use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "value": "We build crosstool-ng and clang environment. If you download pre-compiled\ntoolchain. Please skip this.\n\n```bash\n$ source scripts/env.sh\n# We may have missed some packages here ... please check\n$ scripts/install_default_deps.sh # install default packages for dataset compilation\n$ scripts/setup_ctng.sh       # setup crosstool-ng binaries\n$ scripts/setup_gcc.sh        # build ct-ng environment. Takes a lot of time\n$ scripts/cleanup_ctng.sh     # cleaning up ctng leftovers\n$ scripts/setup_clang.sh      # setup clang and llvm-obfuscator\n```\n",
                "type": "Text_excerpt",
                "original_header": "2. Build cross-compiling environment (takes lots of time)",
                "parent_header": [
                    "How to use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "value": "```bash\n$ scripts/link_toolchains.sh  # link base toolchain\n```\nTo undo the linking, please check `scripts/unlink_toolchains.sh`\n",
                "type": "Text_excerpt",
                "original_header": "3. Link toolchains",
                "parent_header": [
                    "How to use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "value": "Please configure variables in `compile_packages.sh` and run below. The script\nautomatically downloads the source code of GNU packages, and compiles them to\nmake all the dataset. However, it may take too much time to create all of them.\n\n- *NOTE* that it takes *SIGNIFIACNT* time.\n- *NOTE* that some packages would not be compiled for some compiler options.\n\n```bash\n$ scripts/install_gnu_deps.sh # install default packages for dataset compilation\n$ ./compile_packages.sh\n```\n",
                "type": "Text_excerpt",
                "original_header": "4. Build dataset",
                "parent_header": [
                    "How to use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "value": "To build datasets by customizing options, you can make your own configuration\nfile (`.yml`) and select target compiler options. You can check the format in\nthe existing sample files in the `/config` directory. Here, please make sure\nthat the name of your config file is not included in the blacklist in the\n[compilation\nscript](/SoftSec-KAIST/BinKit/blob/master/do_compile_utils.sh#L347).\n\n",
                "type": "Text_excerpt",
                "original_header": "4-2. Build dataset with customized options",
                "parent_header": [
                    "How to use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "value": "The time spent for running the below script took `7` hours on our machine.\n\n```bash\n$ python gnu_compile_script.py \\\n    --base_dir \"/home/dongkwan/binkit/dataset/gnu\" \\\n    --num_jobs 72 \\\n    --config \"config/normal.yml\" \\\n    --whitelist \"config/whitelist.txt\"\n```\n",
                "type": "Text_excerpt",
                "original_header": "Running example",
                "parent_header": [
                    "Issues"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "You can download the source code of GNU packages of your interest as below.\n- Please check step 1 before running the command.\n- You must give *ABSOLUTE PATH* for `--base_dir`.\n\n```bash\n$ source scripts/env.sh\n$ python gnu_compile_script.py \\\n    --base_dir \"/home/dongkwan/binkit/dataset/gnu\" \\\n    --num_jobs 8 \\\n    --whitelist \"config/whitelist.txt\" \\\n    --download\n```\n\nYou can compile only the packages or compiler options of your interest as below.\n\n```bash\n$ source scripts/env.sh\n$ python gnu_compile_script.py \\\n    --base_dir \"/home/dongkwan/binkit/dataset/gnu\" \\\n    --num_jobs 8 \\\n    --config \"config/normal.yml\" \\\n    --whitelist \"config/whitelist.txt\"\n```\n\nYou can check the compiled binaries as below.\n\n```bash\n$ source scripts/env.sh\n$ python compile_checker.py \\\n    --base_dir \"/home/dongkwan/binkit/dataset/gnu\" \\\n    --num_jobs 8 \\\n    --config \"config/normal.yml\"\n```\n\nFor more details, please check `compile_packages.sh`\n",
                "type": "Text_excerpt",
                "original_header": "4-1. Build dataset (manual)",
                "parent_header": [
                    "How to use"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "In particular, BinKit now includes GCC and Clang versions up to 11 and 13,\nrespectively. Currently, a total of 6 optimization options (O0, O1, O2, O3, Os,\nOfast) are supported. see the [Currently supported compile\noptions](https://github.com/SoftSec-KAIST/BinKit#currently-supported-compile-options)\nsection below for more detailed options. \nIn Binkit 2.0 dataset, the gsl package misses 8 binaries with Ofast option due\nto compiler bugs. See the [Missing binaries](https://github.com/SoftSec-KAIST/BinKit#Missing-binaries)\npart of the [Issues](https://github.com/topcue/tmp#issues) section for more\ninformation.\n \n",
                "original_header": "BinKit 2.0"
            },
            "confidence": 0.9941626318777681,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The original dataset includes 1,352 distinct combinations of compiler options of\n8 architectures, 5 optimization levels, and 13 compilers. It includes 243,128\nbinaries. We tested this code in Ubuntu 16.04. \n",
                "original_header": "BinKit 1.0 (paper version)"
            },
            "confidence": 0.9975993795467578,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "You can download our dataset and toolchain as below. The link will be changed to\n`git-lfs` soon. \n[//]: # (Cloning this repository also downloads below pre-compiled dataset and toolchain\nwith `git-lfs`. Please use `GIT_LFS_SKIP_SMUDGE=1` to skip the download.)\n \n",
                "original_header": "Pre-compiled dataset and toolchain"
            },
            "confidence": 0.9988495003438267,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- x86_32\n- x86_64\n- arm_32 (little endian)\n- arm_64 (little endian)\n- mips_32 (little endian)\n- mips_64 (little endian)\n- mipseb_32 (big endian)\n- mipseb_64 (big endian)\n \n",
                "original_header": "Architecture"
            },
            "confidence": 0.9319791368405038,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- gcc\n  - gcc-4.9.4\n  - gcc-5.5.0\n  - gcc-6.4.0\n  - gcc-6.5.0\n  - gcc-7.3.0\n  - gcc-8.2.0\n  - gcc-8.5.0\n  - gcc-9.4.0\n  - gcc-10.3.0\n  - gcc-11.2.0\n- clang\n  - clang-4.0.0\n  - clang-5.0.2\n  - clang-6.0.1\n  - clang-7.0.1\n  - clang-8.0.0\n  - clang-9.0.1\n  - clang-10.0.1\n  - clang-11.0.1\n  - clang-12.0.1\n  - clang-13.0.0\n- clang-obfus\n  - clang-obfus-fla (Obfuscator-LLVM - FLA)\n  - clang-obfus-sub (Obfuscator-LLVM - SUB)\n  - clang-obfus-bcf (Obfuscator-LLVM - BCF)\n  - clang-obfus-all (Obfuscator-LLVM - FLA + SUB + BCF)\n \n",
                "original_header": "Compilers"
            },
            "confidence": 0.9999999268067681,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "We ran all our experiments on a server equipped with four Intel Xeon E7-8867v4\n2.40 GHz CPUs (total 144 cores), 896 GB DDR4 RAM, and 4 TB SSD. We setup Ubuntu\n16.04 on the server.\n \n",
                "original_header": "Tested environment"
            },
            "confidence": 0.9995658419775376,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "In Binkit 2.0 dataset, the gsl package misses 8 binaries with Ofast option due\nto compiler bugs. Clang-8 and clang-9 induce compiler hang bug when compiling\nthe gsl package for 32bit ARM with Ofast option. We reported this issue to\nbug-gsl and llvm-project respectively. However, bug-gsl did not reply, and the\nllvm-project replied that these versions are not currently supported. The bug\nreporting links are respectively as follows:\n[bug-gsl](https://lists.gnu.org/archive/html/bug-gsl/2023-02/msg00000.html),\n[llvm-project](https://github.com/llvm/llvm-project/issues/60692)\n \n",
                "original_header": "Missing binaries"
            },
            "confidence": 0.9999994520473843,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "The time spent for running the below script took `7` hours on our machine.\n\n```bash\n$ python gnu_compile_script.py \\\n    --base_dir \"/home/dongkwan/binkit/dataset/gnu\" \\\n    --num_jobs 72 \\\n    --config \"config/normal.yml\" \\\n    --whitelist \"config/whitelist.txt\"\n```\n",
                "type": "Text_excerpt",
                "original_header": "Running example",
                "parent_header": [
                    "Issues"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "We would appreciate if you consider citing [our\npaper](https://ieeexplore.ieee.org/document/9813408) when using BinKit.\n```bibtex\n@ARTICLE{kim:tse:2022,\n  author={Kim, Dongkwan and Kim, Eunsoo and Cha, Sang Kil and Son, Sooel and Kim, Yongdae},\n  journal={IEEE Transactions on Software Engineering}, \n  title={Revisiting Binary Code Similarity Analysis using Interpretable Feature Engineering and Lessons Learned}, \n  year={2022},\n  volume={},\n  number={},\n  pages={1-23},\n  doi={10.1109/TSE.2022.3187689}\n}\n```\n\n\n",
                "type": "Text_excerpt",
                "original_header": "Citation"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        },
        {
            "result": {
                "value": "@article{kim:tse:2022,\n    doi = {10.1109/TSE.2022.3187689},\n    pages = {1-23},\n    number = {},\n    volume = {},\n    year = {2022},\n    title = {Revisiting Binary Code Similarity Analysis using Interpretable Feature Engineering and Lessons Learned},\n    journal = {IEEE Transactions on Software Engineering},\n    author = {Kim, Dongkwan and Kim, Eunsoo and Cha, Sang Kil and Son, Sooel and Kim, Yongdae},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1109/TSE.2022.3187689",
                "title": "Revisiting Binary Code Similarity Analysis using Interpretable Feature Engineering and Lessons Learned",
                "author": "Kim, Dongkwan and Kim, Eunsoo and Cha, Sang Kil and Son, Sooel and Kim, Yongdae"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "BinKit 2.0"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/SoftSec-KAIST/binkit/master/README.md"
        }
    ]
}