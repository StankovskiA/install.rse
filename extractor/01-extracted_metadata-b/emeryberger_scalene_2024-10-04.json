{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:15:21"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/emeryberger/scalene",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "emeryberger",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-01-20T20:41:45Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-24T06:32:29Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Scalene: a high-performance, high-precision CPU, GPU, and memory profiler for Python",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "[This talk](https://youtu.be/5iEf-_7mM1k) presented at PyCon 2021 walks through Scalene's advantages and how to use it to debug the performance of an application (and provides some technical details on its internals). We highly recommend watching this video! \n",
                "original_header": "Scalene talk (PyCon US 2021)"
            },
            "confidence": 0.9107907788158213,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- Scalene performs profiling **_at the line level_** _and_ **_per function_**, pointing to the functions and the specific lines of code responsible for the execution time in your program.\n \n",
                "original_header": "Fast and Accurate"
            },
            "confidence": 0.9558299651152736,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- Scalene **separates out time spent in Python from time in native code** (including libraries). Most Python programmers aren't going to optimize the performance of native code (which is usually either in the Python implementation or external libraries), so this helps developers focus their optimization efforts on the code they can actually improve.\n- Scalene **highlights hotspots** (code accounting for significant percentages of CPU time or memory allocation) in red, making them even easier to spot.\n- Scalene also separates out **system time**, making it easy to find I/O bottlenecks.\n \n",
                "original_header": "CPU profiling"
            },
            "confidence": 0.9777811593211903,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Below is a table comparing the **performance and features** of various profilers to Scalene. \nScalene has all of the following features, many of which only Scalene supports: \n",
                "original_header": "Performance and Features"
            },
            "confidence": 0.9658968218623118,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you include the `--cli` option, Scalene prints annotated source code for the program being profiled\n(as text, JSON (`--json`), or HTML (`--html`)) and any modules it\nuses in the same directory or subdirectories (you can optionally have\nit `--profile-all` and only include files with at least a\n`--cpu-percent-threshold` of time).  Here is a snippet from\n`pystone.py`. \n",
                "original_header": "Output"
            },
            "confidence": 0.9291797650365036,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "scalene",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "emeryberger/scalene",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/emeryberger/scalene/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/emeryberger/scalene/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 210,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 10,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/emeryberger/scalene/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 466936
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 452972
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 64006
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 8423
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 5074
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CSS",
                "name": "CSS",
                "type": "Programming_language",
                "size": 2478
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at Emery.berger@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/CODE_OF_CONDUCT.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "cff-version: 1.0.0\nmessage: \"If you use or refer to Scalene, please cite it as below.\"\nauthors:\n- family-names: \"Berger\"\n  given-names: \"Emery D.\"\n  orcid: \"https://orcid.org/0000-0002-3222-3271\"\n- family-names: \"Altmayer Pizzorno\"\n  given-names: \"Juan\"\n  orcid: \"https://orcid.org/0000-0002-1891-2919\"\n- family-names: \"Stern\"\n  given-names: \"Sam\"\ntitle: \"Scalene: a high-performance, high-precision CPU, GPU, and memory profiler for Python\"\nversion: 1.5.9\ndate-released: 2022-07-24\nurl: \"https://github.com/plasma-umass/scalene\"\npreferred-citation:\n  type: unpublished\n  authors:\n  - family-names: \"Berger\"\n    given-names: \"Emery D.\"\n    orcid: \"https://orcid.org/0000-0002-3222-3271\"\n  doi: \"10.48550/arXiv.2006.03879\"\n  journal: \"arXiv\"\n  month: 7\n  start: 1 # First page number\n  end: 13 # Last page number\n  title: \"Scalene: Scripting-Language Aware Profiling for Python\"\n  year: 2020\n",
                "type": "File_dump",
                "format": "cff"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/CITATION.cff"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "https://github.com/emeryberger/scalene/tree/master/docs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/emeryberger/scalene/master/docs/scalene-demo.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/docs/scalene-demo.ipynb"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "```console\npython3 -m pip install -U scalene\n```\n\nor\n\n```console\nconda install -c conda-forge scalene\n```\n",
                "type": "Text_excerpt",
                "original_header": "Installing Scalene:",
                "parent_header": [
                    "Scalene: a Python CPU+GPU+memory profiler with AI-powered optimization proposals",
                    "About Scalene",
                    "Quick Start"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "value": "```console\n!pip install scalene\n%load_ext scalene\n```\n\nLine mode:\n\n```console\n%scrun [options] statement\n```\n\nCell mode:\n\n```console\n%%scalene [options]\ncode...\ncode...\n```\n</details>\n\n## Installation\n\n<details>\n<summary>Using <code>pip</code> (Mac OS X, Linux, Windows, and WSL2)</summary>\n\nScalene is distributed as a `pip` package and works on Mac OS X, Linux (including Ubuntu in [Windows WSL2](https://docs.microsoft.com/en-us/windows/wsl/wsl2-index)) and (with limitations) Windows platforms. (**Note**: the Windows version isn't yet complete; it currently only supports CPU and GPU profiling, but not memory profiling.)\n\nYou can install it as follows:\n```console\n  % pip install -U scalene\n```\n\nor\n```console\n  % python3 -m pip install -U scalene\n```\n\nYou may need to install some packages first.\n\nSee https://stackoverflow.com/a/19344978/4954434 for full instructions for all Linux flavors.\n\nFor Ubuntu/Debian:\n\n```console\n  % sudo apt install git python3-all-dev\n```\n</details>\n\n\n<details>\n<summary>Using <code>Homebrew</code> (Mac OS X)</summary>\n\nAs an alternative to `pip`, you can use Homebrew to install the current version of Scalene from this repository:\n\n```console\n  % brew tap plasma-umass/scalene\n  % brew install --head plasma-umass/scalene/scalene\n```\n</details>\n\n<details>\n<summary>On ArchLinux</summary>\n\nYou can install Scalene on Arch Linux via the [AUR\npackage](https://aur.archlinux.org/packages/python-scalene-git/). Use your favorite AUR helper, or\nmanually download the `PKGBUILD` and run `makepkg -cirs` to build. Note that this will place\n`libscalene.so` in `/usr/lib`; modify the below usage instructions accordingly.\n</details>\n",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "Comparison to Other Profilers"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "<img width=\"487\" alt=\"Scalene advanced options\" src=\"https://user-images.githubusercontent.com/1612723/211639253-ec926b38-3efe-4a20-8514-e10dde94ec01.png\"> \n",
                "original_header": "About Scalene"
            },
            "confidence": 0.9736243582941339,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you include the `--cli` option, Scalene prints annotated source code for the program being profiled\n(as text, JSON (`--json`), or HTML (`--html`)) and any modules it\nuses in the same directory or subdirectories (you can optionally have\nit `--profile-all` and only include files with at least a\n`--cpu-percent-threshold` of time).  Here is a snippet from\n`pystone.py`. \n",
                "original_header": "Output"
            },
            "confidence": 0.9985910286468959,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The following command runs Scalene on a provided example program.\n```console\nscalene test/testme.py\n```\n \n<details>\n <summary>\n  Click to see all Scalene's options (available by running with <code>--help</code>)\n </summary> \n```console\n    % scalene --help\n     usage: scalene [-h] [--outfile OUTFILE] [--html] [--reduced-profile]\n                    [--profile-interval PROFILE_INTERVAL] [--cpu-only]\n                    [--profile-all] [--profile-only PROFILE_ONLY]\n                    [--use-virtual-time]\n                    [--cpu-percent-threshold CPU_PERCENT_THRESHOLD]\n                    [--cpu-sampling-rate CPU_SAMPLING_RATE]\n                    [--malloc-threshold MALLOC_THRESHOLD]\n     \n     Scalene: a high-precision CPU and memory profiler.\n     https://github.com/plasma-umass/scalene\n     \n     command-line:\n        % scalene [options] yourprogram.py\n     or\n        % python3 -m scalene [options] yourprogram.py\n     \n     in Jupyter, line mode:\n        %scrun [options] statement\n     \n     in Jupyter, cell mode:\n        %%scalene [options]\n        code...\n        code...\n     \n     optional arguments:\n       -h, --help            show this help message and exit\n       --outfile OUTFILE     file to hold profiler output (default: stdout)\n       --html                output as HTML (default: text)\n       --reduced-profile     generate a reduced profile, with non-zero lines only (default: False)\n       --profile-interval PROFILE_INTERVAL\n                             output profiles every so many seconds (default: inf)\n       --cpu-only            only profile CPU time (default: profile CPU, memory, and copying)\n       --profile-all         profile all executed code, not just the target program (default: only the target program)\n       --profile-only PROFILE_ONLY\n                             profile only code in filenames that contain the given strings, separated by commas (default: no restrictions)\n       --use-virtual-time    measure only CPU time, not time spent in I/O or blocking (default: False)\n       --cpu-percent-threshold CPU_PERCENT_THRESHOLD\n                             only report profiles with at least this percent of CPU time (default: 1%)\n       --cpu-sampling-rate CPU_SAMPLING_RATE\n                             CPU sampling rate (default: every 0.01s)\n       --malloc-threshold MALLOC_THRESHOLD\n                             only report profiles with at least this many allocations (default: 100)\n     \n     When running Scalene in the background, you can suspend/resume profiling\n     for the process ID that Scalene reports. For example:\n     \n        % python3 -m scalene [options] yourprogram.py &\n      Scalene now profiling process 12345\n        to suspend profiling: python3 -m scalene.profile --off --pid 12345\n        to resume profiling:  python3 -m scalene.profile --on  --pid 12345\n```\n</details>\n \n",
                "original_header": "Scalene"
            },
            "confidence": 0.9927454267520778,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "<details>\n<summary>\nInstructions for installing and using Scalene with Jupyter notebooks\n</summary> \n",
                "original_header": "Scalene with Jupyter"
            },
            "confidence": 0.9997419945977563,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "**A:** Yes! You can run it as follows (for example): \n**A:**  In PyCharm, you can run Scalene at the command line by opening the terminal at the bottom of the IDE and running a Scalene command (e.g., `python -m scalene <your program>`). Use the options `--cli`, `--html`, and `--outfile <your output.html>` to generate an HTML file that you can then view in the IDE.\n</details> \n**A:** Pass in the `--noreload` option (see https://github.com/plasma-umass/scalene/issues/178).\n</details> \n<details>\n<summary>\nHow do I use Scalene with PyTorch on the Mac?\n</summary> \n**A:** Scalene works with PyTorch version 1.5.1 on Mac OS X. There's a bug in newer versions of PyTorch (https://github.com/pytorch/pytorch/issues/57185) that interferes with Scalene (discussion here: https://github.com/plasma-umass/scalene/issues/110), but only on Macs.\n</details>\n \n",
                "original_header": "Asked Questions"
            },
            "confidence": 0.9871063268872646,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "<details>\n<summary>\nCommonly used options:\n</summary>\n\n```console\nscalene your_prog.py                             # full profile (outputs to web interface)\npython3 -m scalene your_prog.py                  # equivalent alternative\n\nscalene --cli your_prog.py                       # use the command-line only (no web interface)\n\nscalene --cpu your_prog.py                       # only profile CPU\nscalene --cpu --gpu your_prog.py                 # only profile CPU and GPU\nscalene --cpu --gpu --memory your_prog.py        # profile everything (same as no options)\n\nscalene --reduced-profile your_prog.py           # only profile lines with significant usage\nscalene --profile-interval 5.0 your_prog.py      # output a new profile every five seconds\n\nscalene (Scalene options) --- your_prog.py (...) # use --- to tell Scalene to ignore options after that point\nscalene --help                                   # lists all options\n```\n\n</details>\n\n<details>\n<summary>\nUsing Scalene programmatically in your code:\n</summary>\n\nInvoke using `scalene` as above and then:\n\n```Python\nfrom scalene import scalene_profiler\n\n# Turn profiling on\nscalene_profiler.start()\n\n# Turn profiling off\nscalene_profiler.stop()\n```\n\n</details>\n\n<details>\n<summary>\nUsing Scalene to profile only specific functions via <code>@profile</code>:\n</summary>\n\nJust preface any functions you want to profile with the `@profile` decorator and run it with Scalene:\n\n```Python\n# do not import profile!\n\n@profile\ndef slow_function():\n    import time\n    time.sleep(3)\n```\n\n</details>\n",
                "type": "Text_excerpt",
                "original_header": "Using Scalene:",
                "parent_header": [
                    "Scalene: a Python CPU+GPU+memory profiler with AI-powered optimization proposals",
                    "About Scalene",
                    "Quick Start"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "value": "Scalene has both a CLI and a web-based GUI [(demo here)](http://plasma-umass.org/scalene-gui/).\n\nBy default, once Scalene has profiled your program, it will open a\ntab in a web browser with an interactive user interface (all processing is done\nlocally). Hover over bars to see breakdowns of CPU and memory\nconsumption, and click on underlined column headers to sort the\ncolumns. The generated file `profile.html` is self-contained and can be saved for later use.\n\n[![Scalene web GUI](https://raw.githubusercontent.com/plasma-umass/scalene/master/docs/scalene-gui-example.png)](https://raw.githubusercontent.com/plasma-umass/scalene/master/docs/scalene-gui-example-full.png)\n\n",
                "type": "Text_excerpt",
                "original_header": "Web-based GUI",
                "parent_header": [
                    "Scalene: a Python CPU+GPU+memory profiler with AI-powered optimization proposals",
                    "About Scalene",
                    "Quick Start"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        }
    ],
    "acknowledgement": [
        {
            "result": {
                "value": "Logo created by [Sophia Berger](https://www.linkedin.com/in/sophia-berger/).\n\nThis material is based upon work supported by the National Science\nFoundation under Grant No. 1955610. Any opinions, findings, and\nconclusions or recommendations expressed in this material are those of\nthe author(s) and do not necessarily reflect the views of the National\nScience Foundation.\n",
                "type": "Text_excerpt",
                "original_header": "Acknowledgements"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Scalene: a Python CPU+GPU+memory profiler with AI-powered optimization proposals"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/plasma-umass/scalene/raw/master/docs/images/slack-logo.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/plasma-umass/scalene/raw/master/docs/Ozsvald-tweet.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/plasma-umass/scalene/raw/master/docs/semantic-scholar-success.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://user-images.githubusercontent.com/1612723/211639253-ec926b38-3efe-4a20-8514-e10dde94ec01.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://user-images.githubusercontent.com/1612723/211639968-37cf793f-3290-43d1-9282-79e579558388.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/plasma-umass/scalene/master/docs/scalene-gui-example.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/plasma-umass/scalene/master/docs/images/scalene-video-img.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/plasma-umass/scalene/raw/master/docs/cpu-accuracy-comparison.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/plasma-umass/scalene/master/docs/images/profiler-comparison.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/plasma-umass/scalene/master/docs/images/sample-profile-pystone.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2212.07597"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emeryberger/scalene/master/README.md"
        }
    ]
}