{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:58:41"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/ASSERT-KTH/pankti",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "ASSERT-KTH",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2020-03-20T10:41:02Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-03T18:21:14Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2020 CASTOR-Software\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Generating tests from production workloads http://arxiv.org/pdf/2012.01198",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This repository contains code for the following research tools:\n- **pankti**: Tests from production data ([documentation](#pankti))\n- **rick**: Tests + mocks from production data ([documentation](#rick))\n \n",
                "original_header": "About"
            },
            "confidence": 0.9463008006708793,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you use this code for academic research, please cite: \"[Production Monitoring to Improve Test Suites](http://arxiv.org/pdf/2012.01198)\", In IEEE Transactions on Reliability, 2021.  \n"
            },
            "confidence": 0.947650089626643,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "pankti-instrument is a Glowroot ([download](https://glowroot.org/)) plugin that serializes objects for instrumented methods that are invoked. pankti-instrument uses the [Plugin API](https://glowroot.org/instrumentation.html) of Glowroot to instrument the methods extracted from pankti-extract.   \n",
                "original_header": "Instrument (pankti-instrument)"
            },
            "confidence": 0.9451220378986429,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Rick transforms production workloads into tests that use mocks.\nIn addition to some functionalities and implementation shared with **pankti**,\nit supports the instrumentation of methods that can be mocked within a test. It also handles the generation of these mocks with data collected from production. \n",
                "original_header": "rick"
            },
            "confidence": 0.986175021640863,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "pankti",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "ASSERT-KTH/pankti",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/ASSERT-KTH/pankti/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/ASSERT-KTH/pankti/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 16,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "java, monitoring, rick-testing, software-testing, test-generation",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/castor-software/pankti/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 1469306
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 45033
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 22541
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Batchfile",
                "name": "Batchfile",
                "type": "Programming_language",
                "size": 2303
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Roff",
                "name": "Roff",
                "type": "Programming_language",
                "size": 1525
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 260
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "run": [
        {
            "result": {
                "value": "Execute the application with a workload, using Glowroot as a javaagent.\\\n`java -javaagent:/path/to/glowroot/glowroot.jar -jar <project-jar>.jar <cli-args>`\\\nThe serialized objects for invoked methods are saved at `/tmp/pankti-object-data/`.\nAdditionally, a list of invoked methods is generated at `/tmp/pankti-object-data/invoked-methods.csv`. \n___\n",
                "type": "Text_excerpt",
                "original_header": "Execute",
                "parent_header": [
                    "pankti"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        },
        {
            "result": {
                "value": "To **extract** methods under test (MUTs) and mockable methods:\n1. `cd pankti/pankti-extract/`\n2. `java -jar target/pankti-extract-<version>-jar-with-dependencies.jar /path/to/maven/project`\n3. The output is `./extracted-methods-<project>.csv`\n\n---\n\nTo **instrument** MUTs and mockable methods:\n1. `cd pankti/pankti-instrument/`\n2. Instrument all MUTs found across all classes:\n    - `python3 instrument-mock.py ../pankti-extract/extracted-methods-<project>.csv`\n3. Alternatively, instrument MUTs found in a specific class under test (CUT):\n    - `python3 instrument-mock.py ../pankti-extract/extracted-methods-<project>.csv fully.qualified.name.of.CUT`\n4. This generates aspect classes for MUTs and corresponding mockable methods in `se.kth.castor.pankti.instrument.plugins`\n5. It also updates `./src/main/resources/META-INF/glowroot.plugin.json`\n6. `mvn clean install`\n7. Drop `<pankti-instrument-<version>-jar-with-dependencies.jar` to `/path/to/glowroot/plugins/`\n\n---\n\nTo **execute** the target project:\n1. `java -javaagent:/path/to/glowroot/glowroot.jar <project-jar-and-options>`\n    - The collected objects are stored at `/tmp/pankti-object-data/`\n    - A CSV with the list of invoked MUTs is at `/tmp/pankti-object-data/invoked-methods.csv`\n\n---\n\nTo **generate** tests:\n1. `cd pankti/rick/`\n2. `java -jar target/rick-<version>-jar-with-depdendencies.jar /path/to/maven/project/ /tmp/pankti-object-data/invoked-methods.csv /tmp/pankti-object-data/`\n    - The generated tests (`Test*PanktiGen.java`) are at `./output/generated/<project>`\n\n---\n",
                "type": "Text_excerpt",
                "original_header": "Running",
                "parent_header": [
                    "rick"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "1. Clone this repository\n2. `cd /path/to/pankti/pankti-extract/`\n3. `mvn clean install`\n4. `java -jar target/pankti-extract-<version>-jar-with-dependencies.jar /path/to/maven/project`\n  - Available flags: `-h` (`--help`) for usage, `-v` (`--void`) to include methods that return void\n5. The output is a CSV file at `/path/to/pankti/pankti-extract/` called _extracted-methods-\\<project-name\\>.csv_.\n6. Generate Descartes report(s) to find pseudo-tested methods in the project (we use the `method.json` files)\n  - [pitest-descartes on GitHub](https://github.com/STAMP-project/pitest-descartes)\n  - [pitest-descartes for multi-module projects](https://github.com/STAMP-project/pitmp-maven-plugin)\n7. `python find-pseudo-tested.py /path/to/method/list/from/step5.csv /space/separated/paths/to/descartes/method.json` outputs a CSV with the list of methods that are candidates for instrumentation.\n___\n \n",
                "original_header": "Extract (pankti-extract)"
            },
            "confidence": 0.9999613362449221,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To run **pankti-instrument**,\n1. `cd /path/to/pankti/pankti-instrument/`\n2. `python instrument.py <path/to/instrumentation/candidates/from/previous/phase>.csv`\n3. New aspect classes for these methods are generated in `se.kth.castor.pankti.instrument.plugins`. These aspect classes are also included in `./src/main/resources/META-INF/glowroot.plugin.json`\n4. `mvn clean install`\n5. Drop `<pankti-instrument-<version>-jar-with-dependencies.jar` to `/path/to/glowroot/plugins/` \n___\n \n",
                "original_header": "Instrument (pankti-instrument)"
            },
            "confidence": 0.9999999999772058,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To run **pankti-generate**,\n1. `cd /path/to/pankti/pankti-generate/`\n2. `mvn clean install`\n3. `java -jar target/pankti-generate-<version>-jar-with-dependencies.jar /path/to/project /path/to/invoked/methods.csv /path/to/directory/with/objects/` \n<p align=\"center\">\n  <img src=\"https://github.com/castor-software/pankti/blob/master/pankti-workflow.jpg\">\n</p>\n \n",
                "original_header": "Generate (pankti-generate)"
            },
            "confidence": 0.9982887693440337,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "1. Clone this repository\n2. `cd pankti/`\n3. `mvn clean install`\n--- \n",
                "original_header": "Building"
            },
            "confidence": 0.9999962576155678,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@article{arXiv-2012.01198,\n    author = {Deepika Tiwari and Long Zhang and Martin Monperrus and Benoit Baudry},\n    doi = {10.1109/TR.2021.3101318},\n    year = {2021},\n    journal = {IEEE Transactions on Reliability},\n    title = {Production Monitoring to Improve Test Suites},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1109/TR.2021.3101318",
                "title": "Production Monitoring to Improve Test Suites",
                "author": "Deepika Tiwari and Long Zhang and Martin Monperrus and Benoit Baudry"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "About"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/castor-software/pankti/wiki",
                "format": "wiki"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/castor-software/pankti/master/pankti-workflow.jpg"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/castor-software/pankti/master/README.md"
        }
    ]
}