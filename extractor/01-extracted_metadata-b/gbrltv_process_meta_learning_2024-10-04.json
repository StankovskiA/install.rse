{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:44:03"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/gbrltv/process_meta_learning",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "gbrltv",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-03-10T19:30:49Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2023-03-29T16:32:57Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2021 Gabriel Marques Tavares\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/LICENSE"
        }
    ],
    "name": [
        {
            "result": {
                "value": "process_meta_learning",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "gbrltv/process_meta_learning",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/gbrltv/process_meta_learning/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/gbrltv/process_meta_learning/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/gbrltv/process_meta_learning/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 320779
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 15123
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/evaluation.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/evaluation.ipynb"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "Clone this repo to your local machine using\n\n```shell\ngit clone https://github.com/gbrltv/process_meta_learning.git\n```\n\nTo directly use meta feature extraction methods via `import`\n```shell\ncd process_meta_learning\npip install -e .\n```\n",
                "type": "Text_excerpt",
                "original_header": "Clone",
                "parent_header": [
                    "Meta-Learning applied to Process Mining",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        },
        {
            "result": {
                "value": "\nBefore running the experiments, it is necessary to convert the original logs (`xes.gz`) to the `xes` format (entropy extraction does not accept `xes.gz` files). For that, run:\n\n```shell\npython3 convert_log_files.py\n```\n\nThis code converts files under the `event_logs` folder and removes the original files.\n\n",
                "type": "Text_excerpt",
                "original_header": "Data preparation",
                "parent_header": [
                    "Meta-Learning applied to Process Mining",
                    "Experimental Setup"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        },
        {
            "result": {
                "value": "To extract the meta-features from event logs, simply run the following line of code:\n\n```shell\npython3 extract_features.py\n```\n\nThe meta-features are saved under the `results` folder with the name `log_features.csv`.\n\n",
                "type": "Text_excerpt",
                "original_header": "Extracting Meta-features",
                "parent_header": [
                    "Meta-Learning applied to Process Mining",
                    "Experimental Setup"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        },
        {
            "result": {
                "value": "To compute model quality metrics (fitness, precision, generalization, simplicity), run the following code:\n\n\n```shell\npython3 model_metrics.py\n```\n\nThe quality metrics (along with their computation time) are saved under the `results` folder with the name `model_metrics.csv`.\n",
                "type": "Text_excerpt",
                "original_header": "Model Quality Metrics",
                "parent_header": [
                    "Meta-Learning applied to Process Mining",
                    "Experimental Setup"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        },
        {
            "result": {
                "value": "For an in-depth analysis of results, classification performance, model relevance, and quality metrics, please take a look [here](https://github.com/gbrltv/process_meta_learning/blob/main/evaluation.ipynb).\n",
                "type": "Text_excerpt",
                "original_header": "Evaluating Results",
                "parent_header": [
                    "Meta-Learning applied to Process Mining",
                    "Experimental Setup"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "[Barbon Jr., S., Ceravolo, P., Damiani, E., Tavares, G.M.: Using Meta-learning to Recommend Process Discovery Methods, 2021](https://arxiv.org/abs/2103.12874)\n",
                "type": "Text_excerpt",
                "original_header": "References",
                "parent_header": [
                    "Meta-Learning applied to Process Mining"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        }
    ],
    "contributors": [
        {
            "result": {
                "value": "- [Gabriel Marques Tavares](https://www.researchgate.net/profile/Gabriel_Tavares6), PhD candidate at Universit\u00e0 degli Studi di Milano\n- [Paolo Ceravolo](https://www.unimi.it/en/ugov/person/paolo-ceravolo), Associate Professor at Universit\u00e0 degli Studi di Milano\n- [Sylvio Barbon Junior](http://www.barbon.com.br/), Associate Professor at State University of Londrina\n",
                "type": "Text_excerpt",
                "original_header": "Contributors",
                "parent_header": [
                    "Meta-Learning applied to Process Mining"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "> Application of Meta-learning to recommend a suitable process discovery method that maximizes model quality in four complementary dimensions: fitness, precision, generalization and simplicity. According to our Meta-learning pipeline, it is possible to recommend a discovery method with 92% of accuracy using light-weight meta-features from the Process Mining domain. \n",
                "original_header": "Meta-Learning applied to Process Mining"
            },
            "confidence": 0.9611248556158327,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Meta-Learning applied to Process Mining"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2103.12874"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/gbrltv/process_meta_learning/main/README.md"
        }
    ]
}