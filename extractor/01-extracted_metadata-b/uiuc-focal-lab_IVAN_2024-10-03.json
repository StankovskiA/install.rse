{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:56:27"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/uiuc-focal-lab/IVAN",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "uiuc-focal-lab",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-04-10T17:55:34Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-06-04T21:57:17Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Incremental Verification of DNNs (https://arxiv.org/abs/2304.01874)",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "IVAN",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "uiuc-focal-lab/IVAN",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/uiuc-focal-lab/IVAN/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/uiuc-focal-lab/IVAN/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/uiuc-focal-lab/IVAN/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 372091
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 1760
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/nnverify/training/com.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "GUROBI installation instructions can be found at `https://www.gurobi.com/documentation/9.5/quickstart_linux/software_installation_guid.html`\n\nFor Linux-based systems the installation steps are:\nInstall Gurobi:\n```\nwget https://packages.gurobi.com/9.1/gurobi9.1.2_linux64.tar.gz\ntar -xvf gurobi9.1.2_linux64.tar.gz\ncd gurobi912/linux64/src/build\nsed -ie 's/^C++FLAGS =.*$/& -fPIC/' Makefile\nmake\ncp libgurobi_c++.a ../../lib/\ncd ../../\ncp lib/libgurobi91.so /usr/local/lib -> (You may need to use sudo command for this)   \npython3 setup.py install\ncd ../../\n```\n\nUpdate environment variables:\ni) Run following export commands in command prompt/terminal (these environment values are only valid for the current session) \nii) Or copy the lines in the .bashrc file (or .zshrc if using zshell), and save the file \n\n```\nexport GUROBI_HOME=\"$HOME/opt/gurobi950/linux64\"\nexport GRB_LICENSE_FILE=\"$HOME/gurobi.lic\"\nexport PATH=\"${PATH}:${GUROBI_HOME}/bin\"\nexport LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/$HOME/usr/local/lib:/usr/local/lib\n```\n\nGetting the free academic license\nTo run GUROBI one also needs to get a free academic license. https://www.gurobi.com/documentation/9.5/quickstart_linux/retrieving_a_free_academic.html#subsection:academiclicense\n\na) Register using any academic email ID on the GUROBI website. b) Generate the license on https://portal.gurobi.com/iam/licenses/request/\n\nChoose Named-user Academic\n\n\nc)Use the command in the command prompt to generate the licesne. \n\n\n(If not automatically done, place the license in one of the following locations \u201c/opt/gurobi/gurobi.lic\u201d or \u201c$HOME/gurobi.lic\u201d)\n",
                "type": "Text_excerpt",
                "original_header": "Step 1: Installing Gurobi",
                "parent_header": [
                    "IVAN",
                    "Reproducing Testing Experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/README.md"
        },
        {
            "result": {
                "value": "First, make sure you have venv (https://docs.python.org/3/library/venv.html).\nIf venv is not already installed, install it with the following command (Use appropriate python version)\n\n`sudo apt-get install python3.8-venv`\n\n(One can also use other environments such as conda, however we have not tested the experiments on other Python environments) \n\nTo create the virtual environment,\n\n`python3 -m venv env`\n\nThen to enter the virtual environment, run\n\n`source env/bin/activate`\n\nInstall all packages including the compiler with\n\n`pip install -r requirements.txt` \n\nEven if installation of any of the libraries does not work, ignore and continue with the next steps\n",
                "type": "Text_excerpt",
                "original_header": "Step 2: Installing Python dependencies in a virtual environment",
                "parent_header": [
                    "IVAN",
                    "Reproducing Testing Experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "\nSimilar to existing experiments one can easily add new experiments using a unit test. One can add this test in existing test file nnverify/test_pldi.py or can create a new test file.  \nMore information about the adding unittests in python is available here https://docs.python.org/3/library/unittest.html.  \n",
                "original_header": "Adding New Experiments"
            },
            "confidence": 0.9704207068774942,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "First, make sure you have venv (https://docs.python.org/3/library/venv.html).\nIf venv is not already installed, install it with the following command (Use appropriate python version)\n\n`sudo apt-get install python3.8-venv`\n\n(One can also use other environments such as conda, however we have not tested the experiments on other Python environments) \n\nTo create the virtual environment,\n\n`python3 -m venv env`\n\nThen to enter the virtual environment, run\n\n`source env/bin/activate`\n\nInstall all packages including the compiler with\n\n`pip install -r requirements.txt` \n\nEven if installation of any of the libraries does not work, ignore and continue with the next steps\n",
                "type": "Text_excerpt",
                "original_header": "Step 2: Installing Python dependencies in a virtual environment",
                "parent_header": [
                    "IVAN",
                    "Reproducing Testing Experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "Caveats:\n1. The speedup results obtained in the experiment can vary depending on the machine\n\n2. Our experiments run our tool IVAN and the baseline on a fixed number of randomly chosen inputs from the dataset. We report the average speedup on each verification instance. The speedup results in the paper are for count=100. One can change the count=20 to a smaller value for faster run of all experiments. However, the average speedup result may vary depending on this value.\n \n3. Speedups are also dependent on the timeout used for verification. To accurate reproduce the results from the paper, we advise not changing those timeout values otherwise the observed speedups can be less or more than the ones reported in the paper.\n\nInstructions for running experiments:\nA single experiment runs IVAN and the baseline for verifying a set of properties on a fixed network and fixed type of modification.  \n\nOne can run a single experiment from the test using the following command. This will take about 1 to 2 hours. \n\n`python3 -m unittest -v nnverify.tests.test_pldi.TestIVAN.test1`\n\nRunning the experiment will result in following console output\n\nThe following part of the console output present the verifier name, network name, number of inputs in the experiment and the timeout for the verification.\n```\ntest1 (nnverify.tests.test_pldi.TestIVAN) ... Running IVAN on the original network\nRunning on the network:  nnverify/nets/mnist-net_256x2.onnx\nNumber of verification instances:  100\nTimeout of verification:  100\n```\n\nThere are 4 possible outcomes of verification that are also printed on the console\n\n    `VERIFIED` - The robustness property is verified\n    `ADV_EXAMPLE` - The verifier found a adversarial example for the property\n    `MISS_CLASSIFIED` - DNN missclassified the input. This is a trivial counter-example for the property\n    `UNKNOWN` - The verifier timed out\n    \n\nAll experiments in the paper consider multiple combinations of networks and network perturbations for evaluating IVAN\u2019s effectiveness in verification compared to the baseline. The goal of experiments is to compute IVAN\u2019s speedup over the baselines. \n \nAll experiment unit tests are located in nnverify/test_pldi.py. All tests can be run using the following command. \n\n`python3 -m unittest -v nnverify.tests.test_pldi.TestIVAN`\n\nThe total running time for these tests is about 20 hours. Table 2, Figures 6, and 7 are the results of these experiments. \n\n\nHow to see the speedup results\nThe results are printed at stdout. But it is easier to check them in the file results/proof_transfer.csv at the end of the execution. In The csv file each experiment result is summarized in 3 lines, including speedup and extra properties verified. \n\n\n\nThis includes information about \na) time of the experiment b) network name c) network update type d) Number of verification instances e) time taken by IVAN and baseline f) proof tree size by IVAN and the baseline g) extra properties verified by IVAN compared to the baseline  \n\n\nResults with following details are also pickled in results/pickle/ directory. This includes for i) time taken ii) verification output iii) proof tree size\n\nThe ablation study experiments (Table 2) from the paper are also included in the same file. One can run those experiments in the following cases:\n\n\nReuse \u2192  `python3 -m unittest -v nnverify.tests.test_pldi.TestReuse`\n\nReorder \u2192 `python3 -m unittest -v nnverify.tests.test_pldi.TestReorder`\n  \n\nSimilar to the previous case, the runtime is roughly 20 hours and can be made smaller by decreasing the count of verification instances.\n\n\nHyperparameter sensitivity experiments (Figure 8) can be performed using  \t\n\n`python3 -m unittest -v nnverify.tests.test_pldi.TestSensitivity`\n\n",
                "type": "Text_excerpt",
                "original_header": "Step 3: Running experiments",
                "parent_header": [
                    "IVAN",
                    "Reproducing Testing Experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "IVAN"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2304.01874"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/uiuc-focal-lab/IVAN/main/README.md"
        }
    ]
}