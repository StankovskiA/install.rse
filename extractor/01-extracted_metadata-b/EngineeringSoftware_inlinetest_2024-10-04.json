{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:15:12"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/EngineeringSoftware/inlinetest",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "EngineeringSoftware",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-07-26T18:54:59Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-06-24T22:16:23Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "The MIT License (MIT)\nCopyright \u00a9 2022 Team I-Test\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \u201cSoftware\u201d), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/LICENSE.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Tests that check correctness of a single statement",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "This repo contains the code and data for producing the experiments in\n[Inline Tests][paper-url].  In this work, we proposed a new type of\ntests, inline tests, which reside below unit tests in the hierarchy of\ntest types.  Inline tests can be used to test the code on the\nstatement level. We implemented I-Test framework for developers to\nwrite inline tests in Java and Python. I-Test framework has been\nintegrated with popular testing frameworks pytest and Junit. \n\nThe code includes:\n* I-Test framework for Java\n* scripts for collecting and filtering examples suitable for writing inline tests\n* scripts for evaluating the performance of I-Test\n\nThe data includes:\n* the 50 Python examples and 50 Java examples with our written inline tests\n* results of performance evaluation (on our machine)\n* the documents used in our user study\n* anonymized results of our user study\n\n\n**How to...**\n* **install I-Test and the environment for replicating our study**: see detailed steps in [INSTALL.md](/INSTALL.md)\n* **replicate our performance evaluation of I-Test**: see detailed steps in [REPLICATION.md](/REPLICATION.md)\n* **replicate other parts of our paper, e.g., collecting examples and user study**: we already described the steps in the paper, and you may find the documents and intermediate files for those in this repository; see the remainder of this README for more details\n",
                "type": "Text_excerpt",
                "original_header": "Introduction",
                "parent_header": [
                    "Inline tests"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- [java](/java): code of I-Test framework for Java\n- [research](/research): scripts for our experiments\n- data\n  - [examples](/data/examples): 50 Python and 50 Java examples with our written inline tests\n  - [exp](/data/exp): the configurations for running performance evaluation experiments\n  - [patches](/data/patches): the patches used in performance evaluation experiments, to integrated inline tests into open-source projects\n  - [projects](/data/projects) and [projects-used](/data/projects-used): the list of top-100 starred open-source GitHub projects that we used to search for statements under test\n  - [scripts](/data/scripts): the scripts used in performance evaluation experiments, for preparing environment and executing the unit tests or inline tests in open-source projects\n- [results](/results): directory for storing the results of running performance evaluation experiments; used in the [replication guide](/REPLICATION.md)\n- [results-ours](/results-ours): the results of performance evaluation on our machine\n- userstudy\n  - [content](/userstudy/content): the package we send to each participant in our user study\n  - [response](/userstudy/response): anonymized responses collected of our user study\n- [appendix.pdf](/appendix.pdf): an appendix that describes:\n  - A: the detailed procedure of searching for statements under test in open-source projects\n  - B: API of I-Test framework\n  - C: analysis of user study responses \n",
                "original_header": "Repo structure"
            },
            "confidence": 0.9141046173905796,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "inlinetest",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "EngineeringSoftware/inlinetest",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/EngineeringSoftware/inlinetest/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/EngineeringSoftware/inlinetest/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 12,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "inline, methodology, single, statement, testing, tests",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 3,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/EngineeringSoftware/inlinetest/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 183661
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 156853
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 59447
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 1660
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/EngineeringSoftware/inlinetest/releases/75733814",
                "tag": "ase22-ae-r",
                "name": "For ASE'22 Artifact Evaluation (Rebuttal)",
                "author": {
                    "name": "pengyunie",
                    "type": "User"
                },
                "tarball_url": "https://api.github.com/repos/EngineeringSoftware/inlinetest/tarball/ase22-ae-r",
                "zipball_url": "https://api.github.com/repos/EngineeringSoftware/inlinetest/zipball/ase22-ae-r",
                "html_url": "https://github.com/EngineeringSoftware/inlinetest/releases/tag/ase22-ae-r",
                "url": "https://api.github.com/repos/EngineeringSoftware/inlinetest/releases/75733814",
                "release_id": 75733814,
                "date_created": "2022-08-30T06:35:01Z",
                "date_published": "2022-08-30T07:17:12Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/EngineeringSoftware/inlinetest/releases/73604411",
                "tag": "ase22-ae",
                "name": "For ASE'22 Artifact Evaluation",
                "author": {
                    "name": "pengyunie",
                    "type": "User"
                },
                "tarball_url": "https://api.github.com/repos/EngineeringSoftware/inlinetest/tarball/ase22-ae",
                "zipball_url": "https://api.github.com/repos/EngineeringSoftware/inlinetest/zipball/ase22-ae",
                "html_url": "https://github.com/EngineeringSoftware/inlinetest/releases/tag/ase22-ae",
                "url": "https://api.github.com/repos/EngineeringSoftware/inlinetest/releases/73604411",
                "release_id": 73604411,
                "date_created": "2022-08-04T04:39:13Z",
                "date_published": "2022-08-04T05:00:35Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/Dockerfile"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "# Installation Guide\n\nI-Test currently supports two programming languages, Python and Java.\n\nWe provide two options to install the required software for running\nI-Test and our scripts:\n1. use [docker][sec-docker]\n2. install to [local environment][sec-local]. \n\n## Use Docker\n[sec-docker]: #use-docker\n\nWe provide a Docker image pre-installed with all required software\n(conda, sdkman, texlive) and is ready to be used to replicate all\nexperiments in this artifact.  Please ensure at least 20GB of disk\nspace to download the image and run experiments.\n\nIf you haven't, please install Docker Engine following the\ninstructions here: [Install Docker Engine][docker-webpage].\n\nThen, you can download our image by running\n```\ndocker pull pipiyuyu/inlinetests:latest\n```\n\nYou can start the container by running\n```\ndocker run -it -m 4g pipiyuyu/inlinetests /bin/bash\n```\n\nThis will drop you into the docker image's terminal at\n`/home/itdocker`.  All content of this repo (on the latest release\nversion) is located there.  \n\nTo run something using sudo, the password is `itdocker`\n\n\n## Install to Local Environment\n[sec-local]: #install-to-local-environment\n\nWe utilize the package management systems\n([conda][conda-webpage] for Python and [sdkman][sdkman-webpage] for\nJava) to install the necessary dependencies for I-Test itself, for our\nexperiment scripts, and for running the unit tests of other\nopen-source projects in our integrated experiments.\n\nThis document will guide you through the following steps (with some\nusage examples to verify if the installation is successful):\n- install the package management systems\n- install the I-Test framework\n- install the environment for running our experiment scripts\n\n\n### System Requirements\n\nThe minimum requirements for replicating our experiments are:\n- a Linux operating system (MacOS not guaranteed to work)\n- at least 10GB of free disk space\n\nNote that I-Test framework itself is not limited to Linux; we have\ntested the I-Test framework on a MacOS machine (with MacOS 10.15.7).\nHowever, a part of our experiment scripts uses Bash and relies on\nLinux-specific grammars.\n\nFor your reference, we used the machine with the following specs to\nrun experiments:\n- Intel Core i7-11700K @ 3.60GHz (8 cores, 16 threads) CPU\n- 64 GB RAM\n- Ubuntu 20.04 operating system\n\n\n### Installing Package Management Systems\n\nThe two package management systems we use, [conda][conda-webpage] and\n[sdkman][sdkman-webpage], can both be installed in user mode (i.e.,\ndoes not require sudo).  To install each of them, you will need to\nexecute some commands AND configure your `.bashrc` appropriately, and\nthen restart the terminal for the changes to take effect.  If you\nhappen to have existing installations of (a recent version of) either\npackage management system, you do not need to install it again.\n\n*Note*: you don't have to install Python and Java on your own, as our\nscripts will automatically install the correct version of them using\nconda and sdkman.\n\n#### conda for Python\n\n1. Download the Miniconda installation script from\n   [here](https://docs.conda.io/en/latest/miniconda.html#latest-miniconda-installer-links);\n   pick the correct link according to your CPU architecture (usually\n   \"Miniconda3 Linux 64-bit\", but for ARM should be \"Miniconda3\n   Linux-aarch64 64-bit\").\n   For example:\n```\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n```\n\n(Installing Anaconda is also fine, which is bundled with some\nlibraries that we don't need.)\n\n2. Execute the downloaded script, and follow the prompts on the\n   terminal to install conda at the desired location. For example:\n\n```\nbash Miniconda3-latest-Linux-x86_64.sh\n```\n\n3. If not already done at the end of the last step, run `conda init` which automatically changes your `.bashrc` file to use conda.\n\n4. Restart your terminal. By executing `conda --version`, you should be able to see the version of conda you just installed.\n\n\n#### sdkman for Java\n\n1. Execute the following command, and follow the prompts on the\n   terminal to install sdkman.\n\n```\ncurl -s \"https://get.sdkman.io\" | bash\n```\n\n2. Restart your terminal. By executing `sdk version`, you should be able to see the version of sdkman you just installed.\n\n\n### Installing the I-Test Framework\n\n#### Python 3.6+\n\n1. Change directory to \"python\". Assuming you were at the root of this\n   repository: `cd python`\n\n2. Execute `./prepare-conda-env.sh`\n\n3. Execute `conda activate inline-dev`\n\n4. You should be able to see \"(inline-dev) \" as the prefix of the\n   prompt in your terminal. Then, to further check if installation is\n   successful, you can run the tests for the I-Test framework in\n   Python: `pytest`\n\n* Trouble shooting: if you get error \"CondaEnvironmentError: cannot\n  remove current environment. deactivate and run conda remove again\",\n  please run `conda deactivate` to exit the inline-dev environment,\n  then try again.\n\n#### Java 8\n\n1. Change directory to \"java\". Assuming you were at the root of this\n   repository: `cd java`\n\n2. Execute `./install.sh`\n\n3. During the installation in the previous step, we actually already\n   run the tests for the I-Test framework in Java.  You can also run\n   these tests again to double-check if the installation is\n   successful: `sdk use java 8.0.302-open; sdk use maven 3.8.3; mvn test`\n\n\n### Installing the Environment for Experiment Scripts\n\n1. Change directory to \"research\". Assuming you were at the root of\n   this repository: `cd research`\n\n2. Execute `./prepare-conda-env.sh`\n\n3. Execute `conda activate inline-research`\n\n4. You should be able to see \"(inline-dev) \" as the prefix of the\n   prompt in your terminal. Then, to further check if installation is\n   successful, you can run the script for running the inline tests in\n   the 50 Python example files and 50 Java example files:\n\n```\npython -m research.exp_standalone run --language=python --requests_file=../data/exp/standalone/python.yaml --run_dir=../data/examples/python --out_dir=/tmp/inlinetest-smoke/python --force=True\npython -m research.exp_standalone run --language=java --requests_file=../data/exp/standalone/java.yaml --run_dir=../data/examples/java --out_dir=/tmp/inlinetest-smoke/java --force=True\n```\n\nFor both of the previous commands, you should see a progress bar that ends at \"running: 100% ... 50/50 ...\", without warning or error messages.\n\n\n* Trouble shooting: if you get error \"CondaEnvironmentError: cannot\n  remove current environment. deactivate and run conda remove again\",\n  please run `conda deactivate` to exit the inline-dev environment,\n  then try again.\n\n\n[docker-webpage]: https://docs.docker.com/engine/install/\n[conda-webpage]: https://docs.conda.io/en/latest/\n[sdkman-webpage]: https://sdkman.io/\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/INSTALL.md"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/research/prepare-conda-env.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/java/install.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/userstudy/content/prepare-conda-env.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/userstudy/content/package.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/examples/python/prepare-env.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/examples/python/run-only.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/examples/java/prepare-env.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/examples/java/run-only.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/mitmproxy_mitmproxy/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/mitmproxy_mitmproxy/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/mitmproxy_mitmproxy/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/mitmproxy_mitmproxy/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/mitmproxy_mitmproxy/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/numpy_numpy/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/numpy_numpy/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/numpy_numpy/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/numpy_numpy/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/numpy_numpy/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/joke2k_faker/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/joke2k_faker/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/joke2k_faker/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/joke2k_faker/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/joke2k_faker/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/google-research_bert/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/google-research_bert/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/google-research_bert/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/google-research_bert/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/google-research_bert/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/bokeh_bokeh/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/bokeh_bokeh/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/bokeh_bokeh/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/bokeh_bokeh/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/bokeh_bokeh/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/bokeh_bokeh/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/geekcomputers_Python/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/geekcomputers_Python/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/geekcomputers_Python/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/Textualize_rich/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/Textualize_rich/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/Textualize_rich/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/Textualize_rich/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/Textualize_rich/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/default/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/default/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/default/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pypa_pipenv/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pypa_pipenv/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pypa_pipenv/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pypa_pipenv/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pypa_pipenv/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/chubin_cheat.sh/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/chubin_cheat.sh/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/chubin_cheat.sh/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/chubin_cheat.sh/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/chubin_cheat.sh/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pandas-dev_pandas/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pandas-dev_pandas/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pandas-dev_pandas/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pandas-dev_pandas/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/pandas-dev_pandas/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/RaRe-Technologies_gensim/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/RaRe-Technologies_gensim/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/RaRe-Technologies_gensim/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/RaRe-Technologies_gensim/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/RaRe-Technologies_gensim/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/davidsandberg_facenet/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/davidsandberg_facenet/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/davidsandberg_facenet/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/davidsandberg_facenet/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/davidsandberg_facenet/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/davidsandberg_facenet/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/psf_black/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/psf_black/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/psf_black/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/psf_black/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/psf_black/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/scrapy_scrapy/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/scrapy_scrapy/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/scrapy_scrapy/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/scrapy_scrapy/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/python/scrapy_scrapy/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/skylot_jadx/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/skylot_jadx/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/skylot_jadx/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/skylot_jadx/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/skylot_jadx/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_dubbo/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_dubbo/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_dubbo/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_dubbo/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_dubbo/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_shardingsphere/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_shardingsphere/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_shardingsphere/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_shardingsphere/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_shardingsphere/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/jenkinsci_jenkins/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/jenkinsci_jenkins/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/jenkinsci_jenkins/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/jenkinsci_jenkins/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/jenkinsci_jenkins/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_kafka/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_kafka/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_kafka/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_kafka/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/apache_kafka/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_nacos/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_nacos/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_nacos/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_nacos/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_nacos/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/default/prepare-env-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/default/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/default/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_fastjson/test-unit.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_fastjson/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_fastjson/prepare-env-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_fastjson/test-vanilla.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/data/scripts/java/alibaba_fastjson/test-inline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "The string manipulation (Line 12) in this code snippet takes the original String `titleStr`, removes all newline characters, replaces any sequences of multiple spaces with a single space, and trims any leading or trailing whitespace. `titleStr` is updated to be a more uniform string with single spaces separating words and no extraneous whitespace at the beginning or end.\nThe inline test (Line 13) that we write for target statement (Line 12) consists of three parts:\n- Declaration with itest() constructor\n- Assigning inputs with given() function calls\n- Specifying test oracles with check_*() function calls\n\n```java\nimport static org.inlinetest.ITest.itest;\n\npublic class Example {\n  protected void onAttachedToWindow() {\n    VoIPService service = VoIPService.getSharedInstance();\n    if (service != null && service.groupCall != null) {\n      String titleStr;\n      if (!TextUtils.isEmpty(service.groupCall.call.title)) {\n        titleStr = service.groupCall.call.title;\n      } else {\n        titleStr = service.getChat().title;\n      }\n      if (titleStr != null) {\n        titleStr = titleStr.replace(\"\\n\", \" \").replaceAll(\" +\", \" \").trim();\n        itest().given(titleStr, \"I am a Title\\n\\nAnd:  Subtitle\\n\").checkEq(titleStr, \"I am a Title And: Subtitle\");\n      }\n    }\n  } \n}\n```\n\nTo run the inline test, we need to install I-Test framework, which requires Java 8 and Maven. The script of installing Java 8, Maven and I-Test is [here](/java/install.sh). Execute `./install.sh` to install them.\n\nIf you already have Java 8 and Maven installed, you can install I-Test framework with the following command:\n```bash\ncd java\nmvn install\n```\n\nAfter installing I-Test framework, we can run the inline test by running the following command from the root directory of this repository:\n```bash\nproj_path=${PWD}\ncd ${PWD}/data/examples/readme\nbash ${proj_path}/data/examples/java/run-only.sh $path_to_ITest_jar $path_to_example_file\n```\nIn this example, the path to I-Test jar is\n`${proj_path}/java/target/inlinetest-1.0.jar` and the path to example\nfile is `Example` (without extension of .java).\n",
                "type": "Text_excerpt",
                "original_header": "Java",
                "parent_header": [
                    "Inline tests",
                    "Examples"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        },
        {
            "result": {
                "value": "The tool for python is available as a plugin [pytest-inline](https://github.com/pytest-dev/pytest-inline) for pytest. Refer to the [README](https://github.com/pytest-dev/pytest-inline/blob/main/README.md) for installation and usage.\n",
                "type": "Text_excerpt",
                "original_header": "Python",
                "parent_header": [
                    "Inline tests",
                    "Examples"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        },
        {
            "result": {
                "value": "If you want to add additional subjects to our standalone/integrated\nexperiments, please follow these steps:\n",
                "type": "Text_excerpt",
                "original_header": "Including more examples to our experiments",
                "parent_header": [
                    "Inline tests"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        },
        {
            "result": {
                "value": "1. Add standalone code with inline tests to the `/data/examples/$lang`\n   directory (with `$lang$` being `python` or `java`).\n\n2. Append the name of the added file to `/data/exp/standalone/$lang.yaml`.\n\nThat's it. The next time you run the standalone experiments, these new\nexamples should be included.\n\n",
                "type": "Text_excerpt",
                "original_header": "To include standalone examples",
                "parent_header": [
                    "Inline tests",
                    "Including more examples to our experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        },
        {
            "result": {
                "value": "Adding integrated examples is a bit harder, as you need to first\nproperly configure the environment (figuring out the build script,\ninstalling required dependencies using conda/sdkman) for running the\nunit tests in the subject project.  You also need to figure out how to\ninstall inlinetest (for Python/Java) into that environment.  Once you\nfigure out these, include the example by:\n\n1. Add the metadata of the subject project (must include full_name,\n   url, revision, and default_branch) into\n   `/data/projects-used/$lang.yaml`.\n\n2. Create a directory with the full_name of the subject project under\n   `/data/scripts/$lang/`. Now under that directory, you need to\n   prepare up to 6 Bash scripts (please check the scripts for other\n   projects under that directory for examples):\n\n  - prepare-env-vanilla.sh: for configuring the environment for\n    running vanilla unit tests.\n\n  - prepare-env-inline.sh: for configuring the environment for running\n    unit tests + inline tests.\n\n  - build.sh (optional): for building the subject project, which is a\n    script shared by both vanilla environment and unit+inline\n    environment.\n\n  - test-vanilla.sh: for running vanilla unit tests.\n\n  - test-unit.sh: for running unit tests under the unit+inline\n    environment (when inline tests are added).\n\n  - test-inline.sh: for running inline tests under the unit+inline\n    environment (when inline tests are added).\n\n3. Add a patch (in unidiff format, usually obtained by `diff -u` or\n   `git diff`) for the inline test you want to add to the subject\n   project to `/data/patches/$lang/examples/`.\n\n4. If installing inlinetest into the subject project requires\n   modifying some build script (e.g., `pom.xml`), you need to add a\n   patch for doing that to `/data/patches/$lang/projects/`, named\n   `$full_name.patch`.\n\n5. Append the project name and the name(s) of the inline test\n   patch(es) to `/data/exp/integrated/$lang.yaml`.\n\nThat's it for adding integrated examples. You may want to run the\nintegrated examples script with `--only=[$full_name]` option to only\nrun the new project you added.  If any script failed, you can check\nthe logs by doing `python -m research.exp_integrated view_result\n--results_file=../results/exp/integrated/$lang/4-1/$full_name.json`\n(modify the results file path accordingly), and fix the\nscripts/patches as needed.\n",
                "type": "Text_excerpt",
                "original_header": "To include integrated examples",
                "parent_header": [
                    "Inline tests",
                    "Including more examples to our experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you have used I-Test in a research project, please cite the research paper in any related publication:\n\nTitle: [Inline Tests](https://dl.acm.org/doi/abs/10.1145/3551349.3556952)\n\nAuthors: [Yu Liu](https://sweetstreet.github.io/), [Pengyu Nie](https://pengyunie.github.io/), [Owolabi Legunsen](https://mir.cs.illinois.edu/legunsen/), [Milos Gligoric](http://users.ece.utexas.edu/~gligoric/)\n\n```bibtex\n@inproceedings{LiuASE22InlineTests,\n  title =        {Inline Tests},\n  author =       {Yu Liu and Pengyu Nie and Owolabi Legunsen and Milos Gligoric},\n  pages =        {1--13},\n  booktitle =    {International Conference on Automated Software Engineering},\n  year =         {2022},\n}\n```\n\nTitle: [pytest-inline][paper-url]\n\nAuthors: [Yu Liu](https://sweetstreet.github.io/), [Zachary Thurston](), [Alan Han](), [Pengyu Nie](https://pengyunie.github.io/), [Milos Gligoric](http://users.ece.utexas.edu/~gligoric/), [Owolabi Legunsen](https://mir.cs.illinois.edu/legunsen/)\n\n```bibtex\n@inproceedings{LiuICSE23PytestInline,\n  title =        {pytest-inline: An Inline Testing Tool for Python},\n  author =       {Yu Liu and Zachary Thurston and Alan Han and Pengyu Nie and Milos Gligoric and Owolabi Legunsen},\n  pages =        {1--4},\n  booktitle =    {International Conference on Software Engineering, DEMO},\n  year =         {2023},\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "Inline tests"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{LiuASE22InlineTests,\n    year = {2022},\n    booktitle = {International Conference on Automated Software Engineering},\n    pages = {1--13},\n    author = {Yu Liu and Pengyu Nie and Owolabi Legunsen and Milos Gligoric},\n    title = {Inline Tests},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Inline Tests",
                "author": "Yu Liu and Pengyu Nie and Owolabi Legunsen and Milos Gligoric"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{LiuICSE23PytestInline,\n    year = {2023},\n    booktitle = {International Conference on Software Engineering, DEMO},\n    pages = {1--4},\n    author = {Yu Liu and Zachary Thurston and Alan Han and Pengyu Nie and Milos Gligoric and Owolabi Legunsen},\n    title = {pytest-inline: An Inline Testing Tool for Python},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "pytest-inline: An Inline Testing Tool for Python",
                "author": "Yu Liu and Zachary Thurston and Alan Han and Pengyu Nie and Milos Gligoric and Owolabi Legunsen"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Inline tests"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/inlinetest/main/README.md"
        }
    ]
}