{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 22:41:35"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/mast-group/mineSStuBs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "mast-group",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-02-07T05:19:03Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-02-06T18:30:23Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Hosts our tool for mining simple \"stupid'' bugs (SStuBs).",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The ManySStuBs4J corpus is a collection of simple fixes to Java bugs, designed for evaluating program repair techniques.\\\nWe collect all bug-fixing changes using the SZZ heuristic, and then filter these to obtain a data set of small bug fix changes.\\\nThese are single statement fixes, classified where possible into one of 16 syntactic templates which we call SStuBs.\\\nThe dataset contains simple statement bugs mined from open-source Java projects hosted in GitHub.\\\nThere are two variants of the dataset. One mined from the 100 Java Maven Projects and one mined from the top 1000 Java Projects.\\\nA project's popularity is determined by computing the sum of z-scores of its forks and watchers.\\\nWe kept only bug commits that contain only single statement changes and ignore stylistic differences such as spaces or empty as well as differences in comments.\\\nSome single statement changes can be caused by refactorings, like changing a variable name rather than bug fixes.\\\nWe attempted to detect and exclude refactorings such as variable, function, and class renamings, function argument renamings or changing the number of arguments in a function.\\\nThe commits are classified as bug fixes or not by checking if the commit message contains any of a set of predetermined keywords such as bug, fix, fault etc.\\\nWe evaluated the accuracy of this method on a random sample of 100 commits that contained SStuBs from the smaller version of the dataset and found it to achieve a satisfactory 94% accuracy.\\\nThis method has also been used before to extract bug datasets (Ray et al., 2015; Tufano et al., 2018) where it achieved an accuracy of 96% and 97.6% respectively.\\\n\\\nThe bugs are stored in a JSON file (each version of the dataset has each own instance of this file).\\\nAny bugs that fit one of 16 patterns are also annotated by which pattern(s) they fit in a separate JSON file (each version of the dataset has each own instance of this file).\\\nWe refer to bugs that fit any of the 16 patterns as simple stupid bugs (SStuBs). \n",
                "original_header": "About the Dataset"
            },
            "confidence": 0.9926502319731979,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The \"sourceBeforeFix\", \"sourceAfterFix\", \"patch\" fields help humans to understand the change.\\\nThe \"sourceBeforeFix\", \"sourceAfterFix\", \"patch\" fields are currently not available for the Missing Throws Exception and Delete Throws Exception patterns due to a bug.\\\nWe have fixed this and we will provide an updated version.\\\nThe \"bugLineNum\", \"bugNodeStartChar\", \"bugNodeLength\", \"fixLineNum\", \"fixNodeStartChar\", and \"fixNodeLength\" allow pinpointing of the AST nodes and lines that contained the bug and their equivalent ones in the  fixed version of the file. \n",
                "original_header": "JSON Fields"
            },
            "confidence": 0.9202219485079095,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "mineSStuBs",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "mast-group/mineSStuBs",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/mast-group/mineSStuBs/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/mast-group/mineSStuBs/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 35,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 18,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/mast-group/mineSStuBs/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 176499
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 6913
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 107
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/GitHubScripts/downloadGitHubDump.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "run": [
        {
            "result": {
                "value": "A precompiled version of the tool is available in the file miner.jar taht contains all the required dependencies.\nIt can easily be run via the following command:\n```\njava -jar miner.jar PROJECTS_DIR DATASET_SAVE_DIR\n```\nPROJECTS_DIR must point to directory containing the Java repositories for mining.\nDATASET_SAVE_DIR must point to the directory in which the dataset will be saved.\n",
                "type": "Text_excerpt",
                "original_header": "Running the tool"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "The tool can also easily be installed and built from source via maven.\\\nMaven will download all the required dependencies.\\\nMany thanks to Martin Monperrus for his help with this.\\\n**Important: A Maven version >= 3.2.3 is required since 15 January 2020 and onwards**\\\nMaven will download the dependencies and build the project with the command:\n```\nmvn compile\n```\nTo run the tool you can use the following command:\n```\nmvn exec:java -Dexec.mainClass=uk.ac.ed.inf.mpatsis.sstubs.mining.SStuBsMiner -Dexec.args=\"$PROJECTS_DIR DATASET_SAVE_DIR\"\n```\nPROJECTS_DIR must point to directory containing the Java repositories for mining.\nDATASET_SAVE_DIR must point to the directory in which the dataset will be saved.\n\n",
                "type": "Text_excerpt",
                "original_header": "Installation via Maven"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "100 Java Maven Project Bugs\t\t\t\tbugs.json\\\n1000 Java Project Bugs\t\t\t\t\tbugsLarge.json\\\n100 Java Maven Project SStuBs\t\t\t\tsstubs.json\\\n1000 Java Project SStuBs\t\t\t\tsstubsLarge.json\\\n\\\nDue to a bug zenodo returns an error when uploading json files.\\\nThe .json suffix can be restored by simply renaming the files (e.g. bugs -> bugs.json). \n",
                "original_header": "Files"
            },
            "confidence": 0.9999872219010079,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "The Corpus can be downloaded via [Zenodo](https://doi.org/10.5281/zenodo.3653444).\\\nThe ManySStuBs4J Corpus is an automatically mined collection of Java bugs at large-scale.\\\nWe note that the automatic extraction could potentially insert some noise. \\\nHowever, the amount of inserted noise is deemed to be almost negligible (see about).\\\nWe also note that the code of the Java projects is not ours but is open-source. \\\nPlease respect the license of each project.\n\nThe corpus was collected for the work related to:\n\n@inproceedings{ManySStuBs4JCorpus2019,\\\n\tauthor={Karampatsis, Rafael-Michael and Sutton, Charles},\\\n\ttitle={{How Often Do Single-Statement Bugs Occur? The ManySStuBs4J Dataset}},\\\n\tbooktitle={},\\\n\tyear={2019},\\\n\tpages={},\\\n\torganization={}\\\n}\n",
                "type": "Text_excerpt",
                "original_header": "Use",
                "parent_header": [
                    "About the Dataset"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "A quick overview of each SStuB pattern follows along with an example from the dataset ",
                "type": "Text_excerpt",
                "original_header": "Examples for Each SStuB Pattern"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether an identifier appearing in some expression in the statement was replaced with an other one.\nIt is easy for developers to by accident utilize a different\nidentifier than the intended one that has the same type.\nCopy pasting code is a potential source of such errors.\nIdentifiers with similar names may further contribute to the occurrence of such errors.\\\n**Change Identifier Used** example patch:\n```diff\ndiff --git a/common/src/main/java/com/google/auto/common/MoreTypes.java b/common/src/main/java/com/google/auto/common/MoreTypes.java\nindex d0f40a9..1319092 100644\n--- a/common/src/main/java/com/google/auto/common/MoreTypes.java\n+++ b/common/src/main/java/com/google/auto/common/MoreTypes.java\n@@ -738,7 +738,7 @@\n    * Returns a {@link WildcardType} if the {@link TypeMirror} represents a wildcard type or throws\n    * an {@link IllegalArgumentException}.\n    */\n-  public static WildcardType asWildcard(WildcardType maybeWildcardType) {\n+  public static WildcardType asWildcard(TypeMirror maybeWildcardType) {\n     return maybeWildcardType.accept(WildcardTypeVisitor.INSTANCE, null);\n   }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Change Identifier Used",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern Checks whether a numeric literal was replaced with another one. \nIt is easy for developers to mix two numeric values in their program.\\\n**Change Numeric Literal** example patch:\n```diff\ndiff --git a/components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java b/components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java\nindex dcd3a02..1d25f25 100644\n--- a/components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java\n+++ b/components/camel-pulsar/src/test/java/org/apache/camel/component/pulsar/PulsarConcurrentConsumerInTest.java\n@@ -90,12 +90,12 @@\n     }\n \n     private PulsarClient concurrentPulsarClient() throws PulsarClientException {\n-        return new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(2).listenerThreads(5).build();\n+        return new ClientBuilderImpl().serviceUrl(getPulsarBrokerUrl()).ioThreads(5).listenerThreads(5).build();\n     }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Change Numeric Literal",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether a Boolean literal was replaced.\nTrue is replaced with False and vice-versa. \nIn many cases developers use the opposite Boolean value than the intended one.\\\n**Change Boolean Literal** example patch:\n```diff\ndiff --git a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\nindex 3ed3a24..382ed68 100644\n--- a/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n+++ b/components/camel-sjms/src/main/java/org/apache/camel/component/sjms/jms/JmsObjectFactory.java\n@@ -88,7 +88,8 @@\n             String messageSelector, \n             boolean topic, \n             String durableSubscriptionId) throws Exception {\n-        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, true);\n+        // noLocal is default false accordingly to JMS spec\n+        return createMessageConsumer(session, destinationName, messageSelector, topic, durableSubscriptionId, false);\n     }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Change Boolean Literal",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether a variable, function, or class was declared with the wrong modifiers. \nFor example a developer can forget to declare one of the modifiers.\\\n**Change Modifier** example patch:\n```diff\ndiff --git a/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java b/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java\nindex 67f89b8..c3b3ebf 100644\n--- a/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java\n+++ b/src/test/java/com/puppycrawl/tools/checkstyle/BaseCheckTestSupport.java\n@@ -100,7 +100,7 @@\n                 + filename).getCanonicalPath();\n     }\n \n-    protected void verifyAst(String expectedTextPrintFileName, String actualJavaFileName)\n+    protected static void verifyAst(String expectedTextPrintFileName, String actualJavaFileName)\n             throws Exception {\n         verifyAst(expectedTextPrintFileName, actualJavaFileName, false);\n     }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Change Modifier",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether the wrong function was called. \nFunctions with similar names and the same signature are usual pitfall for developers.\\\n**Wrong Function Name** example patch:\n```diff\ndiff --git a/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java b/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\nindex f28c614..f295bd3 100644\n--- a/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\n+++ b/modules/DesktopDataLaboratory/src/main/java/org/gephi/desktop/datalab/ConfigurationPanel.java\n@@ -130,7 +130,7 @@\n     }\n \n     private boolean canChangeTimeRepresentation(GraphModel graphModel) {\n-        if (graphModel.getGraph().getEdgeCount() > 0) {\n+        if (graphModel.getGraph().getNodeCount() > 0) {\n             return false;//Graph has to be empty\n         }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Wrong Function Name",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether an overloaded version of the function with more arguments was called. \nFunctions with multiple overload can often confuse developers.\\\n**Same Function More Args** example patch:\n```diff\ndiff --git a/ee/src/main/java/org/jboss/as/ee/component/ComponentDescription.java b/ee/src/main/java/org/jboss/as/ee/component/ComponentDescription.java\nindex f9b99d2..76f83cc 100644\n--- a/ee/src/main/java/org/jboss/as/ee/component/ComponentDescription.java\n+++ b/ee/src/main/java/org/jboss/as/ee/component/ComponentDescription.java\n@@ -543,7 +543,7 @@\n                     configuration.getModuleName(),\n                     configuration.getApplicationName()\n             );\n-            injectionConfiguration.getSource().getResourceValue(serviceBuilder, context, managedReferenceFactoryValue);\n+            injectionConfiguration.getSource().getResourceValue(resolutionContext, serviceBuilder, context, managedReferenceFactoryValue);\n         }\n     }\n }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Same Function More Args",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether an overloaded version of the function with less arguments was called. \nFor instance, a developer can forget to specify one of the arguments and not realize it if the code still compiles due to function overloading.\\\n**Same Function Less Args** example patch:\n```diff\ndiff --git a/src/main/java/com/zaxxer/hikari/pool/HikariPool.java b/src/main/java/com/zaxxer/hikari/pool/HikariPool.java\nindex 19b49e7..3a87b7f 100644\n--- a/src/main/java/com/zaxxer/hikari/pool/HikariPool.java\n+++ b/src/main/java/com/zaxxer/hikari/pool/HikariPool.java\n@@ -167,7 +167,7 @@\n             final long now = clockSource.currentTime();\n             if (poolEntry.evict || (clockSource.elapsedMillis(poolEntry.lastAccessed, now) > ALIVE_BYPASS_WINDOW_MS && !isConnectionAlive(poolEntry.connection))) {\n                closeConnection(poolEntry, \\\"(connection evicted or dead)\\\"); // Throw away the dead connection and try again\n-               timeout = hardTimeout - clockSource.elapsedMillis(startTime, now);\n+               timeout = hardTimeout - clockSource.elapsedMillis(startTime);\n             }\n             else {\n                metricsTracker.recordBorrowStats(poolEntry, startTime);\n```\n",
                "type": "Text_excerpt",
                "original_header": "Same Function Less Args",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether in a function call expression the caller object for it was replaced with another one.\nWhen there are multiple variables with the same type a developer can accidentally perform an operation.\nCopy pasting code is a potential source of such errors.\nVariables with similar names can also further contribute to the occurrence of such errors.\\\n**Same Function Change Caller** example patch:\n```diff\ndiff --git a/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java b/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\nindex e9d1b4e..4f8601e\n--- a/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\n+++ b/metrics-servlet/src/test/java/com/yammer/metrics/reporting/tests/AdminServletTest.java\n@@ -42,7 +42,7 @@\n \n     @Before\n     public void setUp() throws Exception {\n-        when(context.getContextPath()).thenReturn(\\\"/context\\\");\n+        when(request.getContextPath()).thenReturn(\\\"/context\\\");\n \n         when(config.getServletContext()).thenReturn(context);\n```\n",
                "type": "Text_excerpt",
                "original_header": "Same Function Change Caller",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether a function was called with two of its arguments swapped. \nWhen multiple arguments of a function are of the same type, if developers do not accurately remember what each argument represents then they can easily swap two such arguments without realizing it.\\\n**Same Function Swap Args** example patch:\n```diff\ndiff --git a/servers/src/main/java/tachyon/master/BlockInfo.java b/servers/src/main/java/tachyon/master/BlockInfo.java\nindex 10f3b21..ec659db 100644\n--- a/servers/src/main/java/tachyon/master/BlockInfo.java\n+++ b/servers/src/main/java/tachyon/master/BlockInfo.java\n@@ -187,7 +187,8 @@\n           } catch (NumberFormatException nfe) {\n             continue;\n           }\n-          ret.add(new NetAddress(resolvedHost, resolvedPort, -1));\n+          // The resolved port is the data transfer port not the rpc port\n+          ret.add(new NetAddress(resolvedHost, -1, resolvedPort));\n         }\n       }\n     }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Same Function Swap Args",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether a binary operand was accidentally replaced with another one of the same type.\nFor example, developers very often mix comparison operators in expressions.\\\n**Change Binary Operator** example patch:\n```diff\ndiff --git a/core/server/worker/src/main/java/alluxio/worker/netty/DataServerReadHandler.java b/core/server/worker/src/main/java/alluxio/worker/netty/DataServerReadHandler.java\nindex 97a07fa..195d89a 100644\n--- a/core/server/worker/src/main/java/alluxio/worker/netty/DataServerReadHandler.java\n+++ b/core/server/worker/src/main/java/alluxio/worker/netty/DataServerReadHandler.java\n@@ -393,7 +393,7 @@\n     @GuardedBy(\\\"mLock\\\")\n     private boolean shouldRestartPacketReader() {\n       return !mPacketReaderActive && !tooManyPendingPackets() && mPosToQueue < mRequest.mEnd\n-          && mError != null && !mCancel && !mEof;\n+          && mError == null && !mCancel && !mEof;\n     }\n   }\n```\n\n",
                "type": "Text_excerpt",
                "original_header": "Change Binary Operator",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether a unary operand was accidentally replaced with another one of the same type.\nFor example, developers very often may forget the ! operator in a boolean expression.\\\n**Change Unary Operator** example patch:\n```diff\ndiff --git a/core/client/src/main/java/alluxio/client/file/FileInStream.java b/core/client/src/main/java/alluxio/client/file/FileInStream.java\nindex b263009..5592db2 100644\n--- a/core/client/src/main/java/alluxio/client/file/FileInStream.java\n+++ b/core/client/src/main/java/alluxio/client/file/FileInStream.java\n@@ -454,7 +454,7 @@\n \n     // If this block is read from a remote worker but we don't have a local worker, don't cache\n     if (mCurrentBlockInStream instanceof RemoteBlockInStream\n-        && BlockStoreContext.INSTANCE.hasLocalWorker()) {\n+        && !BlockStoreContext.INSTANCE.hasLocalWorker()) {\n       return;\n     }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Change Unary Operator",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether one of the operands in a binary operation was wrong.\\\n**Change Operand** example patch:\n```diff\ndiff --git a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\nindex fd49c8a..67b74a9 100644\n--- a/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\n+++ b/modules/VisualizationImpl/src/main/java/org/gephi/visualization/swing/StandardGraphIO.java\n@@ -470,7 +470,7 @@\n         float newCameraLocation = Math.max(newCameraLocationX, newCameraLocationY);\n \n         graphDrawable.cameraLocation[0] = limits.getMinXoctree() + graphWidth / 2;\n-        graphDrawable.cameraLocation[1] = limits.getMinYoctree() + graphWidth / 2;\n+        graphDrawable.cameraLocation[1] = limits.getMinYoctree() + graphHeight / 2;\n         graphDrawable.cameraLocation[2] = newCameraLocation;\n \n         graphDrawable.cameraTarget[0] = graphDrawable.cameraLocation[0];\n```\n",
                "type": "Text_excerpt",
                "original_header": "Change Operand",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether an extra condition (&& operand) was added in an if statement\u2019s condition.\\\n**More Specific If** example patch:\n```diff\ndiff --git a/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java b/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\nindex b01c711..85eb787 100644\n--- a/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\n+++ b/hazelcast/src/main/java/com/hazelcast/impl/ConcurrentMapManager.java\n@@ -546,7 +546,7 @@\n         }\n         for (Future\\u003cPairs\\u003e future : lsFutures) {\n             Pairs pairs = future.get();\n-            if (pairs != null) {\n+            if (pairs != null && pairs.getKeyValues()!=null) {\n                 for (KeyValue keyValue : pairs.getKeyValues()) {\n                     results.addKeyValue(keyValue);\n                 }\n```\n",
                "type": "Text_excerpt",
                "original_header": "More Specific If",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether an extra condition which either this or the original one needs to hold (\u2225 operand) was added in\nan if statement\u2019s condition.\\\n**Less Specific If** example patch:\n```diff\ndiff --git a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\nindex baea6e8..aeca799 100644\n--- a/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n+++ b/modules/swagger-core/src/main/java/io/swagger/v3/core/jackson/ModelResolver.java\n@@ -999,7 +999,7 @@\n                 }\n             }\n         }\n-        if (subtypeProps.isEmpty()) {\n+        if (subtypeProps == null || subtypeProps.isEmpty()) {\n             child.setProperties(null);\n         }\n     }\n```\n",
                "type": "Text_excerpt",
                "original_header": "Less Specific If",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether the fix added a throws clause in a function declaration.\\\n**Missing Throws Exception** example patch:\n```diff\ndiff --git a/example/src/main/java/io/netty/example/securechat/SecureChatServer.java b/example/src/main/java/io/netty/example/securechat/SecureChatServer.java\nindex 6dad108..19a9dac 100644\n--- a/example/src/main/java/io/netty/example/securechat/SecureChatServer.java\n+++ b/example/src/main/java/io/netty/example/securechat/SecureChatServer.java\n@@ -31,7 +31,7 @@\n         this.port \\u003d port;\n     }\n \n-    public void run() {\n+    public void run() throws InterruptedException {\n         ServerBootstrap b \\u003d new ServerBootstrap();\n         try {\n             b.eventLoop(new NioEventLoop(), new NioEventLoop())\n```\n",
                "type": "Text_excerpt",
                "original_header": "Missing Throws Exception",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        },
        {
            "result": {
                "value": "This pattern checks whether the fix deleted an throws clause in a function declaration.\\\n**Delete Throws Exception** example patch:\n```diff\ndiff --git a/core/server/src/main/java/tachyon/web/WebInterfaceAbstractMetricsServlet.java b/core/server/src/main/java/tachyon/web/WebInterfaceAbstractMetricsServlet.java\nindex 23ae5cd..2773882 100644\n--- a/core/server/src/main/java/tachyon/web/WebInterfaceAbstractMetricsServlet.java\n+++ b/core/server/src/main/java/tachyon/web/WebInterfaceAbstractMetricsServlet.java\n@@ -43,13 +43,12 @@\n   }\n \n   /**\n-   * Populates key, value pairs for UI display.\n+   * Populates operation metrics for displaying in the UI\n    *\n    * @param request The {@link HttpServletRequest} object\n-   * @throws IOException if an I/O error occurs\n    */\n   protected void populateCountersValues(Map<String, Metric> operations,\n-      Map<String, Counter> rpcInvocations, HttpServletRequest request) throws IOException {\n+      Map<String, Counter> rpcInvocations, HttpServletRequest request){\n \n     for (Map.Entry<String, Metric> entry : operations.entrySet()) {\n       if (entry.getValue() instanceof Gauge) {\n```\n",
                "type": "Text_excerpt",
                "original_header": "Delete Throws Exception",
                "parent_header": [
                    "Examples for Each SStuB Pattern"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        }
    ],
    "application_domain": [
        {
            "result": {
                "type": "String",
                "value": "Semantic web"
            },
            "confidence": 0.9820594863190367,
            "technique": "supervised_classification"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "SStuBs-mining"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/mast-group/mineSStuBs/master/README.md"
        }
    ]
}