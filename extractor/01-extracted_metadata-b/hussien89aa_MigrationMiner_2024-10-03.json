{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 18:54:35"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/hussien89aa/MigrationMiner",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "hussien89aa",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-05-06T04:44:21Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-05-15T14:51:12Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2019 Hussein Alrubaye\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/LICENSE.md"
        },
        {
            "result": {
                "value": "This software is licensed under the [MIT license](https://opensource.org/licenses/MIT).\n",
                "type": "Text_excerpt",
                "original_header": "License"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "A tool to detect migration code between two Java third-party libraries",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "<p align=\"justified\">\n<b>MigrationMiner</b> is an open source tool that provides the developer with easy-to-use and comprehensive way of extracting, from given list of input projects, existing migrations between two third-party libraries using program analysis based on Abstract Syntax Tree (AST) code representation. In a nutshell, MigrationMiner (i) detects, (ii) extracts, (iii) filters, and (iv) collects code changes related to any performed migration. For a given input project, MigrationMiner <b>detects</b> any migration undergone between two java libraries and returns the names and versions of both retired and new libraries. Thereafter, MigrationMiner <b>extracts</b> the specific code changes, from the client code, and which belong to the migration changes (it should at least have one removed method from the retired library, and one added method from the new library) from all other unrelated code changes within the commits. Next, MigrationMiner <b>filters</b> code changes to only keep fragments that contain migration traces i.e., a code fragment, generated by the <i>diff</i> utility, which contains the removed and added methods, respectively from the retired and the new library. Finally, MigrationMiner <b>collects</b> the library API documentation that is associated with every method in the client code. The output of MigrationMiner, for each detected migration between two libraries, is a set of migration traces, with their code context, and their corresponding documentation.\n </p> \n",
                "original_header": "MigrationMiner"
            },
            "confidence": 0.9967011930280465,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "After running Main.java, You could read the output as objects by writing the following code. or run [TestClient.java](https://github.com/hussien89aa/MigrationMiner/blob/master/MigrationMiner/src/main/java/com/main/parse/TestClient.java). That could help you to integrate the tool with your code.\n```java\n \n//Return list of migrations between two pairs of libraries( added/removed)\nLinkedList<MigrationRule> migrationRules= new MigrationRuleDB().getMigrationRulesWithoutVersion(1);\n\nfor (MigrationRule migrationRule : migrationRules) {\n System.out.println(\"== Migration Rule \"+ migrationRule.FromLibrary +\n      \" <==> \"+  migrationRule.ToLibrary +\"==\");\n\n /*\n *  For every migrations, retrieve list of collected of fragments for migration at method level.\n *  every fragment has N added methods M removed methods\n */\n ArrayList<Segment> segmentList = new MigrationSegmentsDB().getSegmentsObj(migrationRule.ID);\n\n for (Segment segment : segmentList) {\n\n  segment.print();\n\n  // Print all removed method signatures With Docs\n  printMethodWithDocs( migrationRule.FromLibrary,segment.removedCode);  \n\n  // Print all added method signatures With Docs\n  printMethodWithDocs( migrationRule.ToLibrary,segment.addedCode);\n\n } // End fragment for every migration\n\n}  // End library migration\n\n\n/* \n* This method takes list of methods signatures with library that methods belong to.\n* It will print the signatures and Docs for every method\n*/\nvoid printMethodWithDocs(String libraryName,ArrayList<String> listOfMethods ) {\n\n // For every add method print the Docs\n for(String methodSignature: listOfMethods){\n\n  // Convert  method signatures as String to Object\n  MethodObj methodFormObj= MethodObj.GenerateSignature(methodSignature);\n\n  //retrieve Docs from the library for method has that name\n  ArrayList<MethodDocs>  toLibrary = new LibraryDocumentationDB()\n                                           .getDocs( libraryName,methodFormObj.methodName);\n\n  //Map method signatures to docs\n  MethodDocs methodFromDocs = MethodDocs.GetObjDocs(toLibrary, methodFormObj);\n\n  if(methodFromDocs.methodObj== null) {\n   System.err.println(\"Cannot find Docs for: \"+ methodSignature);\n   continue;\n  }\n  methodFromDocs.print();      \n }\n}\n```\n \n \n",
                "original_header": "C- Ouput as Objects"
            },
            "confidence": 0.9479777675744037,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "MigrationMiner",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "hussien89aa/MigrationMiner",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/hussien89aa/MigrationMiner/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/hussien89aa/MigrationMiner/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 153,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "api, java, migration-tool",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 125,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/hussien89aa/MigrationMiner/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 216061
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "<pre>\n@inproceedings{alrubaye2019migrationminer,\n  title={MigrationMiner: An Automated Detection Tool of Third-Party Java Library Migration at the Method Level},\n  author={Alrubaye, Hussein and Mkaouer, Mohamed Wiem and Ouni, Ali},\n  booktitle={2019 IEEE International Conference on Software Maintenance and Evolution (ICSME)},\n  pages={414--417},\n  year={2019},\n  organization={IEEE}\n}\n</pre>\n\n ",
                "type": "Text_excerpt",
                "original_header": "When you use this tool, please cite this paper.",
                "parent_header": [
                    "MigrationMiner"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        },
        {
            "result": {
                "value": "- Migration/upgrade for Android Apps at the method and library Level.\n- Migration/upgrade for Java Maven Projects at method and library Level.\n- Track third-party libraries upgrade/migration for a project.\n- Download third-party libraries used at given commit and extract source code + class/methods signature from jar file.\n- Download third-party libraries documentation used at given commit and convert jar file to a relational database.\n\n\n",
                "type": "Text_excerpt",
                "original_header": "This tool is not limited to library migration. You could use tool for:"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        },
        {
            "result": {
                "value": "* You could run the project by following this [video](https://youtu.be/sAlR1HNetXc).\n",
                "type": "Text_excerpt",
                "original_header": "A- Using the tutorial video",
                "parent_header": [
                    "How to install and run the tool"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "<pre>\n@inproceedings{alrubaye2019migrationminer,\n  title={MigrationMiner: An Automated Detection Tool of Third-Party Java Library Migration at the Method Level},\n  author={Alrubaye, Hussein and Mkaouer, Mohamed Wiem and Ouni, Ali},\n  booktitle={2019 IEEE International Conference on Software Maintenance and Evolution (ICSME)},\n  pages={414--417},\n  year={2019},\n  organization={IEEE}\n}\n</pre>\n\n ",
                "type": "Text_excerpt",
                "original_header": "When you use this tool, please cite this paper.",
                "parent_header": [
                    "MigrationMiner"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{alrubaye2019migrationminer,\n    organization = {IEEE},\n    year = {2019},\n    pages = {414--417},\n    booktitle = {2019 IEEE International Conference on Software Maintenance and Evolution (ICSME)},\n    author = {Alrubaye, Hussein and Mkaouer, Mohamed Wiem and Ouni, Ali},\n    title = {MigrationMiner: An Automated Detection Tool of Third-Party Java Library Migration at the Method Level},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "MigrationMiner: An Automated Detection Tool of Third-Party Java Library Migration at the Method Level",
                "author": "Alrubaye, Hussein and Mkaouer, Mohamed Wiem and Ouni, Ali"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "* Install java JKD from [here](https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html).\n* Install Eclipse IDE for Java Developers from [here](https://www.eclipse.org/downloads/packages/).\n* Install  MYSQL Server from [here](https://dev.mysql.com/downloads/installer/).\n* If you using Ubuntu install curl by running the following commands \"sudo apt install curl\"\n\n",
                "type": "Text_excerpt",
                "original_header": "Prerequisites"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "* First you need to build the dataset, by running the following script Database/MigrationMinerDBSQL.sql.\nOpen a terminal and run the following commands\n```sql\n mysql -u root -p\n source ./MigrationMinerDBSQL.sql\n```\nAfter running the commands, the database should be created with all tables and views.\n\n* Open eclipse IDE then go to File-> import-> Maven-> existing Maven Projects-> Select MigrationMiner directory.\n* Set your local MYSQL username and password in this file [DatabaseLogin.java](https://github.com/hussien89aa/MigrationMiner/blob/master/MigrationMiner/src/main/java/com/project/settings/DatabaseLogin.java).\n* Update MigrationMiner/data/gitRepositories.csv with the list of git repositories that you want to use as input (they will be searched for potential library migrations).\n* Go to your github account under Settings > Developer Settings > Personal Access Tokens, add new token. Use token to set your GitHub token in this file [GithubLogin.java](https://github.com/hussien89aa/MigrationMiner/blob/master/MigrationMiner/src/main/java/com/project/settings/GithubLogin.java). Your token will be used so that Migration Miner can search a large number of GitHub projects without authentication issues.\n* (Optional) We print alot of logs, to avoid console buffer overflow. In eclipse IDE go to   preferences-> console-> limit console buffer size to small number such as 10000.\n* Run the [Main.java](https://github.com/hussien89aa/MigrationMiner/blob/master/MigrationMiner/src/main/java/com/main/parse/Main.java).\n\n",
                "type": "Text_excerpt",
                "original_header": "B- Using the following steps",
                "parent_header": [
                    "How to install and run the tool"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "* First you need to build the dataset, by running the following script Database/MigrationMinerDBSQL.sql.\nOpen a terminal and run the following commands\n```sql\n mysql -u root -p\n source ./MigrationMinerDBSQL.sql\n```\nAfter running the commands, the database should be created with all tables and views.\n\n* Open eclipse IDE then go to File-> import-> Maven-> existing Maven Projects-> Select MigrationMiner directory.\n* Set your local MYSQL username and password in this file [DatabaseLogin.java](https://github.com/hussien89aa/MigrationMiner/blob/master/MigrationMiner/src/main/java/com/project/settings/DatabaseLogin.java).\n* Update MigrationMiner/data/gitRepositories.csv with the list of git repositories that you want to use as input (they will be searched for potential library migrations).\n* Go to your github account under Settings > Developer Settings > Personal Access Tokens, add new token. Use token to set your GitHub token in this file [GithubLogin.java](https://github.com/hussien89aa/MigrationMiner/blob/master/MigrationMiner/src/main/java/com/project/settings/GithubLogin.java). Your token will be used so that Migration Miner can search a large number of GitHub projects without authentication issues.\n* (Optional) We print alot of logs, to avoid console buffer overflow. In eclipse IDE go to   preferences-> console-> limit console buffer size to small number such as 10000.\n* Run the [Main.java](https://github.com/hussien89aa/MigrationMiner/blob/master/MigrationMiner/src/main/java/com/main/parse/Main.java).\n\n",
                "type": "Text_excerpt",
                "original_header": "B- Using the following steps",
                "parent_header": [
                    "How to install and run the tool"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "application_domain": [
        {
            "result": {
                "type": "String",
                "value": "Semantic web"
            },
            "confidence": 0.9337747206419463,
            "technique": "supervised_classification"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": ""
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/hussien89aa/MigrationMiner/wiki",
                "format": "wiki"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://repository-images.githubusercontent.com/185124992/bcd2f000-6f9d-11e9-9040-fbc3190eb01a"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/1907.02997.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hussien89aa/MigrationMiner/master/README.md"
        }
    ]
}