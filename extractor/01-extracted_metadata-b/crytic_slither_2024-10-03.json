{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 18:58:34"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/crytic/slither",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "crytic",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2018-09-05T21:56:35Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-03T06:43:32Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/agpl-3.0",
                "type": "License",
                "name": "GNU Affero General Public License v3.0",
                "url": "https://api.github.com/licenses/agpl-3.0",
                "spdx_id": "AGPL-3.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/LICENSE"
        },
        {
            "result": {
                "value": "Slither is licensed and distributed under the AGPLv3 license. [Contact us](mailto:opensource@trailofbits.com) if you're looking for an exception to the terms.\n",
                "type": "Text_excerpt",
                "original_header": "License",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Static Analyzer for Solidity and Vyper",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "**Slither** is a Solidity & Vyper static analysis framework written in Python3. It runs a suite of vulnerability detectors, prints visual information about contract details, and provides an API to easily write custom analyses. Slither enables developers to find vulnerabilities, enhance their code comprehension, and quickly prototype custom analyses. \n",
                "original_header": "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
            },
            "confidence": 0.9875683720020684,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "* Detects vulnerable Solidity code with low false positives (see the list of [trophies](./trophies.md))\n* Identifies where the error condition occurs in the source code\n* Easily integrates into continuous integration and Hardhat/Foundry builds\n* Built-in 'printers' quickly report crucial contract information\n* Detector API to write custom analyses in Python\n* Ability to analyze contracts written with Solidity >= 0.4\n* Intermediate representation ([SlithIR](https://github.com/trailofbits/slither/wiki/SlithIR)) enables simple, high-precision analyses\n* Correctly parses 99.9% of all public Solidity code\n* Average execution time of less than 1 second per contract\n* Integrates with Github's code scanning in [CI](https://github.com/marketplace/actions/slither-action)\n* Support for Vyper smart contracts\n \n",
                "original_header": "Features"
            },
            "confidence": 0.9774744887789212,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "slither",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "crytic/slither",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/crytic/slither/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/crytic/slither/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 5273,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "ethereum, solidity, static-analysis, vyper",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 964,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/crytic/slither/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 2756796
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Solidity",
                "name": "Solidity",
                "type": "Programming_language",
                "size": 742589
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 16690
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Vyper",
                "name": "Vyper",
                "type": "Programming_language",
                "size": 6908
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 2108
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 1592
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/171669282",
                "tag": "0.10.4",
                "name": "0.10.4",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "This is a minor release that fixes some issues caused by updates to the web3.py library. Also, it contains fixes/improvements for a couple detectors: fix the `solc-version` detector which was warning on solc versions without bugs, don't report `arbitrary-send-eth` if the recipient if it's an immutable value, disable `unused-import` as it was slow and not handling a few edge cases correctly. Finally, `slither-check-upgradeability` has a new check which identifies the bug that was the cause of the most recent Ronin hack (see https://github.com/crytic/slither/pull/2536).\r\n\r\nWe thank all of our external contributors for their effort!\r\n\r\n## What's Changed\r\n* arbitrary-send-eth: Don't report if destination is immutable state var by @smonicas in https://github.com/crytic/slither/pull/2488\r\n* sync dev <> master by @0xalpharush in https://github.com/crytic/slither/pull/2493\r\n* Update WIKI_DESCRIPTION for \"dead_code.py\" by @ThomasHeim11 in https://github.com/crytic/slither/pull/2492\r\n* Dockerfile: fix `ckzg` build by @elopez in https://github.com/crytic/slither/pull/2494\r\n* Added length check on `bugs_by_version` for specific `version_number` by @MukulKolpe in https://github.com/crytic/slither/pull/2499\r\n* Bump docker/build-push-action from 5 to 6 by @dependabot in https://github.com/crytic/slither/pull/2486\r\n* Bump pypa/gh-action-pypi-publish from 1.8.14 to 1.9.0 by @dependabot in https://github.com/crytic/slither/pull/2485\r\n* Improve slither-mutate testing by @DarkaMaul in https://github.com/crytic/slither/pull/2482\r\n* Add a new parameter `max_width` to MyPrettyTable by @DarkaMaul in https://github.com/crytic/slither/pull/2426\r\n* slither-mutate: (AOR) Fix for dynamic array operations by @smonicas in https://github.com/crytic/slither/pull/2484\r\n* Bump sigstore/gh-action-sigstore-python from 2.1.1 to 3.0.0 by @dependabot in https://github.com/crytic/slither/pull/2508\r\n* ci: require web3 with <5 eth_typing deps by @0xalpharush in https://github.com/crytic/slither/pull/2537\r\n* add upper bound by @0xalpharush in https://github.com/crytic/slither/pull/2541\r\n* Revert \"Reduce verbosity for InvalidCompilation errors\" by @0xalpharush in https://github.com/crytic/slither/pull/2529\r\n* disable unused import by @0xalpharush in https://github.com/crytic/slither/pull/2540\r\n* tool: add detector for multiple new reinitializers by @QiuhaoLi in https://github.com/crytic/slither/pull/2536\r\n* Bump pypa/gh-action-pip-audit from 1.0.8 to 1.1.0 by @dependabot in https://github.com/crytic/slither/pull/2531\r\n* sync master <> dev by @0xalpharush in https://github.com/crytic/slither/pull/2506\r\n\r\n## New Contributors\r\n* @ThomasHeim11 made their first contribution in https://github.com/crytic/slither/pull/2492\r\n* @MukulKolpe made their first contribution in https://github.com/crytic/slither/pull/2499\r\n* @QiuhaoLi made their first contribution in https://github.com/crytic/slither/pull/2536\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.10.3...0.10.4",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.10.4",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.10.4",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.10.4",
                "url": "https://api.github.com/repos/crytic/slither/releases/171669282",
                "release_id": 171669282,
                "date_created": "2024-08-23T13:20:00Z",
                "date_published": "2024-08-23T13:33:25Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/159090958",
                "tag": "0.10.3",
                "name": "0.10.3",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "This is a minor release that fixes several bugs, improves performance, and addresses some false positives. There is a new flag, `--include-detectors`, to override exclusion rules e.g. run a specific low severity detector while excluding others with `--exclude-low`. The detector, `similar-names`, has been removed.\r\n\r\nWe would like to thank our external contributors:\r\n- @careworry\r\n- @xiaoxianBoy \r\n- @vovikhangcdv \r\n- @utx0\r\n\r\n## What's Changed\r\n* Fix: unused state var detector for abstract/library by @0xalpharush in https://github.com/crytic/slither/pull/2419\r\n* Remove deprecated flags and their migration. by @DarkaMaul in https://github.com/crytic/slither/pull/2410\r\n* Fix #2430 by @DarkaMaul in https://github.com/crytic/slither/pull/2431\r\n* Chore: fix some typos in comments by @careworry in https://github.com/crytic/slither/pull/2433\r\n* Restore plugin example to working state by @elopez in https://github.com/crytic/slither/pull/2436\r\n* Chore: fix some typos in comments by @alwayshang in https://github.com/crytic/slither/pull/2444\r\n* Reduce verbosity for InvalidCompilation errors by @DarkaMaul in https://github.com/crytic/slither/pull/2417\r\n* Configure coderabbit review to also consider PR on dev branch. by @DarkaMaul in https://github.com/crytic/slither/pull/2441\r\n* chore: fix typos and link update by @xiaoxianBoy in https://github.com/crytic/slither/pull/2453\r\n* chore: recommend upgrading in issue template by @0xalpharush in https://github.com/crytic/slither/pull/2457\r\n* Features/perf improvment by @DarkaMaul in https://github.com/crytic/slither/pull/2438\r\n* Fix: use contract declarer's scope for name resolution by @0xalpharush in https://github.com/crytic/slither/pull/2459\r\n* Fix bugs in the EVM printer by @DarkaMaul in https://github.com/crytic/slither/pull/2435\r\n* Add detectors to include override exclude args by @nsiregar in https://github.com/crytic/slither/pull/2440\r\n* Chore/remove unused scripts by @0xalpharush in https://github.com/crytic/slither/pull/2468\r\n* Fix inheritance printer rebase by @0xPhaze in https://github.com/crytic/slither/pull/2153\r\n* Add more academic references by @montyly in https://github.com/crytic/slither/pull/2270\r\n* Update: improve unhandled initializers in unprotected-upgrade detector by @vovikhangcdv in https://github.com/crytic/slither/pull/2203\r\n* Write `slither.db.json` file on each save_results_to_hide by @utx0 in https://github.com/crytic/slither/pull/2071\r\n* Remove similar-names bc it's slow by @0xalpharush in https://github.com/crytic/slither/pull/2469\r\n* Improve message error for when Crytic throws a KeyError. by @DarkaMaul in https://github.com/crytic/slither/pull/2418\r\n* Fix regex patterns by @DarkaMaul in https://github.com/crytic/slither/pull/2442\r\n* Fix: do not flag imports from import container as unused by @0xalpharush in https://github.com/crytic/slither/pull/2471\r\n* Fix: filtering of unused-import,incorrect-solc, pragma by @0xalpharush in https://github.com/crytic/slither/pull/2472\r\n* Fix ordering and dead-code detector by @0xalpharush in https://github.com/crytic/slither/pull/2476\r\n\r\n## New Contributors\r\n* @careworry made their first contribution in https://github.com/crytic/slither/pull/2433\r\n* @alwayshang made their first contribution in https://github.com/crytic/slither/pull/2444\r\n* @xiaoxianBoy made their first contribution in https://github.com/crytic/slither/pull/2453\r\n* @0xPhaze made their first contribution in https://github.com/crytic/slither/pull/2153\r\n* @vovikhangcdv made their first contribution in https://github.com/crytic/slither/pull/2203\r\n* @utx0 made their first contribution in https://github.com/crytic/slither/pull/2071\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.10.2...0.10.3",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.10.3",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.10.3",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.10.3",
                "url": "https://api.github.com/repos/crytic/slither/releases/159090958",
                "release_id": 159090958,
                "date_created": "2024-06-05T23:31:25Z",
                "date_published": "2024-06-05T23:40:47Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/150124485",
                "tag": "0.10.2",
                "name": "0.10.2",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "# 0.10.2 - 2024-04-08\r\nThis minor release contains several enhancements and resolves several bugs, most notably:\r\n- Revamps slither-mutate with first class support for Foundry projects (see [quickstart](https://github.com/crytic/slither/tree/master/slither/tools/mutator#quick-start))\r\n- New detector identifies unused imports (`slither . --detect unused-import`)\r\n- Resolves longstanding issues in import resolution and lack of support for aliases (see https://github.com/crytic/slither/issues/1452)\r\n- Improves the reference/declaration API in order to facilitate LSP integration\r\n- Accurately models implicit returns in the intermediate representation (see https://github.com/crytic/slither/pull/1880)\r\n\r\nWe would like to thank our external contributors:\r\n- @Tiko7454\r\n- @dokzai\r\n- @rustrover\r\n- @eltociear\r\n- @majorteach\r\n- @kevinclancy\r\n- @nsiregar\r\n- @bart1e \r\n\r\n## New Features\r\n* Slither-mutate: fit and finish by @bohendo in https://github.com/crytic/slither/pull/2302\r\n* Feat: add detector for unused imports by @0xalpharush in https://github.com/crytic/slither/pull/2392\r\n* Add virtual and override attribute in Function by @smonicas in https://github.com/crytic/slither/pull/2333\r\n* Feat/virtual override with refs by @0xalpharush in https://github.com/crytic/slither/pull/2376\r\n\r\n## Bug Fixes\r\n* Fix CONTINUE node in the cfg by @Tiko7454 in https://github.com/crytic/slither/pull/2047\r\n* Update inheritance graph printer to handle multiple contracts with same names  by @dokzai in https://github.com/crytic/slither/pull/2159\r\n* Fix parsing of events by @smonicas in https://github.com/crytic/slither/pull/2365\r\n* Slither-mutate: bugfix when two files have the same name by @DarkaMaul in https://github.com/crytic/slither/pull/2357\r\n* Add support for send builtin by @0xalpharush in https://github.com/crytic/slither/pull/2212\r\n* Fix IR for top level functions with using-for by @smonicas in https://github.com/crytic/slither/pull/2367\r\n* Update PR#2034 by @0xalpharush in https://github.com/crytic/slither/pull/2384\r\n* Fix: preserve empty tuple components during declaration-to-assignment conversion by @kevinclancy in https://github.com/crytic/slither/pull/2034\r\n* Fix: guard literal implicit conversion for arrays by @0xalpharush in https://github.com/crytic/slither/pull/2383\r\n* Fix: add missing references in the source mapping API by @0xalpharush in https://github.com/crytic/slither/pull/2371\r\n* Fix: support aliases for NewContract operation by @0xalpharush in https://github.com/crytic/slither/pull/2370\r\n* Fix: add newline to incorrect-modifier output by @0xalpharush in https://github.com/crytic/slither/pull/2386\r\n* ArrayType: Check the folded length in __eq__ by @smonicas in https://github.com/crytic/slither/pull/2331\r\n* Fix: lookup of type alias as member of contract by @0xalpharush in https://github.com/crytic/slither/pull/2404\r\n* Resolve available definitions from import by reference ID by @0xalpharush in https://github.com/crytic/slither/pull/2403\r\n* Filter name-reused detector to only run on Truffle projects (#2390) by @nsiregar in https://github.com/crytic/slither/pull/2394\r\n\r\n## Enhancements\r\n* Fix/model named returns by @0xalpharush in https://github.com/crytic/slither/pull/2326\r\n* Ci: linter, pylint: upgrade superlinter to v6 by @elopez in https://github.com/crytic/slither/pull/2303\r\n* Add funding metadata to repository by @elopez in https://github.com/crytic/slither/pull/2346\r\n* Create issue-metrics.yml by @0xalpharush in https://github.com/crytic/slither/pull/2366\r\n* Chore: remove repetitive word by @rustrover in https://github.com/crytic/slither/pull/2363\r\n* Update node.py by @eltociear in https://github.com/crytic/slither/pull/2358\r\n* Support python3.12 by @0xalpharush in https://github.com/crytic/slither/pull/2348\r\n* Chore: remove repetitive words by @majorteach in https://github.com/crytic/slither/pull/2373\r\n* Implement pytest parameterize on test_implicit_returns (#2350) by @nsiregar in https://github.com/crytic/slither/pull/2381\r\n* Wiki/too many digits by @0xalpharush in https://github.com/crytic/slither/pull/2385\r\n* Upgrade slither-mutate readme by @bohendo in https://github.com/crytic/slither/pull/2391\r\n* Add all variables read/written by @smonicas in https://github.com/crytic/slither/pull/2368\r\n* Add test for https://github.com/crytic/slither/pull/2331 by @0xalpharush in https://github.com/crytic/slither/pull/2405\r\n* Prepare for 0.10.2 release by @0xalpharush in https://github.com/crytic/slither/pull/2406\r\n* Removed unused import by @0xalpharush in https://github.com/crytic/slither/pull/2408\r\n\r\n## New Contributors\r\n* @rustrover made their first contribution in https://github.com/crytic/slither/pull/2363\r\n* @DarkaMaul made their first contribution in https://github.com/crytic/slither/pull/2357\r\n* @eltociear made their first contribution in https://github.com/crytic/slither/pull/2358\r\n* @majorteach made their first contribution in https://github.com/crytic/slither/pull/2373\r\n* @nsiregar made their first contribution in https://github.com/crytic/slither/pull/2381\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.10.1...0.10.2",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.10.2",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.10.2",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.10.2",
                "url": "https://api.github.com/repos/crytic/slither/releases/150124485",
                "release_id": 150124485,
                "date_created": "2024-04-07T21:46:41Z",
                "date_published": "2024-04-08T13:08:21Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/144270186",
                "tag": "0.10.1",
                "name": "0.10.1",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "\r\n# 0.10.1 - 2024-02-29\r\nThis is a minor release that adds support for Solidity 0.8.24 and top level events. It includes a new detector, `out-of-order-retryable`, which detects potential misuse of Arbitrum's retryable transactions. Also, there is a new CLI flag, `--include-paths` which allows one to only include results from a given path.\r\n\r\nWe would like to thank all of our external contributors:\r\n- @VIELITE \r\n- @mds1 \r\n- @UsmannK \r\n- @ATREAY\r\n- @dokzai\r\n\r\n## What's Changed\r\n\r\n### New Features\r\n* Add support top level events by @smonicas in https://github.com/crytic/slither/pull/2219\r\n* Add support Solidity 0.8.24 by @smonicas in https://github.com/crytic/slither/pull/2281\r\n* Add `--include-paths `option by @smonicas in https://github.com/crytic/slither/pull/2330\r\n  - For example, `slither . --include-paths (src/|contracts/)` will only include results from files within `src` or `contracts` directory. Note, this is uses python-style regex and cannot be used at the same time as `--filter-paths`.\r\n* Feat: out of order retryable detector by @0xalpharush in https://github.com/crytic/slither/pull/2340\r\n\r\n### Bug Fixes\r\n* Fix: `is_reentrant` for internal vyper functions by @0xalpharush in https://github.com/crytic/slither/pull/2211\r\n* Fix: iterative update by @0xalpharush in https://github.com/crytic/slither/pull/2206\r\n* Fix: detect selfdestruct in internal calls by @0xalpharush in https://github.com/crytic/slither/pull/2232\r\n* Fix using for when used with \"this\" by @smonicas in https://github.com/crytic/slither/pull/2224\r\n* Fix: broken doc links by @mds1 in https://github.com/crytic/slither/pull/2299\r\n* Fix: slither: utils: respect colorization state when printing tables by @elopez in https://github.com/crytic/slither/pull/2310\r\n* Fix: support inheritance resolution when contract name is reused by @0xalpharush in https://github.com/crytic/slither/pull/2332\r\n* Fix: support renaming in base inheritance and base constructor calls by @0xalpharush in https://github.com/crytic/slither/pull/2320\r\n* Fix: immediate inheritance by @Tiko7454 in https://github.com/crytic/slither/pull/2306\r\n\r\n### Enhancements\r\n* Update README.md by @VIELITE in https://github.com/crytic/slither/pull/2198\r\n* Update installation instrucitons by @0xalpharush in https://github.com/crytic/slither/pull/2189\r\n* Update Dockerfile by @0xalpharush in https://github.com/crytic/slither/pull/2188\r\n* Raise an error when a missing contract is specified to read-storage by @UsmannK in https://github.com/crytic/slither/pull/2235\r\n* Remove unused files by @0xalpharush in https://github.com/crytic/slither/pull/2197\r\n* Substituted the letter `z` with `x` in pre-declaration by @ATREAY in https://github.com/crytic/slither/pull/2258\r\n* Upgraded Slither-mutate by @vishnuram1999 in https://github.com/crytic/slither/pull/2278\r\n* Divide-before-multiply: Detect also in modifiers by @smonicas in https://github.com/crytic/slither/pull/2280\r\n* Properties, documentation: correct tool descriptions and usage by @elopez in https://github.com/crytic/slither/pull/2311\r\n* Fix example by @0xalpharush in https://github.com/crytic/slither/pull/2312\r\n* Make triage database path customizable by @elopez in https://github.com/crytic/slither/pull/2298\r\n* Create a variable API that filters out constants and immutables by @dokzai in https://github.com/crytic/slither/pull/2323\r\n* Add regression test for #2313 by @0xalpharush in https://github.com/crytic/slither/pull/2321\r\n* Msg-value-loop: Don't report if msg.value is in a conditional expression by @smonicas in https://github.com/crytic/slither/pull/2239\r\n* Incorrect-shift: Detect only assembly blocks by @smonicas in https://github.com/crytic/slither/pull/2315\r\n* Track storage variables read/written in assembly by @smonicas in https://github.com/crytic/slither/pull/2329\r\n\r\n## New Contributors\r\n* @VIELITE made their first contribution in https://github.com/crytic/slither/pull/2198\r\n* @UsmannK made their first contribution in https://github.com/crytic/slither/pull/2235\r\n* @ATREAY made their first contribution in https://github.com/crytic/slither/pull/2258\r\n* @vishnuram1999 made their first contribution in https://github.com/crytic/slither/pull/2278\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.10.0...0.10.1",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.10.1",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.10.1",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.10.1",
                "url": "https://api.github.com/repos/crytic/slither/releases/144270186",
                "release_id": 144270186,
                "date_created": "2024-02-29T20:50:08Z",
                "date_published": "2024-02-29T21:05:55Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/124973172",
                "tag": "0.10.0",
                "name": "0.10.0",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.10.0 - 2023-10-18\r\n\r\nThis release adds support for Vyper 0.3.7 (thanks to the funding from VyperLang)! Currently, Vyper frameworks such as Ape are not supported. To run slither on Vyper codebases, target the source directory e.g. run `slither ./contracts` if the Vyper contracts are in the `contracts/` directory.\r\n\r\nAdditionally, this release includes 5 new detectors, 3 new printers, and several bugs fixes related to recent solidity features. The echidna/medusa integration was sped up and provides more information to the fuzzers.\r\n\r\nWith the release of crytic-compile [0.3.5](https://github.com/crytic/crytic-compile/releases/tag/0.3.5), support for foundry projects is significantly improved: Slither can now be run on a single file from a foundry project and detect the necessary imports automatically (ex: run `slither contracts/some_file.sol` instead of `slither . `).\r\n\r\nWe would like to thank all of our external contributors:\r\n\r\n- @dokzai \r\n- @kevinclancy \r\n- @SEJeff \r\n- @SheldonHolmgren \r\n- @yisun92\r\n- @Tiko7454 \r\n\r\n## What's Changed\r\n\r\n### **New Features:**\r\n- Vyper support by @0xalpharush in [PR #2099](https://github.com/crytic/slither/pull/2099)\r\n- 5 new detectors by @montyly in [PR #2156](https://github.com/crytic/slither/pull/2156)\r\n  - `incorrect-return` / `return-leave` / `incorrect-exp` / `tautological-compare` / `return-bomb`  \r\n- Printers \r\n  - ck by @devtooligan in [PR #1895](https://github.com/crytic/slither/pull/1895)\r\n  - halstead by @devtooligan in [PR #1878](https://github.com/crytic/slither/pull/1878)\r\n  - martin by @devtooligan in [PR #1889](https://github.com/crytic/slither/pull/1889)\r\n\r\n### **Breaking Changes:**\r\n- Improve name resolution of type aliases by @smonicas in [PR #2061](https://github.com/crytic/slither/pull/2061)\r\n- Change return type to UnaryType instead of UnaryOperationType by @dokzai in [PR #2124](https://github.com/crytic/slither/pull/2124)\r\n\r\n### **Enhancements:**\r\n- Add CustomError as printable output by @smonicas in [PR #2063](https://github.com/crytic/slither/pull/2063)\r\n- Improve mapping-deletion detector for nested mappings by @smonicas in [PR #2084](https://github.com/crytic/slither/pull/2084)\r\n- Improve constants extraction of ReferenceVariable by @smonicas in [PR #2098](https://github.com/crytic/slither/pull/2098)\r\n- Better struct handling in code generation util by @webthethird in [PR #2068](https://github.com/crytic/slither/pull/2068)\r\n- Add end assembly node in the cfg by @smonicas in [PR #2078](https://github.com/crytic/slither/pull/2078)\r\n- Use crytic-compile [0.3.5](https://github.com/crytic/crytic-compile/releases/tag/0.3.5) \r\n\r\n### **Bug Fixes:**\r\n\r\n- Fix CONTRIBUTING.md by @smonicas in [PR #2052](https://github.com/crytic/slither/pull/2052)\r\n- Fix ternary rewrite test and make assertion more strict by @0xalpharush in [PR #2067](https://github.com/crytic/slither/pull/2067)\r\n- UnaryOperation: -variable and +variable doesn't make variable an lvalue by @SheldonHolmgren in [PR #2027](https://github.com/crytic/slither/pull/2027)\r\n- Fix assertion failure in dominator computation for dead code by @Tiko7454 in [PR #1984](https://github.com/crytic/slither/pull/1984)\r\n- Fix typo in Contract.get_state_variable_from_canonical_name() by @yisun92 in [PR #1983](https://github.com/crytic/slither/pull/1983)\r\n- Fix divide before multiply detector non deterministic results by @smonicas in [PR #2114](https://github.com/crytic/slither/pull/2114)\r\n- Detectors: cache_array_length: include source mapping in finding by @elopez in [PR #2076](https://github.com/crytic/slither/pull/2076)\r\n- Fix a typo in the help text by @SEJeff in [PR #2155](https://github.com/crytic/slither/pull/2155)\r\n- Fix abi.decode tuple result with udt by @smonicas in [PR #2048](https://github.com/crytic/slither/pull/2048)\r\n- Fix parsing super call expression by @smonicas in [PR #2151](https://github.com/crytic/slither/pull/2151)\r\n- Fix(convert): do not convert array type to elementary for `InitArray` by @0xalpharush in [PR #2018](https://github.com/crytic/slither/pull/2018)\r\n- Fix: reorder named arguments to match declaration order by @kevinclancy in [PR #1949](https://github.com/crytic/slither/pull/1949)\r\n- Fix enum.max/min when enum in other contract by @smonicas in [PR #2051](https://github.com/crytic/slither/pull/2051)\r\n\r\n### **Continuous Integration and Dependencies:**\r\n\r\n- Bump pypa/gh-action-pypi-publish from 1.8.7 to 1.8.10 by @dependabot in [PR #2049](https://github.com/crytic/slither/pull/2049), [PR #2086](https://github.com/crytic/slither/pull/2086)\r\n- ci: add problem matchers for yamllint and pylint by @0xalpharush in [PR #2070](https://github.com/crytic/slither/pull/2070)\r\n- Bump sigstore to 2.1.0 by @0xalpharush in [PR #2081](https://github.com/crytic/slither/pull/2081), [PR #2154](https://github.com/crytic/slither/pull/2154)\r\n- Fix CI by @montyly in [PR #2170](https://github.com/crytic/slither/pull/2170)\r\n- chore: bump sigstore to 2.0.0 by @0xalpharush in [PR #2081](https://github.com/crytic/slither/pull/2081)\r\n- Bump actions/upload-pages-artifact, actions/checkout, cachix/install-nix-action, docker/setup-buildx-action, docker/build-push-action, docker/setup-qemu-action, docker/login-action by @dependabot in [PR #2044](https://github.com/crytic/slither/pull/2044), [PR #2112](https://github.com/crytic/slither/pull/2112), [PR #2111](https://github.com/crytic/slither/pull/2111), [PR #2132](https://github.com/crytic/slither/pull/2132), [PR #2133](https://github.com/crytic/slither/pull/2133), [PR #2134](https://github.com/crytic/slither/pull/2134), [PR #2135](https://github.com/crytic/slither/pull/2135)\r\n\r\n\r\n## New Contributors\r\n* @SheldonHolmgren made their first contribution in https://github.com/crytic/slither/pull/2027\r\n* @yisun92 made their first contribution in https://github.com/crytic/slither/pull/1983\r\n* @dokzai made their first contribution in https://github.com/crytic/slither/pull/2110\r\n* @SEJeff made their first contribution in https://github.com/crytic/slither/pull/2155\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.9.6...0.10.0",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.10.0",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.10.0",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.10.0",
                "url": "https://api.github.com/repos/crytic/slither/releases/124973172",
                "release_id": 124973172,
                "date_created": "2023-10-18T14:51:18Z",
                "date_published": "2023-10-18T15:16:39Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/111291780",
                "tag": "0.9.6",
                "name": "v0.9.6",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "# 0.9.6 - 2023-07-06\r\n\r\nThis release fixes a regression in the `unchecked-lowlevel` call detector and a crash in the `cache-array-length` detector.\r\n\r\n## What's Changed\r\n* fix(cache-array-length): handle when `HighLevelCall` is a `StateVariable` by @0xalpharush in https://github.com/crytic/slither/pull/2019\r\n* fix regression that caused retdata to be flagged by @0xalpharush in https://github.com/crytic/slither/pull/2029\r\n* docs(readme): add new docs link by @sambacha in https://github.com/crytic/slither/pull/2010\r\n\r\n## New Contributors\r\n* @dependabot made their first contribution in https://github.com/crytic/slither/pull/1992\r\n* @sambacha made their first contribution in https://github.com/crytic/slither/pull/2010\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.9.5...0.9.6",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.9.6",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.9.6",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.9.6",
                "url": "https://api.github.com/repos/crytic/slither/releases/111291780",
                "release_id": 111291780,
                "date_created": "2023-07-06T16:05:58Z",
                "date_published": "2023-07-06T16:34:34Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/110207358",
                "tag": "0.9.5",
                "name": "v0.9.5",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "# 0.9.5 - 2023-06-28\r\n\r\nThis is a patch release that fixes forward compatibility with Python 3.11.\r\n\r\n## What's Changed\r\n* Fix execution in Python 3.11 by @elopez in https://github.com/crytic/slither/pull/2002\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.9.4...0.9.5",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.9.5",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.9.5",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.9.5",
                "url": "https://api.github.com/repos/crytic/slither/releases/110207358",
                "release_id": 110207358,
                "date_created": "2023-06-28T12:23:27Z",
                "date_published": "2023-06-28T12:47:32Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/109954003",
                "tag": "0.9.4",
                "name": "v0.9.4",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "# 0.9.4 - 2023-06-26\r\nThis release adds initial support of user defined operators, improves support for try catch, reduces false positives, and fixes numerous bugs. Finally three new detectors, one new printer, and one new tool were added.\r\n\r\nWe would like to thank all of our external contributors:\r\n* @0xGusMcCrae\r\n* @0xxfu\r\n* @A-23187\r\n* @DarrenChangJR\r\n* @PaulRBerg\r\n* @Tiko7454\r\n* @Troublor\r\n* @aga7hokakological\r\n* @bossjoker1\r\n* @daog1\r\n* @duelinggalois\r\n* @kevinclancy\r\n* @ydm\r\n\r\n\r\n> For CI integration: If you were using the `fail-high`, `fail-medium`, `fail-low`, `fail-pedantic` in `slither.conf.json`, Slither will warn these configurations are deprecated and recommend migrating to the respective `fail-on` config e.g. `fail-high` becomes `fail-on: high`. These flags are now decoupled from excluding which detectors run, meaning the flags `--exclude-informational` and `--exclude-optimization` will be honored without also passing `--no-fail-pedantic`. Consider using [slither-action](https://github.com/crytic/slither-action) for CI integration\r\n\r\n## Added\r\n* Detectors \r\n  - `cache-array-length`: Detects for loops that use length member of some storage array in their loop condition and don't modify it by @bart1e in https://github.com/crytic/slither/pull/1694\r\n  - `encode-packed-collision`: Detects collisions caused by use of encode packed on dynamic types by @0xalpharush in https://github.com/crytic/slither/pull/1845\r\n  - `incorrect-using-for`: Detects using-for statement usage when no function from a given library matches a given type   by @bart1e in https://github.com/crytic/slither/pull/1653\r\n * Printer\r\n   - `loc`- Count the total number lines of code (LOC), source lines of code (SLOC), and comment lines of code (CLOC) found in source files (SRC), dependencies (DEP), and test files (TEST) - by @devtooligan in https://github.com/crytic/slither/pull/1882\r\n * Tool\r\n   - [`slither-interface`](https://github.com/crytic/slither/blob/dev/slither/tools/interface/README.md) generates a Solidity interface for a given contract.  by @0xGusMcCrae in https://github.com/crytic/slither/pull/1898\r\n   -  [`slither-read-storage`](https://github.com/crytic/slither/blob/dev/slither/tools/read_storage/README.md) can know retrieve custom storage layouts e.g. proxy with the `--unstructured` flag    by @webthethird and @0xalpharush in https://github.com/crytic/slither/pull/1963\r\n   - `slither-read-storage` native POA support by @webthethird in https://github.com/crytic/slither/pull/1843\r\n- Solidity\r\n  - Support user defined operators by @smonicas in https://github.com/crytic/slither/pull/1684\r\n  - Add support for prevrando (solc 0.8.18) by @0xalpharush in https://github.com/crytic/slither/pull/1946\r\n- Testing \r\n  - Run tests in parallel locally with makefile by @0xalpharush in https://github.com/crytic/slither/pull/1808\r\n  - Snapshot testing insta by @0xalpharush in https://github.com/crytic/slither/pull/1820 \r\n- APIs\r\n  - Generate interface code in new `slither.utils.code_generation` by @webthethird in https://github.com/crytic/slither/pull/1730\r\n  - Add upgradeability utils by @webthethird in https://github.com/crytic/slither/pull/1757\r\n* Add more types hints by @montyly in https://github.com/crytic/slither/pull/1666\r\n\r\n\r\n## Changed\r\n* Remove ExpressionTyped by @montyly in https://github.com/crytic/slither/pull/1672\r\n* Remove core.children by @montyly in https://github.com/crytic/slither/pull/1673\r\n* Remove unused visitors by @montyly in https://github.com/crytic/slither/pull/1674\r\n* Remove is_top_level dead code by @0xalpharush in https://github.com/crytic/slither/pull/1812\r\n* Remove modulo binop from `can_be_checked_for_overflow` by @0xalpharush in https://github.com/crytic/slither/pull/1894\r\n* Update CONTRIBUTING.md to explain compiling and adding snapshot tests by @0xalpharush in https://github.com/crytic/slither/pull/1844\r\n* Upgrade prettytable, use colored table by @0xalpharush in https://github.com/crytic/slither/pull/1766\r\n* Fail-on: rework feature by @elopez in https://github.com/crytic/slither/pull/1462\r\n* Changed name of the printer pausable -> not-pausable by @aga7hokakological in https://github.com/crytic/slither/pull/1823\r\n\r\n## Fixed\r\n* Do not detect incorrect-shift when rhs is constant by @0xalpharush in https://github.com/crytic/slither/pull/1891\r\n* Reduce false positives for incorrect-equality detector by @0xalpharush in https://github.com/crytic/slither/pull/1890\r\n* Incorrect-equality: do not check addresses by @ydm in https://github.com/crytic/slither/pull/1713\r\n* Fix is_storage for calldata variables by @smonicas in https://github.com/crytic/slither/pull/1806\r\n* Fixed: pausable printer includes checks on constructor() by @aga7hokakological in https://github.com/crytic/slither/pull/1824\r\n* Support new bytes expr in ternary by @0xalpharush in https://github.com/crytic/slither/pull/1817\r\n* Fix try catch infinite recursion by @smonicas in https://github.com/crytic/slither/pull/1832\r\n* Fix abi.decode with a UserDefinedType fixed array by @smonicas in https://github.com/crytic/slither/pull/1855\r\n* Preserve the order of sons when splitting ternary node by @Troublor in https://github.com/crytic/slither/pull/1850\r\n* Bug Fix: Contract obj is_fully_implemented by @DarrenChangJR in https://github.com/crytic/slither/pull/1848\r\n* Remove assertion in unary operation by @smonicas in https://github.com/crytic/slither/pull/1856\r\n* Improved interface code generation in `slither.utils.code_generation` by @webthethird in https://github.com/crytic/slither/pull/1802\r\n* Fix abi decode by @daog1 in https://github.com/crytic/slither/pull/1892\r\n* Improve reentrancy events documentation by @0xalpharush in https://github.com/crytic/slither/pull/1903\r\n* Add tx.gasprice to generic taints by @0xalpharush in https://github.com/crytic/slither/pull/1769\r\n* Make slither-flat work for top level errors, structs, enums by @smonicas in https://github.com/crytic/slither/pull/1852\r\n* Fix issue #1849: type_str not returning str by @DarrenChangJR in https://github.com/crytic/slither/pull/1914\r\n* FIx return variables shadowing compact AST by @smonicas in https://github.com/crytic/slither/pull/1912\r\n* Fix pop IR by @smonicas in https://github.com/crytic/slither/pull/1905\r\n* Parse assembly in modifier by @smonicas in https://github.com/crytic/slither/pull/1896\r\n* Improve tuple analysis for unused-return detector by @smonicas in https://github.com/crytic/slither/pull/1861\r\n* Uninitialized-local don't report variable in loop header by @smonicas in https://github.com/crytic/slither/pull/1911\r\n* Make type information of NewArray more precise by @Troublor in https://github.com/crytic/slither/pull/1784\r\n* Catch AssertionError and log context and raise again while parsing by @duelinggalois in https://github.com/crytic/slither/pull/1873\r\n* Fix generate_source_to_evm_ins_mapping by @A-23187 in https://github.com/crytic/slither/pull/1567\r\n* Local variable location fix by @Tiko7454 in https://github.com/crytic/slither/pull/1942\r\n* Fix: make _convert_to_structure_to_list return a type instead of an ElementaryType's `type` field by @kevinclancy in https://github.com/crytic/slither/pull/1935\r\n* Detect when ether is sent in Yul by @smonicas in https://github.com/crytic/slither/pull/1909\r\n* Fix bytes pop ir by @smonicas in https://github.com/crytic/slither/pull/1926\r\n* Do not recommend changing mutability for abstract contracts by @0xalpharush in https://github.com/crytic/slither/pull/1952\r\n* Improve try-catch parsing by @smonicas in https://github.com/crytic/slither/pull/1862\r\n* Fix yul function calls by @smonicas in https://github.com/crytic/slither/pull/1917\r\n* Optimizations for similar_variables.py by @0xGusMcCrae in https://github.com/crytic/slither/pull/1945\r\n* Inform user if inheritance cannot be resolved by @0xalpharush in https://github.com/crytic/slither/pull/1956\r\n* Handle if crytic-compile returns an empty ast by @smonicas in https://github.com/crytic/slither/pull/1961\r\n* Reduce false positives on modifying storage array by value detector by @bossjoker1 in https://github.com/crytic/slither/pull/1962\r\n* Docs: update recommendation for msg.value-inside-a-loop by @PaulRBerg in https://github.com/crytic/slither/pull/1971\r\n* Use current scope instead of parent scope to determine if arith. is checked by @0xalpharush in https://github.com/crytic/slither/pull/1951\r\n* Improved `is_function_modified` in upgradeability util by @webthethird in https://github.com/crytic/slither/pull/1938\r\n* Perform cross-contract taint analysis from diff of two upgrade versions by @webthethird in https://github.com/crytic/slither/pull/1816\r\n* Additional optimizations for similar_variables.py by @0xGusMcCrae in https://github.com/crytic/slither/pull/1980\r\n* Fix/canonical event name by @0xxfu in https://github.com/crytic/slither/pull/1976\r\n* Fixed issue which disallowed using operator[] with TopLevelVariables by @Tiko7454 in https://github.com/crytic/slither/pull/1968\r\n\r\n\r\n## New Contributors\r\n* @aga7hokakological made their first contribution in https://github.com/crytic/slither/pull/1824\r\n* @DarrenChangJR made their first contribution in https://github.com/crytic/slither/pull/1848\r\n* @ydm made their first contribution in https://github.com/crytic/slither/pull/1713\r\n* @daog1 made their first contribution in https://github.com/crytic/slither/pull/1892\r\n* @0xGusMcCrae made their first contribution in https://github.com/crytic/slither/pull/1898\r\n* @duelinggalois made their first contribution in https://github.com/crytic/slither/pull/1873\r\n* @A-23187 made their first contribution in https://github.com/crytic/slither/pull/1567\r\n* @Tiko7454 made their first contribution in https://github.com/crytic/slither/pull/1942\r\n* @kevinclancy made their first contribution in https://github.com/crytic/slither/pull/1935\r\n* @PaulRBerg made their first contribution in https://github.com/crytic/slither/pull/1971\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.9.3...0.9.4\r\n\r\n",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.9.4",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.9.4",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.9.4",
                "url": "https://api.github.com/repos/crytic/slither/releases/109954003",
                "release_id": 109954003,
                "date_created": "2023-06-26T18:33:34Z",
                "date_published": "2023-06-26T18:40:46Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/95446481",
                "tag": "0.9.3",
                "name": "v0.9.3",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "# 0.9.3 - 2023-03-20\r\n\r\nThis release adds a new detector for high complexity functions, improves Echidna's performance (on enums), adds support for less common and new Solidity features (ternary operations, `using for`, and yul support), and improves `slither-read-storage` and existing detectors.\r\n\r\nAdditionally, we're so excited that Slither has been nominated in the latest round of [@optimismFND](https://twitter.com/optimismFND) 's RetroPGF's program! If you vote for these projects, please select [Slither](https://app.optimism.io/retropgf-discovery/0xA6826463a53bBe3d673f7e61E94a6099581FfC7d) as one of your favorite tools from now until March 23!\r\n\r\nWe have also opened a GitHub [discussion page](https://github.com/crytic/slither/discussions) for Slither to more easily communicate with our community of users and developers.\r\n\r\nFinally, we would like to thank all of our external contributors:\r\n* @bart1e\r\n* @CodeSandwich\r\n* @Troublor\r\n* @sidarth16 \r\n\r\n## Added\r\n- Detector: High cyclomatic complexity  @bart1e in https://github.com/crytic/slither/pull/1618\r\n- Clarify requirement of installing solc by @CodeSandwich in https://github.com/crytic/slither/pull/1599\r\n- Slither-check-upgradeability: support complex datatypes by @webthethird in https://github.com/crytic/slither/pull/1535\r\n- Add enums to echidna printer's list of constants by @samalws in https://github.com/crytic/slither/pull/1665\r\n- Add cyclomatic complexity to function-summary by @smonicas in https://github.com/crytic/slither/pull/1685\r\n- Add github pages docs by @0xalpharush in https://github.com/crytic/slither/pull/1656\r\n- Add issue template for trouble with installation by @0xalpharush in https://github.com/crytic/slither/pull/1623\r\n-  APIs\r\n   - Add unregister_detector by @sidarth16 in https://github.com/crytic/slither/pull/1722\r\n   -  Add unregister_printer by @sidarth16 in https://github.com/crytic/slither/pull/1724\r\n \r\n## Changed\r\n- Detectors improvements\r\n   - Detect local shadowing of return vars by @0xalpharush in https://github.com/crytic/slither/pull/1510\r\n   - Consider constants in divide-before-multiply by @0xalpharush in https://github.com/crytic/slither/pull/1641\r\n   - Do not recommend to making strings immutable  by @0xalpharush in https://github.com/crytic/slither/pull/1639\r\n   - Restrict variable-scope detector to only solc 0.4.x by @0xalpharush in https://github.com/crytic/slither/pull/1731\r\n* Minor codex improvements by @montyly in https://github.com/crytic/slither/pull/1600\r\n* Minor API improvements by @montyly in https://github.com/crytic/slither/pull/1601\r\n* Use enum string formatting by @0xalpharush in https://github.com/crytic/slither/pull/1636\r\n* Add more types by @montyly in https://github.com/crytic/slither/pull/1624\r\n* Update list of external publications by @montyly in https://github.com/crytic/slither/pull/1738\r\n* Abstract contract property by @bsamuels453 in https://github.com/crytic/slither/pull/1679\r\n* Improve echidna printer for user defined types by @montyly in https://github.com/crytic/slither/pull/1690\r\n* Revert \"show ignored findings by default for checklist\" by @0xalpharush in https://github.com/crytic/slither/pull/1643\r\n* Improve tests from 1625 by @montyly in https://github.com/crytic/slither/pull/1741\r\n* Improve parsing of contract's comment by @montyly in https://github.com/crytic/slither/pull/1734\r\n* Update filter-paths help by @0xalpharush in https://github.com/crytic/slither/pull/1749\r\n* Slithir printer improve top level functions format by @smonicas in https://github.com/crytic/slither/pull/1744\r\n* Add issue template for false neg. and positive by @0xalpharush in https://github.com/crytic/slither/pull/1753\r\n* Make web3 required dependency  by @0xalpharush in https://github.com/crytic/slither/pull/1743\r\n* Update reentrancy_eth.py by @sidarth16 in https://github.com/crytic/slither/pull/1706\r\n- CI\r\n  - Run tests in parallel by @0xalpharush in https://github.com/crytic/slither/pull/1637\r\n  - Only run python linters when .py changed by @0xalpharush in https://github.com/crytic/slither/pull/1638\r\n  - Cancel action on new commits by @montyly in https://github.com/crytic/slither/pull/1661\r\n  - Improvements to GH actions by @montyly in https://github.com/crytic/slither/pull/1662\r\n  - Further CI improvements by @montyly in https://github.com/crytic/slither/pull/1663\r\n  - Update linter.yml name by @0xalpharush in https://github.com/crytic/slither/pull/1770\r\n  - Upgrade nix installation to fix CI installation by @0xalpharush in https://github.com/crytic/slither/pull/1711\r\n\r\n## Fixed\r\n* Fix ternary in nested expressions @0xalpharush in https://github.com/crytic/slither/pull/1650\r\n* Fix CI badge in README by @elopez in https://github.com/crytic/slither/pull/1603\r\n* Bugs fixed in strongly connected components and cyclomatic complexity algorithms by @bart1e in https://github.com/crytic/slither/pull/1617\r\n* 'Not in UPPER_CASE_WITH_UNDERSCORES' warning for public constant vars removed by @bart1e in https://github.com/crytic/slither/pull/1530\r\n* Missing references fix by @bart1e in https://github.com/crytic/slither/pull/1604\r\n* Fix support for constant variable lookup in yul by @montyly in https://github.com/crytic/slither/pull/1611\r\n* Uninitialized storage fix by @0xalpharush in https://github.com/crytic/slither/pull/1725\r\n* Fix stdout capture by @0xalpharush in https://github.com/crytic/slither/pull/1740\r\n* Move assertion to proper branch by @montyly in https://github.com/crytic/slither/pull/1691\r\n* Include salt in operation, `NewContract`, reads by @0xalpharush in https://github.com/crytic/slither/pull/1762\r\n* Fix declaration and evm printer by @0xalpharush in https://github.com/crytic/slither/pull/1765\r\n* Fix IR operation when initializing array with one-element array literal  by @Troublor in https://github.com/crytic/slither/pull/1761\r\n* WIKI URL fixed by @bart1e in https://github.com/crytic/slither/pull/1695\r\n* Fix using for global function name collision by @0xalpharush in https://github.com/crytic/slither/pull/1625\r\n\r\n## New Contributors\r\n* @CodeSandwich made their first contribution in https://github.com/crytic/slither/pull/1599\r\n* @samalws made their first contribution in https://github.com/crytic/slither/pull/1665\r\n* @sidarth16 made their first contribution in https://github.com/crytic/slither/pull/1722\r\n* @bsamuels453 made their first contribution in https://github.com/crytic/slither/pull/1679\r\n* @Troublor made their first contribution in https://github.com/crytic/slither/pull/1761\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.9.2...0.9.3",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.9.3",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.9.3",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.9.3",
                "url": "https://api.github.com/repos/crytic/slither/releases/95446481",
                "release_id": 95446481,
                "date_created": "2023-03-17T19:11:35Z",
                "date_published": "2023-03-20T17:34:20Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/88465515",
                "tag": "0.9.2",
                "name": "v0.9.2",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "# 0.9.2 - 2023-01-11\r\nThis release integrates [codex](https://openai.com/blog/openai-codex/) into Slither via two features: \r\n- `slither-documentation`, a tool to auto-generate natspec for every function. See the usage on [`solmate`](https://github.com/montyly/solmate/pull/1).\r\n- the `codex` detector, which uses GPT3 to find vulnerabilities. This detector is not run by default and requires an explicit opt-in by using the `--codex` flag.\r\n\r\nFor both features, the environment variable [`OPENAI_API_KEY`](https://beta.openai.com/account/api-keys) must be set. These features are experimental, and we recommend reading OpenAI's [ToS](https://openai.com/api/policies/terms/), in particular, if you are using it on a private codebase. We will be exploring other areas where we can leverage LLM within Slither, and we would love the [community's feedback and ideas](https://github.com/crytic/slither/issues/1587).\r\n\r\nAdditionally, this release contains two new detectors, and refinements to existing detectors. This includes a better handling of `nonReentrant` for reentrancy detection, lowering the number of false alarms. Finally, this release contains several bug fixes and improvements for Solidity features such as \"using for\" directives and user defined value types.\r\n\r\nWe would like to thank all of our external contributors:\r\n-@ardislu\r\n-@bart1e\r\n-@devtooligan\r\n-@devtooligan\r\n-@mds1\r\n-@Pavan-Nambi\r\n-@pcaversaccio\r\n-@plotchy\r\n\r\nThanks to the community effort, slither has now reached 100+ contributors. \r\n\r\n## Added\r\n* Add Codex vulnerability detector by @montyly and @devtooligan in https://github.com/crytic/slither/pull/1498, https://github.com/crytic/slither/pull/1499\r\n* Use Codex to generate solidity documentation by @montyly in https://github.com/crytic/slither/pull/1494\r\n* New detectors: \r\n   - recommend reading variable without `this` keyword to reduce STATICCALLs by @0xalpharush in https://github.com/crytic/slither/pull/1484\r\n   - recommend making state variables immutable by @0xalpharush in https://github.com/crytic/slither/pull/1455\r\n* Enable ignore comments for sections of code by @mds1 in https://github.com/crytic/slither/pull/1461, https://github.com/crytic/slither/pull/1483\r\n    - `// slither-disable-start [detector] ... // slither-disable-end [detector] `\r\n* Mark contract as proxy/ upgradeable with custom comments by @webthethird and @montyly in https://github.com/crytic/slither/pull/1517, https://github.com/crytic/slither/pull/1522\r\n    - `@custom:security isDelegatecallProxy`, `@custom:security isUpgradeable`, `@custom:security version name=[v1]`\r\n* Support ternaries in function call options by @0xalpharush in https://github.com/crytic/slither/pull/1501\r\n* Fold binary expressions with constant operands for fuzzing guidance by @0xalpharush in https://github.com/crytic/slither/pull/1508\r\n* Support `abi.encodeCall` by @plotchy in https://github.com/crytic/slither/pull/1460\r\n* Add `VULNERABLE_SOLC_VERSIONS` to detectors by @devtooligan and @montyly in https://github.com/crytic/slither/pull/1477, https://github.com/crytic/slither/pull/1485\r\n* Filter upgradeability checks by name/impact by @webthethird in https://github.com/crytic/slither/pull/1532\r\n* Add `--no-fail` mode for echidna printer by @montyly in https://github.com/crytic/slither/pull/1571\r\n* Create CODEOWNERS by @montyly in https://github.com/crytic/slither/pull/1561\r\n* slither-doctor: check PATH configuration by @elopez in https://github.com/crytic/slither/pull/1550\r\n\r\n## Changed\r\n* Improve reentrancy detectors by @montyly in https://github.com/crytic/slither/pull/1351\r\n    * Functions with `nonReentrant` modifiers will be filtered out unless a risk of cross-function reentrancy is detected\r\n* Improve support using for directive by @smonicas in https://github.com/crytic/slither/pull/1378\r\n* Improve support using for with aliasing by @smonicas in https://github.com/crytic/slither/pull/1563\r\n* Replace pysha3 with pycryptodome by @0xalpharush in https://github.com/crytic/slither/pull/1454\r\n* Remove unused PUSH operation from IR by @0xalpharush in https://github.com/crytic/slither/pull/1489\r\n* Sort printer outputs for determinism by @bart1e in https://github.com/crytic/slither/pull/1513\r\n* Use latest setuptools in CI by @montyly in https://github.com/crytic/slither/pull/1542\r\n* Update to the latest crytic-compile source unit API by @montyly in https://github.com/crytic/slither/pull/1528\r\n* Install only necessary solc versions in CI by @Pavan-Nambi in https://github.com/crytic/slither/pull/1546\r\n* Run tests by specific ID by @0xalpharush in https://github.com/crytic/slither/pull/1555\r\n\r\n## Fixed\r\n* Fix broken links by @pcaversaccio in https://github.com/crytic/slither/pull/1457\r\n* Fix typo in divide before multiply by @0xalpharush in https://github.com/crytic/slither/pull/1449\r\n* Fix dapp CI integration test  by @montyly in https://github.com/crytic/slither/pull/1496\r\n* Improve protected variable detector by @montyly in https://github.com/crytic/slither/pull/1497\r\n* Update missing events wiki by @0xalpharush in https://github.com/crytic/slither/pull/1487\r\n* Copy event arguments during ssa conversion by @0xalpharush in https://github.com/crytic/slither/pull/1488\r\n* Fix `ExtraVariablesProxy` upgradeability check by @webthethird in https://github.com/crytic/slither/pull/1504\r\n* Fix `naming-convention` to flag single letter `O` or `I` variable by @ardislu in https://github.com/crytic/slither/pull/1470\r\n* Fix top level struct parsing by @smonicas in https://github.com/crytic/slither/pull/1545\r\n* Upgradeability: include inherited private variables, ignore immutables by @0xalpharush in https://github.com/crytic/slither/pull/1451\r\n* Fix and re-enable etherscan test by @elopez in https://github.com/crytic/slither/pull/1556\r\n* Fix using for directives in libraries by @smonicas in https://github.com/crytic/slither/pull/1568\r\n* Remove incomplete submodule by @elopez in https://github.com/crytic/slither/pull/1564\r\n* Handle malformed alias solc<0.6.0 by @0xalpharush in https://github.com/crytic/slither/pull/1547\r\n* Improve Yul parsing by @montyly in https://github.com/crytic/slither/pull/1559\r\n* Fix type conversion of user defined value types by @0xalpharush in https://github.com/crytic/slither/pull/1573\r\n* Resolve error referenced as member of contract by @0xalpharush in https://github.com/crytic/slither/pull/1574\r\n\r\n\r\n## New Contributors\r\n* @ardislu made their first contribution in https://github.com/crytic/slither/pull/1470\r\n* @bart1e made their first contribution in https://github.com/crytic/slither/pull/1513\r\n* @devtooligan made their first contribution in https://github.com/crytic/slither/pull/1477\r\n* @mds1 made their first contribution in https://github.com/crytic/slither/pull/1461\r\n* @Pavan-Nambi made their first contribution in https://github.com/crytic/slither/pull/1546\r\n* @webthethird made their first contribution in https://github.com/crytic/slither/pull/1504\r\n\r\n**Full Changelog**: https://github.com/crytic/slither/compare/0.9.1...0.9.2",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.9.2",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.9.2",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.9.2",
                "url": "https://api.github.com/repos/crytic/slither/releases/88465515",
                "release_id": 88465515,
                "date_created": "2023-01-11T16:50:51Z",
                "date_published": "2023-01-11T17:06:54Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/81360108",
                "tag": "0.9.1",
                "name": " v0.9.1",
                "author": {
                    "name": "0xalpharush",
                    "type": "User"
                },
                "description": "# 0.9.1 - 2022-11-03\r\nThis release contains several bug fixes, and a new tool - `slither-doctor` - to help debugging slither.\r\n\r\nWe would like to thank all our external contributors:\r\n- @emretepedev\r\n- @JorgeAtPaladin\r\n- @mds1\r\n- @medariox\r\n- @PatrickAlphaC\r\n- @zhiqiangxu\r\n\r\n## Added\r\n- `slither-doctor`: a new tool to help diagnose issues with Slither (https://github.com/crytic/slither/pull/1384)\r\n\r\n## Changed\r\n- Add contract types in constant optimization detector (https://github.com/crytic/slither/pull/1443)\r\n- Remove redundant calls (https://github.com/crytic/slither/pull/1434)\r\n- Missing text in solc version recommendation (https://github.com/crytic/slither/pull/1406)\r\n- `slither-flat` support for top level objects (#1441 )\r\n\r\n## Fixed\r\n- Missing inherited storage slots in `slither-read-storage` (https://github.com/crytic/slither/pull/1444)\r\n- Triage mode not working properly (https://github.com/crytic/slither/pull/1435)\r\n- An incorrect parsing of library events (https://github.com/crytic/slither/pull/1442)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.9.1",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.9.1",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.9.1",
                "url": "https://api.github.com/repos/crytic/slither/releases/81360108",
                "release_id": 81360108,
                "date_created": "2022-11-03T19:51:51Z",
                "date_published": "2022-11-03T20:26:55Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/74832555",
                "tag": "0.9.0",
                "name": "v0.9.0",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.9.0 - 2022-10-05\r\nThis release contains:\r\n- 3 new detectors\r\n- Reduction of false positives in detectors\r\n- Refactoring that will help us adding new features\r\n- Breaking changes in the internal APIs\r\n- Fixes for several bugs and improvements to testing\r\n\r\nThis release moves the Python requirement to 3.8.\r\n\r\nWe would like to thank all our external contributors:\r\n- [BoboTiG](https://github.com/BoboTiG)\r\n- [CharesFang](https://github.com/CharesFang)\r\n- [TheStarBoys](https://github.com/TheStarBoys)\r\n- [edag94](https://github.com/edag94)\r\n- [h00p30](https://github.com/h00p30)\r\n- [htadashi](https://github.com/htadashi)\r\n- [jmhickman](https://github.com/jmhickman)\r\n- [pcaversaccio](https://github.com/pcaversaccio)\r\n- [plotchy](https://github.com/plotchy)\r\n- [sveitser](https://github.com/sveitser)\r\n- [vladyan18](https://github.com/vladyan18)\r\n- [zjuchenyuan](https://github.com/zjuchenyuan)\r\n\r\nFor Foundry users: we do not support multiple compiler versions at the moment (see https://github.com/foundry-rs/foundry/issues/3450).\r\n\r\n## Refactored\r\n- The source mapping API, to ease integration with third parties (https://github.com/crytic/slither/pull/877) *API breaking change*\r\n- Solidity signature API (https://github.com/crytic/slither/pull/1323, https://github.com/crytic/slither/pull/1349, https://github.com/crytic/slither/pull/1356) *API breaking change*\r\n- `slither-read-storage` to make it easier to maintain (https://github.com/crytic/slither/pull/1311)\r\n\r\n## Added\r\n- Detector:\r\n   - `arbitrary-send-erc20` (https://github.com/crytic/slither/pull/1025)\r\n   - `arbitrary-send-erc20-permit` (https://github.com/crytic/slither/pull/1025)\r\n   - `domain-separator-collision` (https://github.com/crytic/slither/pull/1334)\r\n- Printer\r\n   - Dominator tree (https://github.com/crytic/slither/pull/1342)\r\n- New flags\r\n   - `--checklist`, to produce a markdown containing slither's results (https://github.com/crytic/slither/pull/1190)\r\n   - `--convert-library-to-internal` in `slither-flat` (https://github.com/crytic/slither/issues/1298) \r\n- Hash of known codebase to detect known libraries (https://github.com/crytic/slither/pull/1134)\r\n- Support for ERC1363, ERC4524 in `slither-check-erc`(https://github.com/crytic/slither/pull/1274)\r\n- Solidity support\r\n   - `IdentifierPath`(https://github.com/crytic/slither/pull/1227)\r\n   - min/max support for enum (https://github.com/crytic/slither/pull/1276)\r\n   - Top level enum (https://github.com/crytic/slither/pull/1300)\r\n- More python type hints (https://github.com/crytic/slither/pull/1388)\r\n- Testing\r\n  - Tests for unification of path filtering across POSIX and Windows (https://github.com/crytic/slither/pull/1303)\r\n  - Detectors tests (https://github.com/crytic/slither/pull/858)\r\n  - New SSA tests (https://github.com/crytic/slither/pull/1205)\r\n  - Unit tests for new solc version (https://github.com/crytic/slither/pull/1268) \r\n- `pip-audit` in the CI (https://github.com/crytic/slither/pull/1243)\r\n- Improve `setup.py` with dev deps (https://github.com/crytic/slither/pull/1178)\r\n- New API to detect if a type is dynamic`Type.is_dynamic` (https://github.com/crytic/slither/pull/1175)\r\n\r\n## Changed\r\n- Change the exit code returned by Slither (https://github.com/crytic/slither/pull/1278, https://github.com/crytic/slither/pull/1359)  If you are using Slither in a CI, check out the new flags `--fail-pedantic`/`--fail-high`/`--fail-medium`/ ... and `--no-fail-pedantic`. The default behavior is `--fail-pedantic`, but this will be updated to be `--no-fail-pedantic` in a future release\r\n- Updated the solc-version recommendations (https://github.com/crytic/slither/pull/1389)\r\n- Remove FPs on the `external-functions` detectors (https://github.com/crytic/slither/pull/1318)\r\n- Remove FPs on the `unprotected_upgradeable` detector (https://github.com/crytic/slither/pull/1344)\r\n- Remove immutable variable from the variable order printer (https://github.com/crytic/slither/pull/1184)\r\n- `too-many-digits` detector: ignore checksummed address (https://github.com/crytic/slither/pull/1193)\r\n- Better python regex (https://github.com/crytic/slither/pull/1200, https://github.com/crytic/slither/pull/1185)\r\n- Improvements to the dockerfile (https://github.com/crytic/slither/pull/1242, https://github.com/crytic/slither/pull/1335, https://github.com/crytic/slither/pull/1369)\r\n- Unify path across POSIX and Windows (https://github.com/crytic/slither/pull/1196)\r\n- Improve debug info in case of name reuse (https://github.com/crytic/slither/pull/870)\r\n- Improvements to the `exclude-dependencies` flag (https://github.com/crytic/slither/pull/1317)\r\n- Improvements to the `function-id printer` (https://github.com/crytic/slither/pull/886)\r\n- Improvements to the constant parsing (https://github.com/crytic/slither/pull/1377)\r\n- Improvements to the support of virtual modifier (https://github.com/crytic/slither/pull/1387)\r\n- Use of the latest crytic-compile version (https://github.com/crytic/slither/commit/a008df72bc8ffd6b220ac775d6fd5b9048d00e1d)\r\n\r\n## Fixed\r\n- Documentation and typos (https://github.com/crytic/slither/pull/1233, https://github.com/crytic/slither/pull/1149, https://github.com/crytic/slither/pull/1239, https://github.com/crytic/slither/pull/1257, https://github.com/crytic/slither/pull/1339, https://github.com/crytic/slither/pull/1386, https://github.com/crytic/slither/pull/1394, https://github.com/crytic/slither/pull/1310)\r\n- Fail if there is not results in sarif output (https://github.com/crytic/slither/pull/1229)\r\n- Disable coloring if output is not a terminal (https://github.com/crytic/slither/pull/1244)\r\n- `slither-check-erc` output (https://github.com/crytic/slither/pull/1277)\r\n- Custom error with library support (https://github.com/crytic/slither/pull/1267)\r\n- IR related issues (https://github.com/crytic/slither/pull/1230, https://github.com/crytic/slither/pull/1306, https://github.com/crytic/slither/pull/1188, https://github.com/crytic/slither/pull/1348, https://github.com/crytic/slither/pull/1347)\r\n- Incorrect type in `function.entry_point` (https://github.com/crytic/slither/pull/1307)\r\n- `contract_kind` assignment (https://github.com/crytic/slither/pull/1308)\r\n- Support for user defined value (https://github.com/crytic/slither/pull/1271)\r\n- Bugs in yul parsing (https://github.com/crytic/slither/pull/1395)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.9.0",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.9.0",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.9.0",
                "url": "https://api.github.com/repos/crytic/slither/releases/74832555",
                "release_id": 74832555,
                "date_created": "2022-10-05T13:15:17Z",
                "date_published": "2022-10-05T13:43:15Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/64967875",
                "tag": "0.8.3",
                "name": "v0.8.3",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.8.3 - 2022-04-21 \r\n\r\nThis release lets users to enhance Slither through code comments (see example below), adds a new tool to read variable storage values on-chain (`slither-read-storage`), removes false positives in existing detectors, improves Solidity 0.8 support, and fixes several bugs. Slither also now supports Foundry.\r\n\r\nPlease use our [`slither-action`](https://github.com/crytic/slither-action) for CI integration!\r\n\r\n### Enhancing Slither through code comments\r\n\r\nIn the following code:\r\n- `@custom:security non-reentrant` before the variable declaration will indicate to Slither that the external calls from this variable are non-reentrant\r\n- `@custom:security write-protection=\"onlyOwner()\"` will indicate to Slither that writing to this variable must be done through `onlyOwner`\r\n```solidity\r\ncontract ReentrancyAndWrite{\r\n\r\n    /// @custom:security non-reentrant\r\n    /// @custom:security write-protection=\"onlyOwner()\"\r\n    I external_contract;\r\n\r\n    modifier onlyOwner(){\r\n        // lets assume there is an access control\r\n        _;\r\n    }   \r\n\r\n    mapping(address => uint) balances;\r\n\r\n    function withdraw() public{\r\n        uint balance = balances[msg.sender];\r\n\r\n        external_contract.external_call();\r\n\r\n        balances[msg.sender] = 0;\r\n        payable(msg.sender).transfer(balance);\r\n    }\r\n    \r\n    function set_protected() public onlyOwner(){\r\n        external_contract = I(msg.sender);\r\n    }  \r\n\r\n    function set_not_protected() public{\r\n        external_contract = I(msg.sender);\r\n    }\r\n}\r\n```\r\n\r\nPlease let us know what you think of this code comment feature! Share your ideas on Github, or join us on Slack. We're looking for new use cases and feedback.\r\n\r\nThanks to our contributors for this release:\r\n- @GitHubPang\r\n- @JulissaDantes\r\n- @justforfunya\r\n\r\n## Added\r\n- Enhanced analyses through code comments (https://github.com/crytic/slither/pull/1089)\r\n- `slither-read-storage` (https://github.com/crytic/slither/pull/968)\r\n- New printer to identify misuse of `whenNotPaused` (https://github.com/crytic/slither/pull/1128)\r\n- [slither-action](https://github.com/crytic/slither-action) in the README (https://github.com/crytic/slither/pull/1053)\r\n- Solidity support\r\n    - user defined types (https://github.com/crytic/slither/pull/1135)\r\n    - top level variables (https://github.com/crytic/slither/pull/1032)\r\n    - `string.concat` (https://github.com/crytic/slither/pull/1086)\r\n    - `.offset/length` in yul (https://github.com/crytic/slither/pull/1085)\r\n   - unary operation on constant (https://github.com/crytic/slither/pull/1094)\r\n- Support for ERC4626, 2612 in `slither-check-erc` (https://github.com/crytic/slither/pull/1111)\r\n- pip-audit in the CI (https://github.com/crytic/slither/pull/1006)\r\n- Template for github issue (https://github.com/crytic/slither/pull/1044, https://github.com/crytic/slither/pull/1083)\r\n\r\n## Improved\r\n- Remove FPs in detectors:\r\n  - `dead-code` (https://github.com/crytic/slither/pull/1040)\r\n  - Reentrancy in constructor (https://github.com/crytic/slither/pull/1048)\r\n  - `reentrancy-no-eth ` staticall (https://github.com/crytic/slither/pull/1119)\r\n  - `unprotected-upgrade` (https://github.com/crytic/slither/pull/1046, https://github.com/crytic/slither/pull/1122)\r\n- Solidity support\r\n   - custom error lookup (https://github.com/crytic/slither/pull/1156)\r\n   - Function lookup for bytes (https://github.com/crytic/slither/pull/1163)\r\n   - ternary operator (https://github.com/crytic/slither/pull/1162)\r\n   - Top-level structure with import (https://github.com/crytic/slither/pull/1068)\r\n   - Top level with custom error (https://github.com/crytic/slither/pull/1131)\r\n- Notification when the config file is missing (https://github.com/crytic/slither/pull/1041, https://github.com/crytic/slither/pull/1054)\r\n- Github super linter improvements (https://github.com/crytic/slither/pull/1023, https://github.com/crytic/slither/pull/1045, https://github.com/crytic/slither/pull/1088, https://github.com/crytic/slither/pull/1157)\r\n- slither-check-erc output (https://github.com/crytic/slither/pull/1016)\r\n- Typo in missing zero validation detector (https://github.com/crytic/slither/pull/1037)\r\n- `slither-prop` support for builder (https://github.com/crytic/slither/pull/712)\r\n- Improved to the Echidna printer (https://github.com/crytic/slither/pull/878, https://github.com/crytic/slither/pull/1132)\r\n- Improve determinism for detector results (https://github.com/crytic/slither/pull/1049)\r\n- Python type hint (https://github.com/crytic/slither/pull/1055)\r\n- Unit tests for the AST parsing (https://github.com/crytic/slither/pull/1069, https://github.com/crytic/slither/pull/1118, https://github.com/crytic/slither/pull/1101)\r\n- Auto install of solc versions in the CI (https://github.com/crytic/slither/pull/1073)\r\n- Show ignored findings by default for the checklist (https://github.com/crytic/slither/pull/1082)\r\n- Typo in `slither-mutate` (https://github.com/crytic/slither/pull/1104)\r\n- Move to f-strings (https://github.com/crytic/slither/pull/1107, https://github.com/crytic/slither/pull/1110)\r\n- Multiple minors improvements to `slither-flat` (https://github.com/crytic/slither/pull/1125)\r\n- Prioritize ignore comment over exclude dependencies (https://github.com/crytic/slither/pull/1120)\r\n- Windows support (https://github.com/crytic/slither/pull/1065, https://github.com/crytic/slither/pull/1137)\r\n- [Crytic-compile@0.2.3](https://github.com/crytic/crytic-compile/releases/tag/0.2.3) - which adds Foundry support\r\n\r\n## Fixed\r\n- Missing json output for printers https://github.com/crytic/slither/pull/1012\r\n- Infinite loop in the RTLO detector (https://github.com/crytic/slither/pull/1108)\r\n- Infinite recursion in `show_ignore_findings` (https://github.com/crytic/slither/pull/1092)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.8.3",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.8.3",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.8.3",
                "url": "https://api.github.com/repos/crytic/slither/releases/64967875",
                "release_id": 64967875,
                "date_created": "2022-04-21T16:57:52Z",
                "date_published": "2022-04-21T17:00:40Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/54973362",
                "tag": "0.8.2",
                "name": "v0.8.2",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.8.2 - 2021-12-10\r\nThis release adds two new detectors that catch recent vulnerabilities in SushiSwap and Opyn vulnerabilities, and significantly improves Solidity 0.8 support (including top-level functions, custom errors, and immutable variables). Additionally, the code objects have now scope-file information, which improves Slither on codebases where contract or structure name are repeated.\r\n\r\nFor their contributions, we would like to thank: \r\n- @htadashi,\r\n- @bearpebble,\r\n- @jesus-eff,\r\n- and @axic for his numerous bugs reports.\r\n\r\n## Added\r\n- Two new detectors\r\n   - delegatecall inside a loop (https://github.com/crytic/slither/pull/992) (SushiSwap vuln)\r\n   - msg.value inside a loop (https://github.com/crytic/slither/pull/991) (Opyn vuln)\r\n- Support for top-level functions (https://github.com/crytic/slither/pull/945, https://github.com/crytic/slither/pull/949, https://github.com/crytic/slither/pull/987)\r\n- Support for immutable variables (https://github.com/crytic/slither/pull/946)  \r\n- Support for custom errors (https://github.com/crytic/slither/pull/947)\r\n- Info on how synchronize with crytic-compile in the contributing guidelines (https://github.com/crytic/slither/pull/994)\r\n\r\n## Changed\r\n- Improve calls-loop detector (https://github.com/crytic/slither/pull/925)\r\n- Improve costly-loop detector (https://github.com/crytic/slither/pull/926)\r\n- Improve support for units and globally available variables (https://github.com/crytic/slither/pull/985)\r\n- Improve strict-equality detector (https://github.com/crytic/slither/pull/952)\r\n- Add a function_language property to the function to determine if its a Solidity or Yul function (https://github.com/crytic/slither/pull/987)\r\n- Validate inputs of  `--markdown-root` flag (https://github.com/crytic/slither/pull/988)\r\n- Refactor the core objects to contain a file scope (https://github.com/crytic/slither/pull/990). This contains **breaking changes**\r\n- Update Solidity version recommendations (https://github.com/crytic/slither/pull/999)\r\n\r\n## Fixed\r\n- Docker build (https://github.com/crytic/slither/pull/967)\r\n- call-graph printer output (https://github.com/crytic/slither/pull/973)\r\n- `slither-flat` --convert-external and --convert-private flags (https://github.com/crytic/slither/pull/964)\r\n- Broken wiki link (https://github.com/crytic/slither/pull/986)\r\n- Multiple minor fixes (https://github.com/crytic/slither/pull/996, https://github.com/crytic/slither/pull/997)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.8.2",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.8.2",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.8.2",
                "url": "https://api.github.com/repos/crytic/slither/releases/54973362",
                "release_id": 54973362,
                "date_created": "2021-12-10T10:45:37Z",
                "date_published": "2021-12-10T10:53:50Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/47922794",
                "tag": "0.8.1",
                "name": "v0.8.1",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.8.1 - 2021-08-16\r\n\r\nThis release adds the SARIF support, which allows Slither to report issues through Github code scanning app. The github action will be released soon. In addition, the release brings many small issues and improvements to the detectors and tools.\r\n\r\nWe would like to thank our external contributors:\r\n- @enderphan94\r\n- @noahlitvin\r\n- @bernard-wagner\r\n\r\n## Added\r\n- Sarif support (https://github.com/crytic/slither/pull/918). \r\n- `slither-check-erc` add ERC1155 support (https://github.com/crytic/slither/commit/34a4ae1c2e2c9f2706319e85d59e431d4c57b62b)\r\n- Slither Rekt list (https://github.com/crytic/slither/commit/a2c5714238be910bd9ca2f26eab311acddaa48aa)\r\n- More type hints (https://github.com/crytic/slither/pull/906)\r\n\r\n## Changed\r\n- `slither-check-upgradeability`: improve heuristics to detect init functions (https://github.com/crytic/slither/pull/853)\r\n- `is_protected` heuristic (https://github.com/crytic/slither/pull/855)\r\n- Improve Abiencoderv2 detector (https://github.com/crytic/slither/pull/848)\r\n- Multiple minor improvements in https://github.com/crytic/slither/pull/856\r\n- Trophies.md list\r\n- Remove `crytic.io` notice (https://github.com/crytic/slither/commit/889d537dda0987ecc37de85a2e629580765c0d49)\r\n- Use `crytic-compile@0.2.1`, which adds BSC support, and fixes multiple bugs\r\n\r\n## Fixed\r\n- Bug in variable order printer (https://github.com/crytic/slither/pull/849)\r\n- Wrong type in `contract.py` (https://github.com/crytic/slither/pull/869)\r\n- Wrong wiki links (https://github.com/crytic/slither/pull/876)\r\n- `calldata` support (https://github.com/crytic/slither/pull/907)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.8.1",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.8.1",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.8.1",
                "url": "https://api.github.com/repos/crytic/slither/releases/47922794",
                "release_id": 47922794,
                "date_created": "2021-08-16T16:58:25Z",
                "date_published": "2021-08-16T17:15:38Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/42488010",
                "tag": "0.8.0",
                "name": "v0.8.0",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.8.0 - 2021-05-07\r\n\r\nThis release significantly improves the support for Solidity 0.8 and adds detectors for 'unused-return-transfers', 'dead-code', and 'write-after-write'. Slither now supports multiple compilation units which solves many issues when using hardhat.\r\n\r\nThanks @sobolev-igor for his contribution!\r\n\r\n## Added\r\n- Support for multiple compilation units (https://github.com/crytic/slither/pull/823) (**breaking changes**)\r\n- Support for nodes scope in the IR (https://github.com/crytic/slither/pull/836) (**breaking changes**)\r\n- Support for `block.chainid` (https://github.com/crytic/slither/pull/821/files)\r\n- Support for `.slot` / `.offset` in YUL (https://github.com/crytic/slither/pull/833)\r\n- Detectors\r\n  - `unused-return-transfers` - specialization of the `unused-return` to help flagging dangerous tokens transfers (https://github.com/crytic/slither/pull/822)\r\n  - `dead-code` (https://github.com/crytic/slither/pull/838)\r\n  - `write-after-write` (https://github.com/crytic/slither/pull/841)\r\n\r\n## Changed\r\n- Improve checklist format (https://github.com/crytic/slither/pull/819)\r\n- Remove global variables (https://github.com/crytic/slither/pull/828)\r\n- Restructure tests folder (https://github.com/crytic/slither/pull/825)\r\n- Improve constant folding (https://github.com/crytic/slither/pull/830)\r\n- Improve AST parsing test (https://github.com/crytic/slither/pull/832)\r\n- Use pylint 2.8.2 (https://github.com/crytic/slither/pull/798)\r\n- Use crytic-compile 0.2.0 (https://github.com/crytic/crytic-compile/releases/tag/0.2.0)\r\n\r\n## Fixed\r\n- Type parsing for Solidity 0.8 (https://github.com/crytic/slither/pull/817)\r\n- Incorrect type conversion on library lookup (https://github.com/crytic/slither/pull/827)\r\n- Multiple minor fixes introduced since 0.7.1 (https://github.com/crytic/slither/pull/842)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.8.0",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.8.0",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.8.0",
                "url": "https://api.github.com/repos/crytic/slither/releases/42488010",
                "release_id": 42488010,
                "date_created": "2021-05-07T14:50:21Z",
                "date_published": "2021-05-07T14:57:23Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/40595818",
                "tag": "0.7.1",
                "name": "v0.7.1",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.7.1 - 2021-03-29\r\n\r\nThis release improves the `controlled-array-length`/`solc-version` detectors. \r\n\r\nWe are now listing the public bugs found by Slither in our [Trophies list](https://github.com/crytic/slither/blob/master/trophies.md). Please contribute if you found vulnerabilities using Slither. It will help us to improve the tool!\r\n\r\nWe are currently investigating issues with `hardhat` support (https://github.com/crytic/crytic-compile/issues/164). In the meantime, `hardhat` should be considered only partially supported.\r\n\r\nThank @gnattishness for his contribution to this release!\r\n\r\n## Added\r\n- List of [public vulnerabilities](https://github.com/crytic/slither/blob/master/trophies.md) found by slither (https://github.com/crytic/slither/pull/764)\r\n- Gwei support (https://github.com/crytic/slither/pull/799)\r\n- Better support for Solidity 0.8 `IdentifierPath` (https://github.com/crytic/slither/pull/815)\r\n\r\n## Changed\r\n- Uninitialized local/state variable doc (https://github.com/crytic/slither/pull/801)\r\n- Support for `stop()` in yul (https://github.com/crytic/slither/pull/802)\r\n- Solc versions recommendations (https://github.com/crytic/slither/pull/812)\r\n- Remove false positive on `controlled-array-length` detector (https://github.com/crytic/slither/pull/813)\r\n- [crytic-compile 0.1.13](https://github.com/crytic/crytic-compile/releases/tag/0.1.13)\r\n\r\n## Fixed\r\n- Incorrect `function._can_send_eth` (internal) (https://github.com/crytic/slither/pull/747, https://github.com/crytic/slither/pull/756, https://github.com/crytic/slither/pull/758)\r\n- Inheritance graph output (https://github.com/crytic/slither/pull/729, https://github.com/crytic/slither/pull/766)\r\n- Bug for top-level user-defined types (https://github.com/crytic/slither/pull/786)\r\n- slither-flat entry point (https://github.com/crytic/slither/pull/791)\r\n- Source mapping for parameter/return in function definition (https://github.com/crytic/slither/pull/800)\r\n- Multiple issues with the Echidna printer (https://github.com/crytic/slither/pull/763)\r\n- Support for standalone `return;` statement with solc > 0.7 (https://github.com/crytic/slither/pull/796)\r\n- Signed integer type propagation (https://github.com/crytic/slither/pull/810)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.7.1",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.7.1",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.7.1",
                "url": "https://api.github.com/repos/crytic/slither/releases/40595818",
                "release_id": 40595818,
                "date_created": "2021-03-29T17:32:59Z",
                "date_published": "2021-03-29T17:44:12Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/35494337",
                "tag": "0.7.0",
                "name": "v0.7.0",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.7.0 - 2020-12-18\r\nThis release contains 26 new detectors, including a detector for [a recent bug in Aave](https://blog.trailofbits.com/2020/12/16/breaking-aave-upgradeability/) (`unprotected-upgrade`), deletion of mapping with structures (`mapping-deletion`), lack of events (`events-access`, `event-maths`), a shift-related issue on YUL (`incorrect-shift`), modifiers that can return the default value (`incorrect-modifier`), and multiple informational and compiler-related bugs. Additionally, it introduces the triage of results using inline comments. Use `// slither-disable-next-line DETECTOR_NAME` before a statement to disable the detector. Finally, we added the support for Solidity top-level objects.\r\n\r\nWe would like to thanks @josh-richardson for his contributions to the inline comment feature.\r\n\r\n## Added\r\n- 26 detectors (#725, https://github.com/crytic/slither/pull/732, https://github.com/crytic/slither/pull/736)\r\n  - `abiencoderv2-array`\r\n  - `array-by-reference`\r\n  - `assert-state-change`\r\n  - `controlled-array-length`\r\n  - `costly-loop`\r\n  - `events-access`\r\n  - `events-math`\r\n  - `function-init-state`\r\n  - `incorrect-modifier`\r\n  - `incorrect-unary`\r\n  - `incorrect-shift`\r\n  - `mapping-deletion`\r\n  - `missing-inheritance`\r\n  - `missing-zero-check`\r\n  - `multiple-constructors`\r\n  - `public-mappings-nested`\r\n  - `redundant-statements`\r\n  - `reused-constructor`\r\n  - `similar-names`\r\n  - `storage-array`\r\n  - `unimplemented-functions`\r\n  - `uninitialized-fptr-cst`\r\n  - `unprotected-upgrade`\r\n  - `variable-scope`\r\n  - `weak-prng`\r\n- Inline comment to suppress findings (#724)\r\n- (Partial) support for Solidity top-level objects (#728) **API BREAKING CHANGE**. All the related objects are now split between `ObjectContract` and `ObjectTopLevel` (ex: `FunctionContract` and `FunctionTopLevel`)\r\n\r\n## Changed\r\n- Use crytic-compile@0.1.12\r\n\r\n## Fixed\r\n- Printers filename related issues (#729, #726)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.7.0",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.7.0",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.7.0",
                "url": "https://api.github.com/repos/crytic/slither/releases/35494337",
                "release_id": 35494337,
                "date_created": "2020-12-18T19:46:14Z",
                "date_published": "2020-12-18T19:57:58Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/34945416",
                "tag": "0.6.15",
                "name": "v0.6.15",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.15 - 2020-12-07\r\n\r\nThis release adds several performance optimizations to Slither. From our limited benchmark on codebases where Slither takes more than 1 minute to run, the optimizations lead to 2x improvements on average and up to x14 in certain cases. We also fixed an indeterministic detector output issue that could interact poorly with CIs and improved legacy AST support. Finally, we made improvements to `slither-prop`.\r\n\r\nThanks to @elenadimitrova for helping us debug the indeterministic detector output issue.\r\n\r\nIf you want access to additional detectors, try [Crytic](https://crytic.io/). It has 96 total vulnerabilities detectors.\r\n\r\n## Addded\r\n- Hidden `--perf` flag (debug) (https://github.com/crytic/slither/pull/701)\r\n\r\n## Changed\r\n- Optimizations \r\n   - Use of `get_line_from_offset` from crytic-compile (see [crytic-compile@0.1.11](https://github.com/crytic/crytic-compile/releases/tag/0.1.11) release note). It impacts codebase with a large number of files\r\n   - Memoization for properties that are frequently used (https://github.com/crytic/slither/pull/703). It impacts all the codebases\r\n   - Rewrote the immediate dominator (https://github.com/crytic/slither/pull/705). It impacts functions with complex cfg\r\n   - Rewrote the fixpoint on the data dependencies (https://github.com/crytic/slither/pull/707). It impacts functions for which the fixpoint is difficult to reach\r\n- Use of [crytic-compile@0.1.11](https://github.com/crytic/crytic-compile/releases/tag/0.1.11). Among others, this improves hardhat and dapp support.\r\n- Multiple improvements to `slither-prop` (https://github.com/crytic/slither/pull/693, https://github.com/crytic/slither/pull/713)\r\n\r\n## Fixed\r\n- Removed recursion in `divide-before-multiply` (https://github.com/crytic/slither/pull/706)\r\n- Indeterministic output for multiple detectors (https://github.com/crytic/slither/issues/486). This might lead previously triaged results to appear again (the finding IDs can have been affected)\r\n- Parsing of comments in legacy ast for Solidity 0.6.3 - 0.6.10 (https://github.com/crytic/slither/pull/720). This mostly impacts `dapp` codebases.",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.15",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.15",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.15",
                "url": "https://api.github.com/repos/crytic/slither/releases/34945416",
                "release_id": 34945416,
                "date_created": "2020-12-07T19:22:36Z",
                "date_published": "2020-12-07T19:43:08Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/33843809",
                "tag": "0.6.14",
                "name": "v0.6.14",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.14 - 2020-11-12\r\n\r\nThis release improves support for Solidity 0.7 and fixes many bugs. We moved all our tests to `pytest` and significantly improved our parsing test coverage to help support multiple versions of Solidity.\r\n\r\nIf you'd like to help us improve Slither, please answer our [user survey](https://forms.gle/fFEgC9kWWxzEw2Fk7).\r\n\r\nAdditionally, we recently hosted a [community call](https://github.com/crytic/slither/issues/677) where we went through Slither's codebase, and showed its different components (see [the recording](https://www.youtube.com/watch?v=EUl3UlYSluU)).\r\n\r\nFinally, we would like to thank our contributors for reporting issues and helping us improve Slither:\r\n- @sobolev-igor\r\n- @moodysalem\r\n- @mrice32 \r\n- @gorgos  \r\n- @f97 \r\n- @token-joe \r\n\r\n## Added\r\n- Support for `type(X).min/max` (https://github.com/crytic/slither/pull/673)\r\n- Extensive parser tests (https://github.com/crytic/slither/pull/635, https://github.com/crytic/slither/pull/659, https://github.com/crytic/slither/pull/682, https://github.com/crytic/slither/pull/660)\r\n\r\n## Changed\r\n- Refactor existing detectors test suit to use pytest (https://github.com/crytic/slither/pull/656)\r\n- Use [`crytic-compile@0.1.10`](https://github.com/crytic/crytic-compile/releases/tag/0.1.10). This includes hardhat support, and improvements for waffle and buidler.\r\n- Support for comparison between function pointers (https://github.com/crytic/slither/pull/618)\r\n- Use black `19.10b0` instead of latest for Github's Super Linter (https://github.com/crytic/slither/pull/680)\r\n- IR push conversion (https://github.com/crytic/slither/pull/625)\r\n\r\n## Fixed\r\n- Multiple solc 0.7 parsing issues (https://github.com/crytic/slither/pull/630, https://github.com/crytic/slither/pull/642, https://github.com/crytic/slither/pull/654)\r\n- Use unique variable names for YUL variables (https://github.com/crytic/slither/pull/648)\r\n- CFG printer filename generation (https://github.com/crytic/slither/pull/633)\r\n- Loop CFG recovery issues (https://github.com/crytic/slither/pull/655)\r\n- Correctly link between nodes in the variables constructor step (https://github.com/crytic/slither/pull/632)\r\n- Wiki link for naming convention (https://github.com/crytic/slither/pull/651)\r\n- Minor Python types issues (https://github.com/crytic/slither/pull/653)\r\n",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.14",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.14",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.14",
                "url": "https://api.github.com/repos/crytic/slither/releases/33843809",
                "release_id": 33843809,
                "date_created": "2020-11-12T19:20:26Z",
                "date_published": "2020-11-12T19:30:00Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/29742294",
                "tag": "0.6.13",
                "name": "v0.6.13",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.13 - 2020-09-08\r\nThis releases improves support for Solidity 0.6, adds partial support for YUL, and fixes many bugs. Internally, we improved the parsing architecture, easing the addition of a new parser and added type annotations. Additionally, slither now runs GitHub [super-linter](https://github.com/github/super-linter), and the regression tests were improved (see the new [CONTRIBUTING.md](https://github.com/crytic/slither/blob/master/CONTRIBUTING.md#linters) guidelines).\r\n\r\nWe also want to thanks our contributors for reporting issues, and helping to improve Slither:\r\n- @elenadimitrova\r\n- @elopez \r\n- @PriyankaBose\r\n- @Pet3ris\r\n\r\nIf you want access to additional detectors, try [Crytic](https://crytic.io/). It now has 96 detectors, including 2 YUL specific detectors.\r\n\r\n## Added\r\n- Add partial, experimental YUL support (https://github.com/crytic/slither/pull/502, https://github.com/crytic/slither/pull/575, https://github.com/crytic/slither/pull/617). YUL AST is parsed and converted into slithIR. Raw memory access are not supported. Solidity 0.6 is required to enable YUL support.\r\n- Improve 0.6 support:\r\n   - Add support for `C{value:1}` syntax (https://github.com/crytic/slither/pull/498)\r\n   - Add support for top level structures and enums (https://github.com/crytic/slither/pull/499, https://github.com/crytic/slither/pull/522)\r\n- Add support for `type(I).interfaceId` (https://github.com/crytic/slither/pull/497)\r\n- List external publications (https://github.com/crytic/slither/pull/512)\r\n- Github super linter, and lgtm (https://github.com/crytic/slither/pull/614, https://github.com/crytic/slither/pull/620, https://github.com/crytic/slither/pull/626)\r\n- Added new tool: `slither-mutator`. PoC of fault injection based on [Using Fault Injection to Assess Blockchain Systems in Presence of Faulty Smart Contracts](https://arxiv.org/abs/2006.11597)\r\n\r\n### Internal\r\n- Add type annotations (https://github.com/crytic/slither/pull/514)\r\n- Add storage layout information (https://github.com/crytic/slither/pull/507, https://github.com/crytic/slither/pull/540)\r\n- Add `--disallow-partial` flag (https://github.com/crytic/slither/pull/560). This hidden flag will prevent Slither from catching exceptions, and simplify debugging\r\n- Add support for function pointers in the RETURN operator (https://github.com/crytic/slither/pull/601)\r\n\r\n## Changed\r\n- Copy editing on detectors (https://github.com/crytic/slither/pull/572)\r\n- Use [crytic-compile@0.1.9](https://github.com/crytic/crytic-compile/releases/tag/0.1.9)\r\n- Improve human-summary printer (https://github.com/crytic/slither/pull/477, https://github.com/crytic/slither/pull/478)\r\n- Improve dupplicate name report (https://github.com/crytic/slither/pull/489)\r\n- `slither-flat`: Improve utf8 support and mapping/array lookup (https://github.com/crytic/slither/pull/494)\r\n- Filter contract to contract_declarer in call graph printer (https://github.com/crytic/slither/pull/491)\r\n- Several improvements in `slither-flat`, including new strategies, json/zip export (https://github.com/crytic/slither/pull/496). Read the [new documentation](https://github.com/crytic/slither/wiki/Contract-Flattening).\r\n- Add check on public state variables in `slither-erc` (https://github.com/crytic/slither/pull/528)\r\n- `suicidal` detector: add detection on external functions (https://github.com/crytic/slither/issues/527)\r\n- Add padding to function id printer (https://github.com/crytic/slither/pull/546)\r\n- Update the recommended Solidity version in the `solc-version` detector (https://github.com/crytic/slither/pull/577). This might result in disabling triaged `solc-version` results with Slither < 0.6.13\r\n\r\n### Internal\r\n- Change the parsing architecture: parser objects are separate objects and do not inherit from the `core`. This will ease the creation of new parsers (https://github.com/crytic/slither/pull/514)\r\n- Improve support for tuple (https://github.com/crytic/slither/pull/536, https://github.com/crytic/slither/pull/539, https://github.com/crytic/slither/pull/541, https://github.com/crytic/slither/pull/548, https://github.com/crytic/slither/pull/563, https://github.com/crytic/slither/pull/564, https://github.com/crytic/slither/pull/576)\r\n- Improve `abi.decode` support (https://github.com/crytic/slither/pull/475, https://github.com/crytic/slither/pull/548, https://github.com/crytic/slither/pull/551, https://github.com/crytic/slither/pull/567, https://github.com/crytic/slither/pull/598)\r\n- Temporary array slice support (https://github.com/crytic/slither/pull/550)\r\n- Allow converting library to address (https://github.com/crytic/slither/pull/561)\r\n- Allow total ordering on `Constant` (https://github.com/crytic/slither/pull/565)\r\n- Improve fixpoint on `are_variables_written` (https://github.com/crytic/slither/pull/480)\r\n- Improve support for `type()` (https://github.com/crytic/slither/pull/569)\r\n- Increase the default python stack depth limit (https://github.com/crytic/slither/pull/599)\r\n- Refactor regression tests (https://github.com/crytic/slither/pull/610)\r\n\r\n## Fixed\r\n- Fix incorrect sons information on loop (https://github.com/crytic/slither/pull/524)\r\n- Fix numpy error on `slither-simil` (https://github.com/crytic/slither/pull/484)\r\n- Fix infinite loop on try statements (https://github.com/crytic/slither/pull/535)\r\n- Fix incorrect parsing in case of variables name reused (https://github.com/crytic/slither/pull/538)\r\n- Linting issue (https://github.com/crytic/slither/pull/555)\r\n- Issues on `this.` usage (https://github.com/crytic/slither/pull/600, https://github.com/crytic/slither/pull/623)\r\n- Out of memory on large exponent (https://github.com/crytic/slither/pull/608)\r\n- All pylint issues (https://github.com/crytic/slither/pull/616)\r\n- Incorrect support of `using for` on functions pointers (https://github.com/crytic/slither/pull/624)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.13",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.13",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.13",
                "url": "https://api.github.com/repos/crytic/slither/releases/29742294",
                "release_id": 29742294,
                "date_created": "2020-09-08T12:43:25Z",
                "date_published": "2020-09-08T12:54:18Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/25842339",
                "tag": "0.6.12",
                "name": "v0.6.12",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.12 - 2020-04-24\r\nThis release fixes a bug that was found in 0.6.11 preventing Slither to work on several codebases. Additional this release contains several minor fixes, and support for [buidler](https://github.com/nomiclabs/buidler).\r\n\r\nWe would like to thanks @elenadimitrova for quickly reporting issues https://github.com/crytic/slither/issues/456 and https://github.com/crytic/slither/issues/457.\r\n\r\n\r\nConsider using [crytic.io](https://crytic.io/) to get access to 48 additional detectors and GitHub integration.\r\n\r\n\r\n## Added\r\n- zip export (https://github.com/crytic/slither/pull/453)\r\n\r\n## Changed\r\n- Use [crytic-compile 0.1.8](https://github.com/crytic/crytic-compile/releases/tag/0.1.8), which adds [buidler](https://github.com/nomiclabs/buidler) support.\r\n- Human summary printer: run the detectors only once, and add their results to the printer's json (https://github.com/crytic/slither/pull/451)\r\n- Echidna printer: export the constant values as string to facilitate Echidna's parsing (https://github.com/crytic/slither/pull/454) [BREAKING CHANGE]\r\n\r\n## Fixed\r\n- Revert the changes made in (https://github.com/crytic/slither/pull/445) which lead to incorrectly parse functions with a contract used in a parameter (https://github.com/crytic/slither/pull/458)\r\n- Use Decimal instead of float to prevent loss of precision (https://github.com/crytic/slither/pull/454)\r\n- Echidna printer: fix incorrect support of state variable calls (https://github.com/crytic/slither/pull/455)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.12",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.12",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.12",
                "url": "https://api.github.com/repos/crytic/slither/releases/25842339",
                "release_id": 25842339,
                "date_created": "2020-04-24T14:05:39Z",
                "date_published": "2020-04-24T14:10:12Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/25539659",
                "tag": "0.6.11",
                "name": "v0.6.11",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.11 - 2020-04-17\r\n\r\nThis release introduces [`slither-prop`](https://github.com/crytic/slither/wiki/Properties-generation), a tool that will automatically generate properties to be tested through unit tests and [Echidna](https://github.com/crytic/echidna/). In this release, `slither-prop` can generate 18 tests for ERC20 contracts; More tests, and support for other ERCs are planned. Additionally, the support for Solidity 0.6 was improved, and the release fixes multiple minor bugs.\r\n\r\nConsider using [crytic.io](https://crytic.io/) to get access to additional detectors and GitHub integration.\r\n\r\n## Added\r\n- `slither-prop` (https://github.com/crytic/slither/pull/428). See its [documentation](https://github.com/crytic/slither/wiki/Properties-generation).\r\n- New Solidity call syntax support (https://github.com/crytic/slither/pull/424)\r\n- Number of assembly lines in the human summary printer (https://github.com/crytic/slither/pull/438)\r\n- `--convert-private` in `slither-flat`, allowing to change private variables to internal (https://github.com/crytic/slither/pull/446)\r\n- API: true/false branch for IF nodes (https://github.com/crytic/slither/issues/433)\r\n\r\n## Changed\r\n- Echidna printer: several new features are extracted (https://github.com/crytic/slither/pull/431, https://github.com/crytic/slither/pull/437). \r\n- Reentrancy: better support of constant function called with Solidity 0.6 (https://github.com/crytic/slither/pull/441)\r\n- Add support for `now` in timestamp detector (https://github.com/crytic/slither/pull/447)\r\n\r\n## Fixed\r\n- Name reused (https://github.com/crytic/slither/pull/423)\r\n- Ternary on unary operator conversion (https://github.com/crytic/slither/pull/439)\r\n- Incorrect `slithir_cfg_to_dot` function (https://github.com/crytic/slither/pull/432)\r\n- Incorrect function id generated if a parameter is a contract (https://github.com/crytic/slither/pull/445)\r\n- `slither-check-upgradeability`: `--list-detectors-json` will use the field `check` instead of `detector` [BREAKING CHANGE] (https://github.com/crytic/slither/pull/448)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.11",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.11",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.11",
                "url": "https://api.github.com/repos/crytic/slither/releases/25539659",
                "release_id": 25539659,
                "date_created": "2020-04-17T15:44:57Z",
                "date_published": "2020-04-17T15:51:55Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/24763289",
                "tag": "0.6.10",
                "name": "v0.6.10",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.10 - 2020-03-23\r\nThis release adds 5 new detectors, improves the support of codebase with contract's name duplicate, and the support for Solidity 0.6. Additionally, several internal improvements lead existing detectors to report less false alarms. [`slither-check-upgradeability`](https://github.com/crytic/slither/wiki/Upgradeability-Checks) was refactored and it has now 17 documented upgradeability checks. \r\n\r\nConsider using https://crytic.io/ to get access to additional detectors and GitHub integration.\r\n\r\n## Added\r\n- 5 new detectors (https://github.com/crytic/slither/pull/396)\r\n  - `boolean-cst`\r\n  - `tautology`\r\n  - `boolean-equal`\r\n  - `divide-before-multiply`\r\n  - `name-reused`\r\n- Codebase with contract name dupplicates will not anymore throw an error, slither will do a partial analysis and report the issue as a contract's bug (https://github.com/crytic/slither/pull/413)\r\n- Improve support for Solidity 0.6 (`receive()` and `try/catch`) (https://github.com/crytic/slither/pull/415)\r\n- New data dependencies user-API (https://github.com/crytic/slither/pull/409)\r\n- `contract.functions_signatures_declared`: return the signatures of the function declared in the contract (https://github.com/crytic/slither/pull/391)\r\n\r\n## Changed\r\n- Refactor slither-check-upgradeability: the checks follow the same coding pattern than the bug detectors (https://github.com/crytic/slither/pull/410)\r\n- Change how modifiers and constructor calls are integrated in the CFG. This removes false positives created because of unreachable nodes (https://github.com/crytic/slither/pull/406)\r\n- Use `crytic-compile` 0.1.7\r\n- Remove false positives in `uninitialized-state` (https://github.com/crytic/slither/pull/407)\r\n\r\n## Fixed\r\n- Incorrect `get_dependencies` (https://github.com/crytic/slither/pull/400, https://github.com/crytic/slither/pull/409)\r\n- Incorrect lvalue on `Delete` (https://github.com/crytic/slither/pull/412)\r\n- Incorrect constructor called if the contructor does not exist (https://github.com/crytic/slither/pull/416)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.10",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.10",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.10",
                "url": "https://api.github.com/repos/crytic/slither/releases/24763289",
                "release_id": 24763289,
                "date_created": "2020-03-23T14:28:50Z",
                "date_published": "2020-03-23T14:36:12Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/22386611",
                "tag": "0.6.9",
                "name": "v0.6.9",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.9 - 2019-12-20\r\n\r\nThis release fixes minor bugs and updates Slither to `crytic-compile 0.1.6`. Additionally, we moved from Travis CI to GitHub actions.\r\n\r\nThanks to our external contributors:\r\n- @erib3\r\n- @uivlis\r\n- @yxliang01 \r\n\r\n## Added\r\n- `--remove-assert` flag to `slither-flat`. Use this feature to write custom properties for Echidna with `assert` and have them automatically removed by `slither-flat` when the code is deployed. (https://github.com/crytic/slither/issues/366)\r\n\r\n## Changed\r\n- `constant-function` detector is split into `constant-function-asm` and `constant-function-state` and will not raise an issue if solc >= 0.5 is used (https://github.com/crytic/slither/pull/380)\r\n- Use GitHub Actions instead of Travis CI (https://github.com/crytic/slither/pull/381, https://github.com/crytic/slither/pull/385)\r\n- Use upper and lower bounds for the `solc-version` detector (https://github.com/crytic/slither/pull/378)\r\n- `solc-version` now recommends solc 0.5.11 over 0.5.3 (https://github.com/crytic/slither/pull/390)\r\n\r\n## Fixed \r\n- Detector ID generation leading to collisions for pragma objects (https://github.com/crytic/slither/pull/388)\r\n- FPs on event-based reentrancy (https://github.com/crytic/slither/pull/377)\r\n- Non-solidity pragma that were reported as incorrect solidity version by the `pragma` detector (https://github.com/crytic/slither/pull/387)\r\n- Incorrect field access on the `contract-summary` printer (https://github.com/crytic/slither/pull/384)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.9",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.9",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.9",
                "url": "https://api.github.com/repos/crytic/slither/releases/22386611",
                "release_id": 22386611,
                "date_created": "2019-12-20T17:16:52Z",
                "date_published": "2019-12-20T17:32:02Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/21687898",
                "tag": "0.6.8",
                "name": "v0.6.8",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.8 - 2019-11-22\r\nThis release introduces two new utilities: `slither-check-erc` to check ERC conformance, and `slither-check-kspec` to report the coverage of a K specification. New types of reentrancy are detected (`send`/`transfer` and event-based) and several improvements were made to `slither-check-upgradeability`. Internally, this release introduces a new JSON output API. All printers and most of the utilities now have JSON output.\r\n\r\nThanks to our external contributors:\r\n- @yxliang01\r\n- @enderphan94\r\n\r\n## Added\r\n- `slither-check-erc`: check for conformance to the most used ERCs  https://github.com/crytic/slither/pull/350\r\n- `slither-check-kspec`: report K specification coverage https://github.com/crytic/slither/pull/364\r\n- Each detector result has a unique ID, allowing for duplicate removal (https://github.com/crytic/slither/pull/367)\r\n- pop to SlithIR conversion (https://github.com/crytic/slither/issues/359)\r\n- New printer: `evm`  to print the source code that matches EVM bytecode (https://github.com/crytic/slither/pull/281)\r\n- New reentrancy detectors: `send`/`transfer` and event-based (https://github.com/crytic/slither/pull/375)\r\n\r\n## Changed\r\n- The JSON output API was replaced with a simpler and standardized API (https://github.com/crytic/slither/pull/355, https://github.com/crytic/slither/pull/362)\r\n- All the printers have JSON output (https://github.com/crytic/slither/pull/356)\r\n- `slither-check-upgradeability`: several improvements (https://github.com/crytic/slither/pull/354), including:\r\n  - Check for constant conformance\r\n  - Remove false positive on fallback function\r\n  - Allow the CLI to work without the proxy contract. Note: the CLI flags were changed  [BREAKING CHANGE]\r\n  - JSON output\r\n- Contract summary printer: add upgradeability info (https://github.com/crytic/slither/pull/369) and\r\nremove shadowed function (https://github.com/crytic/slither/pull/353)\r\n- Docker improvements (https://github.com/crytic/slither/pull/244)\r\n- Remove false positive on uninitialized state variable detector due to `delegatecall` proxy (https://github.com/crytic/slither/pull/370)\r\n\r\n## Fixed\r\n- `slither-flat`: handle cycles (https://github.com/crytic/slither/pull/373)\r\n",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.8",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.8",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.8",
                "url": "https://api.github.com/repos/crytic/slither/releases/21687898",
                "release_id": 21687898,
                "date_created": "2019-11-22T16:22:47Z",
                "date_published": "2019-11-22T16:26:39Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/20478541",
                "tag": "0.6.7",
                "name": "v0.6.7",
                "author": {
                    "name": "dguido",
                    "type": "User"
                },
                "description": "# 0.6.7 - 2019-10-04\r\nThis release introduces `slither-format`, a tool that automatically generates patches for discovered vulnerabilities, and `slither-flat`, which flattens the codebase. Thanks to [crytic-compile](https://github.com/crytic/crytic-compile), `slither-flat` enables contract flattening for nearly all available smart contract development frameworks.\r\n\r\nIf you like Slither, consider subscribing to [crytic.io](https://crytic.io) for access to additional private detectors and GitHub integrations. Follow [@CryticCI](https://twitter.com/CryticCI) for more information.\r\n\r\n## Added\r\n- `slither-format`: automatic patch generation. Features:\r\n  - Supports issues discovered by the `unused-state`, `solc-version`, `pragma`, `naming-convention`, `external-function`, `constable-states`, and `constant-function` detectors.\r\n  - Generates `git` patches \r\n  - JSON integration\r\n- `slither-flat`: flatten a codebase. Features:\r\n  - `--contract contract_name`: outputs only the contracts necessary to compile `contract_name`\r\n  - `--convert-external`: converts an external function to public. This is meant to help developers use [Echidna](https://github.com/crytic/echidna).\r\n- Echidna printer: Displays information useful for guiding fuzzing.\r\n- IR conversion for constant variables declaration (https://github.com/crytic/slither/pull/333, https://github.com/crytic/slither/pull/338)\r\n\r\n## Changed:\r\n- Update to crytic-compile 0.1.4 (which adds support for [Brownie](https://github.com/iamdefinitelyahuman/brownie))\r\n- CLI: print the number of detectors run (https://github.com/crytic/slither/pull/322)\r\n- Dapp test: use cache to seep up travis (https://github.com/crytic/slither/pull/339)\r\n- External function detectors: merge shadowed functions (https://github.com/crytic/slither/pull/334)\r\n- Add optimization detection to human summary printer (https://github.com/crytic/slither/pull/330)\r\n- Silence reports about `_echidna` or `_crytic` properties in the naming convention detector (https://github.com/crytic/slither/pull/317)\r\n\r\n## Fixed\r\n- Incorrect parsing of infinite loops (https://github.com/crytic/slither/pull/329)\r\n- Incorrect inheritance order\r\n- Incorrect `abi.decode` parsing (https://github.com/crytic/slither/pull/332)",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.7",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.7",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.7",
                "url": "https://api.github.com/repos/crytic/slither/releases/20478541",
                "release_id": 20478541,
                "date_created": "2019-10-04T15:24:17Z",
                "date_published": "2019-10-04T15:56:10Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/19330605",
                "tag": "0.6.6",
                "name": "v0.6.6",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.6 - 2019-08-16\r\n\r\nThis release changes internal functions and how modifiers are represented, improves the JSON format, removes detectors' false positives, and fixes numerous bugs.\r\n\r\nThanks to our external contributors:\r\n- @ChrisChinchilla\r\n- @Abhimanyu121\r\n\r\nThanks to our users for reporting numerous bugs, in particular @elenadimitrova, @yxliang01, and @sobolev-igor.\r\n\r\n## Added\r\n- Add `exclude-dependencies` flag (https://github.com/crytic/slither/pull/269)\r\n- Add Optimization type and `--exclude-optimization` flag (https://github.com/crytic/slither/pull/265), https://github.com/crytic/slither/pull/269)\r\n- AragonOS detection (https://github.com/crytic/slither/pull/276)\r\n- New printer: constructor calls (https://github.com/crytic/slither/pull/299)\r\n\r\n## Changed\r\n- [Breaking change] Remove the instance sharing for functions and modifiers. Each function or modifier has now `contract` and `contract_declarer` properties, where contract points to the contract's instance and the contract declarer to the contract where the function was originally declared (https://github.com/crytic/slither/pull/213).\r\n- [Breaking change] Use unique JSON element per detector finding (https://github.com/crytic/slither/pull/263)\r\n- [Breaking change] Add type to JSON result and improve the log in console/file (https://github.com/crytic/slither/pull/266)\r\n- Move third parties tools to `slither.tools` (https://github.com/crytic/slither/pull/313)\r\n- Remove false positive in external function detector in case of parameter written (https://github.com/crytic/slither/pull/257)\r\n- Remove false positive in naming convention in case of unnamed parameters (https://github.com/crytic/slither/pull/260)\r\n- Remove false positive in naming convention for constructor (https://github.com/crytic/slither/commit/aec680c5feee219094357bef251cd07d7212411c)\r\n- Improve ternary operators support (https://github.com/crytic/slither/pull/301)\r\n- Late conversion of the subdenomination value (https://github.com/crytic/slither/pull/305)\r\n- Refactor reentrancy detector and add support for create-based reentrancy (https://github.com/crytic/slither/pull/311)\r\n\r\n## Fixed\r\n- Incorrect source mapping for if/while/for condition (https://github.com/crytic/slither/issues/245)\r\n- Incorrect variable order in printer (https://github.com/crytic/slither/pull/254)\r\n- Incorrect source mapping due to text conversion (https://github.com/crytic/slither/pull/252)\r\n- Incorrect type for constant with implicit conversion (https://github.com/crytic/slither/pull/283)\r\n- Incorrect arguments to crytic-compile (https://github.com/crytic/slither/commit/4cbe048ce71850c793006fc7858f287829b51b5a)\r\n\r\nNote: [0.6.5](https://github.com/crytic/slither/pull/314) contained a bug in the reentrancy detector. Please avoid this version since it unnecessarily reported false-positives.",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.6",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.6",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.6",
                "url": "https://api.github.com/repos/crytic/slither/releases/19330605",
                "release_id": 19330605,
                "date_created": "2019-08-16T18:26:24Z",
                "date_published": "2019-08-16T18:39:20Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/17318230",
                "tag": "0.6.4",
                "name": "v0.6.4",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.4 - 2019-05-14\r\n\r\nThis release brings new detectors, several bugfixes, and a new util [`slither-simil`](https://github.com/crytic/slither/wiki/Code-Similarity-detector), to perform code similarity. Additionally, the json output was heavily improved.\r\n\r\nThis release is also the first one compatible with our new [Visual Studio Code plugin](https://github.com/crytic/slither-vscode), try it out!\r\n\r\nThanks to your external contributors, for their work and their suggestions!\r\n@GillesdeB \r\n@sobolev-igor\r\n@yxliang01 \r\n\r\n## Added\r\n- New detectors:\r\n   - ERC721 incorrect interface: `erc721-interface` (https://github.com/crytic/slither/pull/215)\r\n   - Conformance to numeric notation best practices: `too-many-digits` (https://github.com/crytic/slither/pull/216)\r\n   - Unchecked low level call: `unchecked-lowlevel` (https://github.com/crytic/slither/pull/230)\r\n   - Unchecked `send`: `unchecked-send` (https://github.com/crytic/slither/pull/230)\r\n- `slither-simil`: code similarity using machine learning (see the [documentation](https://github.com/crytic/slither/wiki/Code-Similarity-detector))\r\n\r\n## Changed\r\n- Improve `unused-return` results (https://github.com/crytic/slither/pull/230)\r\n- Improve `solc-version` results https://github.com/crytic/slither/pull/240\r\n- Update to  `crytic-compile` version `0.1.1`\r\n- Add `crytic-compile` options to `slither-check-upgradeability` and `slither-find-paths` (https://github.com/crytic/slither/pull/231)\r\n- The json format was heavily changed. See its [documentation](https://github.com/crytic/slither/wiki/JSON-output) for more details. Notable changes:\r\n    - At the [top level](https://github.com/crytic/slither/wiki/JSON-output#top-level-command-output), the json contains information about the success of the Slither's run\r\n    - Each [element](https://github.com/crytic/slither/wiki/JSON-output#detector-result-elements) has 3 required information (`type`, `name`, `source_mapping`), and two optional ones: `type_specific_fields` and `additional_fields`\r\n    - The `source_mapping` has not four types of filename, as well as the column information (see [Source mapping documentation](https://github.com/crytic/slither/wiki/JSON-output#source-mapping)\r\n- Improvement of the human summary printer: lines and contracts number, ERCs and standard libraries detection (https://github.com/crytic/slither/pull/228)\r\n- Improve parsing of Literals (https://github.com/crytic/slither/commit/fbd1ddb5fc7199aaff0a6f1dd73440b1d29f046b), and type propagation\r\n- Remove FPs on the incorrect erc20 interface dettector (https://github.com/crytic/slither/pull/215)\r\n- Clean exception handling (https://github.com/crytic/slither/pull/229)\r\n\r\n\r\n## Fixed\r\n- Re-add `--solc-ast` flag (https://github.com/crytic/slither/commit/12cdcc2e8783b0c7161ee9baacdc7caebe0c5928)\r\n- Incorrect function ids printer info (https://github.com/crytic/slither/pull/211)\r\n- Several minor bug fixes, including incorrect type propagation if a variable is accessed through the contract's basename (https://github.com/crytic/slither/commit/6834d4c78767d21efea51e557125066629bc3d23), add `bytes.push()` support (https://github.com/crytic/slither/commit/1d2997b67fc48cf6fedb43f16f027d6536c6dcf7)\r\n",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.4",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.4",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.4",
                "url": "https://api.github.com/repos/crytic/slither/releases/17318230",
                "release_id": 17318230,
                "date_created": "2019-05-14T16:33:54Z",
                "date_published": "2019-05-14T18:36:46Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/crytic/slither/releases/16957931",
                "tag": "0.6.3",
                "name": "v0.6.3",
                "author": {
                    "name": "montyly",
                    "type": "User"
                },
                "description": "# 0.6.3 - 2019-04-24\r\nThis release is the first one based on [`crytic-compile`](https://github.com/crytic/crytic-compile), the library standardizes smart contracts compilation and allows Slither to work natively on new platforms. Additionally, this release brings one new detector.  \r\n\r\nThanks to our external contributor, @shshzi, who worked on the [`Right-To-Left-Override character`](https://github.com/crytic/slither/wiki/Detector-Documentation#right-to-left-override-character) detector\r\n\r\nFor Embark users: make sure to update [embark-contract-info](https://github.com/crytic/embark-contract-info) to `1.1.0`\r\n\r\n## Added\r\n- Native support to [Dapp](https://dapp.tools/dapp/), [Etherlime](https://github.com/LimeChain/etherlime), and Etherscan (see the [documentation](https://github.com/crytic/slither/wiki/Usage))\r\n- New detector: `Right-To-Left-Override character` https://github.com/crytic/slither/pull/201\r\n\r\n## Changed\r\n- Json output: source mappings contain now four filenames (absolute/relative/short/used)\r\n- The command line options now match `crytic-compile` options (ex: `--disable-solc-warnings` is renamed `--solc-disable-warnings`). See the [`crytic-compile`Documentation](https://github.com/crytic/crytic-compile/wiki/Configuration) for more details.",
                "tarball_url": "https://api.github.com/repos/crytic/slither/tarball/0.6.3",
                "zipball_url": "https://api.github.com/repos/crytic/slither/zipball/0.6.3",
                "html_url": "https://github.com/crytic/slither/releases/tag/0.6.3",
                "url": "https://api.github.com/repos/crytic/slither/releases/16957931",
                "release_id": 16957931,
                "date_created": "2019-04-24T19:54:45Z",
                "date_published": "2019-04-24T20:01:34Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/Dockerfile"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "cff-version: 1.2.0\ntitle: Slither Analyzer\nmessage: >-\n  If you use this software, please cite it using the\n  metadata from this file.\ntype: software\nauthors:\n  - given-names: Josselin\n    family-names: Feist\n  - given-names: Gustavo\n    family-names: Grieco\n  - given-names: Alex\n    family-names: Groce\nidentifiers:\n  - type: doi\n    value: 10.48550/arXiv.1908.09878\n    description: arXiv.1908.09878\n  - type: url\n    value: 'https://arxiv.org/abs/1908.09878'\n    description: arxiv\n  - type: doi\n    value: 10.1109/wetseb.2019.00008\nrepository-code: 'https://github.com/crytic/slither'\nurl: 'https://www.trailofbits.com/'\nrepository-artifact: 'https://github.com/crytic/slither/releases'\nabstract: >-\n  Slither is a static analysis framework designed to provide\n  rich information about Ethereum smart contracts.\n\n  It works by converting Solidity smart contracts into an\n  intermediate representation called SlithIR.\n\n  SlithIR uses Static Single Assignment (SSA) form and a\n  reduced instruction set to ease implementation of analyses\n  while preserving semantic information that would be lost\n  in transforming Solidity to bytecode. \n\n  Slither allows for the application of commonly used\n  program analysis techniques like dataflow and taint\n  tracking.\n\n\n  Our framework has four main use cases: \n\n  (1) automated detection of vulnerabilities,\n\n  (2) automated detection of code optimization\n  opportunities,\n\n  (3) improvement of the user's understanding of the\n  contracts, and\n\n  (4) assistance with code review.  \nkeywords:\n  - Ethereum\n  - Static Analysis\n  - Smart contracts\n  - EVM\n  - bug detection\n  - Software Engineering\nlicense: AGPL-3.0-only\ncommit: 3d4f934d3228f072b7df2c5e7252c64df4601bc8\nversion: 0.9.5\ndate-released: '2023-06-28'\n",
                "type": "File_dump",
                "format": "cff"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/CITATION.cff"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "# Contributing to Slither\n\nFirst, thanks for your interest in contributing to Slither! We welcome and appreciate all contributions, including bug reports, feature suggestions, tutorials/blog posts, and code improvements.\n\nIf you're unsure where to start, we recommend our [`good first issue`](https://github.com/crytic/slither/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22) and [`help wanted`](https://github.com/crytic/slither/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) issue labels.\n\n## Bug reports and feature suggestions\n\nBug reports and feature suggestions can be submitted to our issue tracker. For bug reports, attaching the contract that caused the bug will help us in debugging and resolving the issue quickly. If you find a security vulnerability, do not open an issue; email <opensource@trailofbits.com> instead.\n\n## Questions\n\nQuestions can be submitted to the \"Discussions\" page, and you may also join our [chat room](https://empireslacking.herokuapp.com/) (in the #ethereum channel).\n\n## Code\n\nSlither uses the pull request contribution model. Please make an account on GitHub, fork this repository, and submit code contributions via pull request. For more documentation, look [here](https://guides.github.com/activities/forking/).\n\nSome pull request guidelines:\n\n- Work from the [`dev`](https://github.com/crytic/slither/tree/dev) branch. We performed extensive tests prior to merging anything to `master`, working from `dev` will allow us to merge your work faster.\n- Minimize irrelevant changes (formatting, whitespace, etc) to code that would otherwise not be touched by this patch. Save formatting or style corrections for a separate pull request that does not make any semantic changes.\n- When possible, large changes should be split up into smaller focused pull requests.\n- Fill out the pull request description with a summary of what your patch does, key changes that have been made, and any further points of discussion, if applicable.\n- Title your pull request with a brief description of what it's changing. \"Fixes #123\" is a good comment to add to the description, but makes for an unclear title on its own.\n\n## Directory Structure\n\nBelow is a rough outline of slither's design:\n\n```text\n.\n\u251c\u2500\u2500 analyses # Provides additional info such as data dependency \n\u251c\u2500\u2500 core # Ties everything together\n\u251c\u2500\u2500 detectors # Rules that define and identify issues \n\u251c\u2500\u2500 slither.py # Main entry point\n\u251c\u2500\u2500 slithir # Contains the semantics of slither's intermediate representation\n\u251c\u2500\u2500 solc_parsing # Responsible for parsing the solc AST\n\u251c\u2500\u2500 tools # Miscellaneous tools built on top of slither\n\u251c\u2500\u2500 visitors # Parses expressions and converts to slithir\n\u2514\u2500\u2500 ...\n```\n\nA code walkthrough is available [here](https://www.youtube.com/watch?v=EUl3UlYSluU).\n\n## Development Environment\n\nInstructions for installing a development version of Slither can be found in our [wiki](https://github.com/crytic/slither/wiki/Developer-installation).\n\nTo run the unit tests, you need to clone this repository and run `make test`. Run a specific test with `make test TESTS=$test_name`. The names of tests can be obtained with `pytest tests --collect-only`.\n\n### Linters\n\nSeveral linters and security checkers are run on the PRs.\n\nTo run them locally in the root dir of the repository:\n\n- `make lint`\n\n> Note, this only validates but does not modify the code.\n\nTo automatically reformat the code:\n\n- `make reformat`\n\nWe use pylint `3.0.3`, black `22.3.0`.\n\n### Testing\n\nSlither's test suite is divided into three categories end-to-end (`tests/e2e`), unit (`tests/unit`), and tools (`tests/tools/`).\n\nHow do I know what kind of test(s) to write?\n\n- End-to-end: functionality that requires invoking `Slither` and inspecting some output such as printers and detectors.\n- Unit: additions and modifications to objects should be accompanied by a unit test that defines the expected behavior. Aim to write functions in as pure a way as possible such that they are easier to test.\n- Tools: tools built on top of Slither (`slither/tools`) but not apart of its core functionality\n\n#### Adding detector tests\n\nFor each new detector, at least one regression tests must be present.\n\n1. Create a folder in `tests/e2e/detectors/test_data` with the detector's argument name.\n2. Create a test contract in `tests/e2e/detectors/test_data/<detector_name>/`.\n3. Update `ALL_TESTS` in `tests/e2e/detectors/test_detectors.py`.\n4. Run `python tests/e2e/detectors/test_detectors.py --compile` to create a ZIP file of the compilation artifacts.\n5. `pytest tests/e2e/detectors/test_detectors.py --insta update-new`. This will generate a snapshot of the detector output in `tests/e2e/detectors/snapshots/`. If updating an existing detector, run `pytest tests/e2e/detectors/test_detectors.py --insta review` and accept or reject the updates.\n6. Run `pytest tests/e2e/detectors/test_detectors.py` to ensure everything worked. Then, add and commit the files to git.\n\n> ##### Helpful commands for detector tests\n>\n> - To see the tests coverage, run `pytest tests/e2e/detectors/test_detectors.py  --cov=slither/detectors --cov-branch --cov-report html`.\n> - To run tests for a specific detector, run `pytest tests/e2e/detectors/test_detectors.py -k ReentrancyReadBeforeWritten`(the detector's class name is the argument).\n> - To run tests for a specific version, run `pytest tests/e2e/detectors/test_detectors.py -k 0.7.6`.\n> - The IDs of tests can be inspected using `pytest tests/e2e/detectors/test_detectors.py --collect-only`.\n\n#### Adding parsing tests\n\n1. Create a test in `tests/e2e/solc_parsing/`\n2. Update `ALL_TESTS` in `tests/e2e/solc_parsing/test_ast_parsing.py`.\n3. Run `python tests/e2e/solc_parsing/test_ast_parsing.py --compile`. This will compile the artifact in `tests/e2e/solc_parsing/compile`. Add the compiled artifact to git.\n4. Run `python tests/e2e/solc_parsing/test_ast_parsing.py --generate`. This will generate the json artifacts in `tests/e2e/solc_parsing/expected_json`. Add the generated files to git.\n5. Run `pytest tests/e2e/solc_parsing/test_ast_parsing.py` and check that everything worked.\n\n> ##### Helpful commands for parsing tests\n>\n> - To see the tests coverage, run `pytest  tests/e2e/solc_parsing/test_ast_parsing.py  --cov=slither/solc_parsing --cov-branch --cov-report html`\n> - To run tests for a specific test case, run `pytest tests/e2e/solc_parsing/test_ast_parsing.py -k user_defined_value_type`  (the filename is the argument).\n> - To run tests for a specific version, run `pytest tests/e2e/solc_parsing/test_ast_parsing.py -k 0.8.12`.\n> - To run tests for a specific compiler json format, run `pytest tests/e2e/solc_parsing/test_ast_parsing.py -k legacy` (can be legacy or compact).\n> - The IDs of tests can be inspected using `pytest tests/e2e/solc_parsing/test_ast_parsing.py --collect-only`.\n\n### Synchronization with crytic-compile\n\nBy default, `slither` follows either the latest version of crytic-compile in pip, or `crytic-compile@master` (look for dependencies in [`setup.py`](./setup.py). If crytic-compile development comes with breaking changes, the process to update `slither` is:\n\n- Update `slither/setup.py` to point to the related crytic-compile's branch\n- Create a PR in `slither` and ensure it passes the CI\n- Once the development branch is merged in `crytic-compile@master`, ensure `slither` follows the `master` branch\n\nThe `slither`'s PR can either be merged while using a crytic-compile non-`master` branch, or kept open until the breaking changes are available in `crytic-compile@master`.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/CONTRIBUTING.md"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_find_paths.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_simil.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_etherscan.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_upgradability.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_truffle.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_flat.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_dapp.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_erc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_kspec.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_prop.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_printers.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_slither_config.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_cli.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_path_filtering.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_interface.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_etherlime.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_embark.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/scripts/ci_test_data_dependency.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/.github/scripts/integration_test_runner.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/.github/scripts/unit_test_runner.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/crytic/slither/master/.github/scripts/tool_test_runner.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Run Slither on a Hardhat/Foundry/Dapp/Brownie application:\n\n```console\nslither .\n```\n\nThis is the preferred option if your project has dependencies as Slither relies on the underlying compilation framework to compile source code.\n\nHowever, you can run Slither on a single file that does not import dependencies:\n\n```console\nslither tests/uninitialized.sol\n```\n",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "value": "Feel free to stop by our [Slack channel](https://empireslacking.herokuapp.com) (#ethereum) for help using or extending Slither.\n\n* The [Printer documentation](https://github.com/trailofbits/slither/wiki/Printer-documentation) describes the information Slither is capable of visualizing for each contract.\n\n* The [Detector documentation](https://github.com/trailofbits/slither/wiki/Adding-a-new-detector) describes how to write a new vulnerability analyses.\n\n* The [API documentation](https://github.com/crytic/slither/wiki/Python-API) describes the methods and objects available for custom analyses.\n\n* The [SlithIR documentation](https://github.com/trailofbits/slither/wiki/SlithIR) describes the SlithIR intermediate representation.\n",
                "type": "Text_excerpt",
                "original_header": "Getting Help",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "> **Note** <br />\n> Slither requires Python 3.8+.\nIf you're **not** going to use one of the [supported compilation frameworks](https://github.com/crytic/crytic-compile), you need [solc](https://github.com/ethereum/solidity/), the Solidity compiler; we recommend using [solc-select](https://github.com/crytic/solc-select) to conveniently switch between solc versions.\n",
                "type": "Text_excerpt",
                "original_header": "How to install",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "value": "```console\npython3 -m pip install slither-analyzer\n```\n",
                "type": "Text_excerpt",
                "original_header": "Using Pip",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>",
                    "How to install"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "value": "```bash\ngit clone https://github.com/crytic/slither.git && cd slither\npython3 -m pip install .\n```\n\nWe recommend using a Python virtual environment, as detailed in the [Developer Installation Instructions](https://github.com/trailofbits/slither/wiki/Developer-installation), if you prefer to install Slither via git.\n",
                "type": "Text_excerpt",
                "original_header": "Using Git",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>",
                    "How to install"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "value": "Use the [`eth-security-toolbox`](https://github.com/trailofbits/eth-security-toolbox/) docker image. It includes all of our security tools and every major version of Solidity in a single image. `/home/share` will be mounted to `/share` in the container.\n\n```bash\ndocker pull trailofbits/eth-security-toolbox\n```\n\nTo share a directory in the container:\n\n```bash\ndocker run -it -v /home/share:/share trailofbits/eth-security-toolbox\n```\n",
                "type": "Text_excerpt",
                "original_header": "Using Docker",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>",
                    "How to install"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "value": "* For GitHub action integration, use [slither-action](https://github.com/marketplace/actions/slither-action).\n* For pre-commit integration, use (replace `$GIT_TAG` with real tag)\n  ```YAML\n  - repo: https://github.com/crytic/slither\n    rev: $GIT_TAG\n    hooks:\n      - id: slither\n  ```\n* To generate a Markdown report, use `slither [target] --checklist`.\n* To generate a Markdown with GitHub source code highlighting, use `slither [target] --checklist --markdown-root https://github.com/ORG/REPO/blob/COMMIT/` (replace `ORG`, `REPO`, `COMMIT`)\n",
                "type": "Text_excerpt",
                "original_header": "Integration",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>",
                    "How to install"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "<img src=\"https://raw.githubusercontent.com/crytic/slither/master/logo.png\" alt=\"Slither Static Analysis Framework Logo\" width=\"500\" /> \n",
                "original_header": "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
            },
            "confidence": 0.9939689022443262,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "[Contact us](https://www.trailofbits.com/contact/) to get help on building custom tools.\n \n",
                "original_header": "Tools"
            },
            "confidence": 0.9078488491540967,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "Documentation on Slither's internals is available [here](https://crytic.github.io/slither/slither.html).\n",
                "type": "Text_excerpt",
                "original_header": "API Documentation",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/crytic/slither/wiki",
                "format": "wiki"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "support": [
        {
            "result": {
                "value": "Feel free to stop by our [Slack channel](https://empireslacking.herokuapp.com) (#ethereum) for help using or extending Slither.\n\n* The [Printer documentation](https://github.com/trailofbits/slither/wiki/Printer-documentation) describes the information Slither is capable of visualizing for each contract.\n\n* The [Detector documentation](https://github.com/trailofbits/slither/wiki/Adding-a-new-detector) describes how to write a new vulnerability analyses.\n\n* The [API documentation](https://github.com/crytic/slither/wiki/Python-API) describes the methods and objects available for custom analyses.\n\n* The [SlithIR documentation](https://github.com/trailofbits/slither/wiki/SlithIR) describes the SlithIR intermediate representation.\n",
                "type": "Text_excerpt",
                "original_header": "Getting Help",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "faq": [
        {
            "result": {
                "value": "How do I exclude mocks or tests?\n\n* View our documentation on [path filtering](https://github.com/crytic/slither/wiki/Usage#path-filtering).\n\nHow do I fix \"unknown file\" or compilation issues?\n\n* Because slither requires the solc AST, it must have all dependencies available.\nIf a contract has dependencies, `slither contract.sol` will fail.\nInstead, use `slither .` in the parent directory of `contracts/` (you should see `contracts/` when you run `ls`).\nIf you have a `node_modules/` folder, it must be in the same directory as `contracts/`. To verify that this issue is related to slither,\nrun the compilation command for the framework you are using e.g `npx hardhat compile`. That must work successfully;\notherwise, slither's compilation engine, crytic-compile, cannot generate the AST.\n",
                "type": "Text_excerpt",
                "original_header": "FAQ",
                "parent_header": [
                    "<a href=\"https://crytic.github.io/slither/slither.html\">Slither, the smart contract static analyzer</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Slither, the smart contract static analyzer"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/crytic/slither/master/logo.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2110.00677"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/1911.00570.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1908.09878"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2104.08638.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2208.13252"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/1912.05823.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2309.13805.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/crytic/slither/master/README.md"
        }
    ]
}