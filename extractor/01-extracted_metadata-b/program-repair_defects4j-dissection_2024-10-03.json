{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:00:29"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/program-repair/defects4j-dissection",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "program-repair",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2017-10-05T12:56:26Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-13T11:44:11Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2019 Sobreira, Victor and Durieux, Thomas and Madeiral, Fernanda and Monperrus, Martin and Maia, Marcelo A.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/program-repair/defects4j-dissection/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Defects4J Dissection presents data to help researchers and practitioners to better understand the Defects4J bug dataset",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "```js\n[\n  {\n    \"bugId\": 18,\n    \"changedFiles\": {\n      \"org/jfree/data/DefaultKeyedValues.java\": {\n        \"changes\": [ // contains lines that are changed by the patch \n          [\n            335\n          ]\n        ],\n        \"deletes\": [ // contains lines that are deleted by the patch \n          [\n            318\n          ],\n          [\n            320\n          ]\n        ]\n      },\n      \"org/jfree/data/DefaultKeyedValues2D.java\": {\n        \"inserts\": [ // contains lines *before* which code is inserted by the patch \n          [\n            455, // multiple lines in an inner array represent multiple possible locations to insert the code\n            456\n          ],\n          [\n            458\n          ],\n          [\n            459\n          ]\n        ]\n      } // caution: '-1' as a line number represents the insertion of a method or variable declaration that can not be tied to a specific location\n    },\n    \"diff\": \"--- a/source/org/jfree/data/DefaultKeyedValues.java\\n+++ b/source/org/jfree/data/DefaultKeyedValues.java\\n@@ -315,30 +315,29 @@ private void rebuildIndex () {\\n     public void removeValue(int index) {\\n         this.keys.remove(index);\\n         this.values.remove(index);\\n-        if (index < this.keys.size()) {\\n         rebuildIndex();\\n-        }\\n     }\\n \\n     /**\\n      * Removes a value from the collection.\\n      *\\n      * @param key  the item key (<code>null</code> not permitted).\\n      * \\n      * @throws IllegalArgumentException if <code>key</code> is \\n      *     <code>null</code>.\\n      * @throws UnknownKeyException if <code>key</code> is not recognised.\\n      */\\n     public void removeValue(Comparable key) {\\n         int index = getIndex(key);\\n         if (index < 0) {\\n-\\t\\t\\treturn;\\n+            throw new UnknownKeyException(\\\"The key (\\\" + key \\n+                    + \\\") is not recognised.\\\");\\n         }\\n         removeValue(index);\\n     }\\n     \\n     /**\\n      * Clears all values from the collection.\\n      * \\n      * @since 1.0.2\\n      */\\n--- a/source/org/jfree/data/DefaultKeyedValues2D.java\\n+++ b/source/org/jfree/data/DefaultKeyedValues2D.java\\n@@ -454,12 +454,21 @@ public void removeColumn(int columnIndex) {\\n     public void removeColumn(Comparable columnKey) {\\r\\n+    \\tif (columnKey == null) {\\r\\n+    \\t\\tthrow new IllegalArgumentException(\\\"Null 'columnKey' argument.\\\");\\r\\n+    \\t}\\r\\n+    \\tif (!this.columnKeys.contains(columnKey)) {\\r\\n+    \\t\\tthrow new UnknownKeyException(\\\"Unknown key: \\\" + columnKey);\\r\\n+    \\t}\\r\\n         Iterator iterator = this.rows.iterator();\\r\\n         while (iterator.hasNext()) {\\r\\n             DefaultKeyedValues rowData = (DefaultKeyedValues) iterator.next();\\r\\n+            int index = rowData.getIndex(columnKey);\\r\\n+            if (index >= 0) {\\r\\n                 rowData.removeValue(columnKey);\\r\\n+            }\\r\\n         }\\r\\n         this.columnKeys.remove(columnKey);\\r\\n     }\\r\\n \\r\\n     /**\\r\\n      * Clears all the data and associated keys.\\r\\n      */\\r\\n\",\n    \"failingTests\": [\n      {\n        \"className\": \" org.jfree.data.category.junit.DefaultCategoryDatasetTests\",\n        \"error\": \"java.lang.IndexOutOfBoundsException\",\n        \"message\": \"Index: 0, Size: 0\",\n        \"methodName\": \"testBug1835955\"\n      },\n      {\n        \"className\": \" org.jfree.data.junit.DefaultKeyedValues2DTests\",\n        \"error\": \"java.lang.IndexOutOfBoundsException\",\n        \"message\": \"Index: 0, Size: 0\",\n        \"methodName\": \"testRemoveColumnByKey\"\n      },\n      {\n        \"className\": \" org.jfree.data.junit.DefaultKeyedValuesTests\",\n        \"error\": \"junit.framework.AssertionFailedError\",\n        \"message\": \"\",\n        \"methodName\": \"testRemoveValue\"\n      },\n      {\n        \"className\": \" org.jfree.data.junit.DefaultKeyedValuesTests\",\n        \"error\": \"junit.framework.AssertionFailedError\",\n        \"message\": \"expected:<-1> but was:<0>\",\n        \"methodName\": \"testGetIndex2\"\n      }\n    ],\n    \"metrics\": {\n      \"chunks\": 6,\n      \"classes\": 2,\n      \"files\": 2,\n      \"linesAdd\": 10,\n      \"linesMod\": 1,\n      \"linesRem\": 2,\n      \"methods\": 3,\n      \"sizeInLines\": 13,\n      \"spreadAllLines\": 19,\n      \"spreadCodeOnly\": 9\n    },\n    \"observations\": \"Replaces return point by throw exception.\",\n    \"program\": \"jfreechart\",\n    \"project\": \"Chart\",\n    \"repairActions\": [\n      \"assignAdd\",\n      \"condBranIfAdd\",\n      \"condBranRem\",\n      \"exThrowsAdd\",\n      \"mcAdd\",\n      \"mcRem\",\n      \"objInstAdd\",\n      \"retRem\",\n      \"varAdd\"\n    ],\n    \"repairPatterns\": [\n      \"condBlockExcAdd\",\n      \"missNullCheckP\",\n      \"unwrapIfElse\",\n      \"wrapsIf\"\n    ],\n    \"repairTools\": [\n      \"rtDeepRepair\",\n      \"rtGPFL\"\n    ],\n    \"revisionId\": \"621\"\n  }\n]\n```\n \n",
                "original_header": "defects4j-bugs.json format"
            },
            "confidence": 0.9470343970137285,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/program-repair/defects4j-dissection/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "defects4j-dissection",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "program-repair/defects4j-dissection",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/program-repair/defects4j-dissection/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/program-repair/defects4j-dissection/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 56,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "defects4j, open-science",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 20,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/program-repair/defects4j-dissection/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 6874
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 4891
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/program-repair/defects4j-dissection/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "https://github.com/program-repair/defects4j-dissection/tree/master/docs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@inproceedings{defects4J-dissection,\n    doi = {10.1109/SANER.2018.8330203},\n    year = {2018},\n    booktitle = {Proceedings of SANER},\n    author = {Sobreira, Victor and Durieux, Thomas and Madeiral, Fernanda and Monperrus, Martin and Maia, Marcelo A.},\n    title = {{Dissection of a Bug Dataset: Anatomy of 395 Patches from Defects4J}},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1109/SANER.2018.8330203",
                "title": "{Dissection of a Bug Dataset: Anatomy of 395 Patches from Defects4J}",
                "author": "Sobreira, Victor and Durieux, Thomas and Madeiral, Fernanda and Monperrus, Martin and Maia, Marcelo A."
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/program-repair/defects4j-dissection/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Defects4J Dissection"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/program-repair/defects4j-dissection/master/README.md"
        }
    ]
}