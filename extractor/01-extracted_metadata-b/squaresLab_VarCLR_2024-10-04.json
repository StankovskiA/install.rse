{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:10:18"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/squaresLab/VarCLR",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "squaresLab",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-03-16T07:14:32Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-01-04T16:55:44Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2021 Qibin Chen\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "VarCLR: Variable Semantic Representation Pre-training via Contrastive Learning",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This repository contains code and pre-trained models for VarCLR, a contrastive learning based approach for learning semantic representations of variable names that effectively captures variable similarity, with state-of-the-art results on [IdBench@ICSE2021](https://conf.researchr.org/details/icse-2021/icse-2021-papers/3/IdBench-Evaluating-Semantic-Representations-of-Identifier-Names-in-Source-Code). \n",
                "original_header": "<a href=\"https://arxiv.org/abs/2112.02650\">VarCLR: Variable Representation Pre-training via Contrastive Learning</a>"
            },
            "confidence": 0.9528651774421815,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "VarCLR",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "squaresLab/VarCLR",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/squaresLab/VarCLR/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/squaresLab/VarCLR/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 38,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "contrastive-learning, embeddings, icse2022, pre-training, source-code",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 5,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/squaresLab/VarCLR/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 51674
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "```bash\npip install -e .\n```\n",
                "type": "Text_excerpt",
                "original_header": "Step 0: Install",
                "parent_header": [
                    "<a href=\"https://arxiv.org/abs/2112.02650\">VarCLR: Variable Representation Pre-training via Contrastive Learning</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "```python\nemb = model.encode(\"squareslab\")\nprint(emb.shape)\n# torch.Size([1, 768])\n```\n",
                "type": "Text_excerpt",
                "original_header": "Get embedding of one variable",
                "parent_header": [
                    "<a href=\"https://arxiv.org/abs/2112.02650\">VarCLR: Variable Representation Pre-training via Contrastive Learning</a>",
                    "Step 2: VarCLR Variable Embeddings"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        },
        {
            "result": {
                "value": "```python\nemb = model.encode([\"squareslab\", \"strudel\"])\nprint(emb.shape)\n# torch.Size([2, 768])\n```\n",
                "type": "Text_excerpt",
                "original_header": "Get embeddings of list of variables (supports batching)",
                "parent_header": [
                    "<a href=\"https://arxiv.org/abs/2112.02650\">VarCLR: Variable Representation Pre-training via Contrastive Learning</a>",
                    "Step 2: VarCLR Variable Embeddings"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        },
        {
            "result": {
                "value": "```python\nprint(model.score(\"squareslab\", \"strudel\"))\n# [0.42812108993530273]\nprint(model.score([\"squareslab\", \"average\", \"max\", \"max\"], [\"strudel\", \"mean\", \"min\", \"maximum\"]))\n# [0.42812108993530273, 0.8849745988845825, 0.8035818338394165, 0.889922022819519]\n```\n",
                "type": "Text_excerpt",
                "original_header": "Get similarity scores of N variable pairs",
                "parent_header": [
                    "<a href=\"https://arxiv.org/abs/2112.02650\">VarCLR: Variable Representation Pre-training via Contrastive Learning</a>",
                    "Step 2: Get VarCLR Similarity Scores"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        },
        {
            "result": {
                "value": "```python\nvariable_list = [\"squareslab\", \"strudel\", \"neulab\"]\nprint(model.cross_score(\"squareslab\", variable_list))\n# [[1.0000007152557373, 0.4281214475631714, 0.7207341194152832]]\nprint(model.cross_score(variable_list, variable_list))\n# [[1.0000007152557373, 0.4281214475631714, 0.7207341194152832],\n#  [0.4281214475631714, 1.0000004768371582, 0.549992561340332],\n#  [0.7207341194152832, 0.549992561340332, 1.000000238418579]]\n```\n",
                "type": "Text_excerpt",
                "original_header": "Get pairwise (N * M) similarity scores from two lists of variables",
                "parent_header": [
                    "<a href=\"https://arxiv.org/abs/2112.02650\">VarCLR: Variable Representation Pre-training via Contrastive Learning</a>",
                    "Step 2: Get VarCLR Similarity Scores"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ],
    "support": [
        {
            "result": {
                "value": "```python\nemb = model.encode([\"squareslab\", \"strudel\"])\nprint(emb.shape)\n# torch.Size([2, 768])\n```\n",
                "type": "Text_excerpt",
                "original_header": "Get embeddings of list of variables (supports batching)",
                "parent_header": [
                    "<a href=\"https://arxiv.org/abs/2112.02650\">VarCLR: Variable Representation Pre-training via Contrastive Learning</a>",
                    "Step 2: VarCLR Variable Embeddings"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you find VarCLR useful in your research, please cite our paper@ICSE2022:\n\n```bibtex\n@inproceedings{ChenVarCLR2022,\n  author = {Chen, Qibin and Lacomis, Jeremy and Schwartz, Edward J. and Neubig, Graham and Vasilescu, Bogdan and {Le~Goues}, Claire},\n  title = {{VarCLR}: {Variable} Semantic Representation Pre-training via Contrastive Learning},\n  booktitle = {International Conference on Software Engineering},\n  year = {2022},\n  series = {ICSE '22}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Cite",
                "parent_header": [
                    "<a href=\"https://arxiv.org/abs/2112.02650\">VarCLR: Variable Representation Pre-training via Contrastive Learning</a>"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{ChenVarCLR2022,\n    series = {ICSE '22},\n    year = {2022},\n    booktitle = {International Conference on Software Engineering},\n    title = {{VarCLR}: {Variable} Semantic Representation Pre-training via Contrastive Learning},\n    author = {Chen, Qibin and Lacomis, Jeremy and Schwartz, Edward J. and Neubig, Graham and Vasilescu, Bogdan and {Le~Goues}, Claire},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "{VarCLR}: {Variable} Semantic Representation Pre-training via Contrastive Learning",
                "author": "Chen, Qibin and Lacomis, Jeremy and Schwartz, Edward J. and Neubig, Graham and Vasilescu, Bogdan and {Le~Goues}, Claire"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "```python\nfrom varclr.models.model import Encoder\nmodel = Encoder.from_pretrained(\"varclr-codebert\")\n```\n \n",
                "original_header": "Step 1: Load a Pre-trained VarCLR Model"
            },
            "confidence": 0.9229705100356164,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": ""
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/docs/_static/images/squareslab.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/docs/_static/images/strudel.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/docs/_static/images/training.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2112.02650"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/squaresLab/VarCLR/master/README.md"
        }
    ]
}