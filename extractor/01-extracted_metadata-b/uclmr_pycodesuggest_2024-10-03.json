{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:02:38"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/uclnlp/pycodesuggest",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "uclnlp",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2016-01-31T17:18:35Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-02-25T18:29:31Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Learning to Auto-Complete using RNN Language Models",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This repository contains the code used in the paper \"Learning Python Code Suggestion with a Sparse Pointer Network\"\n \n",
                "original_header": "Learning Python Code Suggestion with a Sparse Pointer Network"
            },
            "confidence": 0.956160692871329,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "pycodesuggest",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "uclnlp/pycodesuggest",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/uclnlp/pycodesuggest/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/uclnlp/pycodesuggest/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 156,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 30,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/uclmr/pycodesuggest/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 170626
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 243
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/github-scraper/normalise.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "* [Python 3.5+](https://www.python.org/)\n* [Git 1.7+](https://git-scm.com/)\n* [Tensorflow 0.9+](www.tensorflow.org) (Tested on 0.9 - 0.11)\n* [Github3.py](https://github3py.readthedocs.io/en/master/)\n* [GitPython](http://gitpython.readthedocs.io/en/stable/intro.html)\n* An account at [Github](https://github.com)\n",
                "type": "Text_excerpt",
                "original_header": "Prerequisites",
                "parent_header": [
                    "Learning Python Code Suggestion with a Sparse Pointer Network"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you make use of this code or the Python corpus, please cite:\n\n```\n@article{pycodesuggest,\n  author    = {Avishkar Bhoopchand and\n               Tim Rockt{\\\"{a}}schel and\n               Earl Barr and\n               Sebastian Riedel},\n  title     = {Learning Python Code Suggestion with a Sparse Pointer Network},\n  year      = {2016},\n  url       = {http://arxiv.org/abs/1611.08307}\n}\n```\n\n",
                "type": "Text_excerpt",
                "original_header": "Citing",
                "parent_header": [
                    "Learning Python Code Suggestion with a Sparse Pointer Network"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        },
        {
            "result": {
                "value": "@article{pycodesuggest,\n    url = {http://arxiv.org/abs/1611.08307},\n    year = {2016},\n    title = {Learning Python Code Suggestion with a Sparse Pointer Network},\n    author = {Avishkar Bhoopchand and\nTim Rockt{\\\"{a}}schel and\nEarl Barr and\nSebastian Riedel},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Learning Python Code Suggestion with a Sparse Pointer Network",
                "author": "Avishkar Bhoopchand and\nTim Rockt{\\\"{a}}schel and\nEarl Barr and\nSebastian Riedel",
                "url": "http://arxiv.org/abs/1611.08307"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "`python3 github-scraper/scraper.py --mode=recreate --outdir=<PATH-TO-OUTPUT-DIR> --dbfile=/FULL/PATH/TO/pycodesuggest/data/cloned_repos.dat --githubuser=<GITHUB USERNAME>` \nWhere outdir is the path on your local machine where the repos will be cloned. Note that the dbfile path should be the *full* path on your machine. You may be prompted for your Github password. \n`python3 github-scraper/scraper.py --mode=new --outdir=<PATH-TO-OUTPUT-DIR> --dbfile=cloned_repos.dat --githubuser=<GITHUB USERNAME>` \n",
                "original_header": "Step 1: Cloning the Repos"
            },
            "confidence": 0.9923783817598686,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Linux/Mac OS: Run the following command in your output directory to remove non Python files \n",
                "original_header": "Step 2: (OPTIONAL): Remove unnecessary files"
            },
            "confidence": 0.9999945120484124,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Run the following command to normalise all files with a .py extension by providing the output directory of step 1 as the path. The normalised files will be written to a new directory with \"normalised\" appended to the path.  \n`python3 github-scraper/normalisation.py --path=<PATH TO DOWNLOADED CORPUS>` \nFiles which can't be parsed as valid Python3 will be ignored. The list of successfully processed files is written to PATH/processed.txt which also allows for the normalisation to continue if interrupted. \n \n",
                "original_header": "Step 3: Normalisation"
            },
            "confidence": 0.9839889145044789,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To use the same train/dev/test split as used in the paper, copy the files train_files.txt, valid_files.txt and test_files.txt from the data directory into the downloaded corpus and normalised corpus directories. \nTo generate a new split, run the following command which generates the list of train files (train_files.txt), validation files (valid_files.txt) and test files (test_files.txt) in the ratio 0.5/0.2/0.3. Use the **normalised** path from the previous step. This will ensure that the list of files is available in both the normalised and unnormalised data sets.  \n`python3 github-scraper/processFiles.py --path=<PATH TO NORMALISED CORPUS>` \n",
                "original_header": "Step 4: Split into train/dev/test"
            },
            "confidence": 0.9989774203821393,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Learning Python Code Suggestion with a Sparse Pointer Network"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        }
    ],
    "related_documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://github3py.readthedocs.io/",
                "format": "readthedocs"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "http://gitpython.readthedocs.io/",
                "format": "readthedocs"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/uclmr/pycodesuggest/master/README.md"
        }
    ]
}