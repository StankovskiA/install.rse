{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:01:46"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/REDNet-verifier/IDNN",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "REDNet-verifier",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-05-03T13:02:31Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2023-05-03T14:05:51Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "IDNN",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "REDNet-verifier/IDNN",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/REDNet-verifier/IDNN/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/REDNet-verifier/IDNN/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/REDNet-verifier/IDNN/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 174872
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/REDNet-verifier/IDNN/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "Installation of alpha-beta-CROWN",
                "type": "Text_excerpt",
                "original_header": "Requirements",
                "parent_header": [
                    "REDNet pre-processing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/REDNet-verifier/IDNN/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "Installation\n------------\nInstall and setup alpha-beta-CROWN as follows:\n```\ngit clone https://github.com/Verified-Intelligence/alpha-beta-CROWN.git\ncd alpha-beta-CROWN\nconda deactivate; conda env remove --name alpha-beta-crown\nconda env create -f complete_verifier/environment.yml --name alpha-beta-crown\nconda activate alpha-beta-crown\n```\n\nClone the IDNN repository via git as follows:\n```\ngit clone https://github.com/REDNet-verifier/IDNN\n```\n\nCopy the files and folder in IDNN under path alpha-beta-crown/complete_verifier:\n```\ncp -r IDNN/exp_setups complete_verifier/exp_setups/\ncp IDNN/IDNN_A.py complete_verifier/IDNN_A.py\ncp IDNN/IDNN_B.py complete_verifier/IDNN_B.py\ncp IDNN/run_IDNN.py complete_verifier/run_IDNN.py\ncp IDNN/export_reduced_onnx.py complete_verifier/export_reduced_onnx.py\n```\n",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "REDNet pre-processing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/REDNet-verifier/IDNN/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "To run the benchmarks, please follow the command in the respective .yaml; download the VNNCOMP2021/2022/ERAN networks accordingly; and update the network path in .yaml configuration file.\n\nThe configuration files for all the networks and tested properties can be found under folder **exp_setups**. The networks' names are abbreviated in [the paper](http://arxiv.org/abs/2308.03330) due to the limited space, we hereby provide the table to match the networks' names in the paper and in this repo.\n\n| Network name in the paper  |   Network name in this repo  |\n| :------------------------- | :--------------------------- |\n| M\\_256x6   | mnist\\_256x6 |\n| M\\_ConvMed   | mnist\\_convmed |\n| M\\_ConvBig   | mnist\\_convbig |\n| M\\_SkipNet   | mnist\\_skipnet |\n| C\\_8\\_255Simp   | cifar2020\\_8\\_255 |\n| C\\_WideKW   | cifar\\_wide |\n| C\\_ConvBig   | cifar\\_convbig |\n| C\\_Resnet4b  | resnet4b |\n| C\\_ResnetA   | resnetA |\n| C\\_ResnetB   | resnetB |\n| C\\_100\\_Med   | cifar100\\_med |\n| C\\_100\\_Large  | cifar100\\_large |\n\nExample of running network C\\_8\\_255Simp:\n```\nconda activate alpha-beta-crown\ncd complete_verifier\npython abcrown.py --config exp_setups/cifar2020_8_255.yaml # running original abcrown\npython run_IDNN.py --config exp_setups/cifar2020_8_255.yaml # running abcrown with reduced network\n```\n\nTo export the reduced network in onnx networks:\n```\npython export_reduced_onnx.py --config exp_setups/cifar2020_8_255.yaml\n```",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "REDNet pre-processing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/REDNet-verifier/IDNN/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "[REDNet](http://arxiv.org/abs/2308.03330) is a pre-processing technique that uses the state-of-the-art bound propagator to detect stable ReLU neurons and then delete them in a way that preserves network manner. It is instantiated on CROWN propagator in alpha-beta-CROWN ([alpha-beta-CROWN](https://github.com/Verified-Intelligence/alpha-beta-CROWN)).  \n",
                "original_header": "REDNet pre-processing"
            },
            "confidence": 0.9688071579210923,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/REDNet-verifier/IDNN/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "REDNet pre-processing"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/REDNet-verifier/IDNN/main/README.md"
        }
    ]
}