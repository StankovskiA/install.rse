{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:11:30"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/emanino/plain_c_nn_benchmark",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "emanino",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-08-03T15:14:21Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-08-15T14:40:13Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2023 emanino\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/LICENSE"
        }
    ],
    "name": [
        {
            "result": {
                "value": "plain_c_nn_benchmark",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "emanino/plain_c_nn_benchmark",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/emanino/plain_c_nn_benchmark/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/emanino/plain_c_nn_benchmark/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 5,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/emanino/plain_c_nn_benchmark/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 62743376
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CMake",
                "name": "CMake",
                "type": "Programming_language",
                "size": 17211
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 714
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/emanino/plain_c_nn_benchmark/releases/119470873",
                "tag": "afrits-2023",
                "name": "AFRiTS 2023",
                "author": {
                    "name": "rafaelsamenezes",
                    "type": "User"
                },
                "description": "Benchmarks used at the Workshop on Automated Formal Reasoning for Trustworthy AI Systems 2023",
                "tarball_url": "https://api.github.com/repos/emanino/plain_c_nn_benchmark/tarball/afrits-2023",
                "zipball_url": "https://api.github.com/repos/emanino/plain_c_nn_benchmark/zipball/afrits-2023",
                "html_url": "https://github.com/emanino/plain_c_nn_benchmark/releases/tag/afrits-2023",
                "url": "https://api.github.com/repos/emanino/plain_c_nn_benchmark/releases/119470873",
                "release_id": 119470873,
                "date_created": "2023-08-30T13:09:47Z",
                "date_published": "2023-08-31T15:52:21Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/benchexec-extras/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "On an Ubuntu 22.04, the following command will install all dependencies:\n\n`apt install build-essential cmake gcc-multilib`\n\n",
                "type": "Text_excerpt",
                "original_header": "Dependencies",
                "parent_header": [
                    "Plain C Neural Network Verification Benchmark",
                    "Producing the benchmarks"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "2. **./includes/keras2c** contains the implementation of several types of neural network layers. These are used by networks converted via the keras2c tool: currently, polynomial approximation and hopfield networks belong to this category. \n3. **./includes/math_op_models** contains operational models of all the necessary mathematical functions in plain C. These files have been extracted from the MUSL implementation of the C standard library. \n4. **./models** contains the reference Keras and ONNX models for the networks in **/hopfield_nets** and **/poly_approx**. These models are not part of the main benchmarks. \n",
                "original_header": "File Structure"
            },
            "confidence": 0.9475073325648604,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If the verifier does not provide operational models for the math.h library, please include all .h and .c files in 'includes/math_op_models' (not shown here). \n",
                "original_header": "Compiling manually"
            },
            "confidence": 0.9363533430465532,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To generate the benchmarks:\n```bash\nmkdir build\ncd build\ncmake ..\nmake -j4 install\n```\n \nThe benchmarks will be inside `./build/export`\n \n",
                "original_header": "Compiling"
            },
            "confidence": 0.9920116937839945,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Plain C Neural Network Verification Benchmark"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2309.03617\n\n## File Structure\n\n1. **./benchexec-extras** contains additional files for running benchexec.\n\n2. **./includes/keras2c** contains the implementation of several types of neural network layers. These are used by networks converted via the keras2c tool: currently, polynomial approximation and hopfield networks belong to this category.\n\n3. **./includes/math_op_models** contains operational models of all the necessary mathematical functions in plain C. These files have been extracted from the MUSL implementation of the C standard library.\n\n4. **./models** contains the reference Keras and ONNX models for the networks in **/hopfield_nets** and **/poly_approx**. These models are not part of the main benchmarks.\n\n5. **./networks** contains the neural network code in plain C. All networks in  **/hopfield_nets** and **/poly_approx** depend on the keras2c layer described above. In contrast, all networks in **/reach_prob_density** and **/reinforcement_learning** have been converted with the onnx2c tool, which requires no dependencies.\n\n6. **./properties** contains the safety properties. Each property is specified as a main("
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/emanino/plain_c_nn_benchmark/main/README.md"
        }
    ]
}