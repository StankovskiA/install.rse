{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:51:04"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/JieyuZ2/EcoAssistant",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "JieyuZ2",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-09-25T03:50:08Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-26T18:09:39Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2024 Jieyu Zhang\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "EcoAssistant: using LLM assistant more affordably and accurately",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "EcoAssistant is a framework that can make the LLM assistant more affordable and accurate for code-driven question answering. It is based on the idea of **assistant hierarchy** and **solution demonstration**.\nIt is built upon [AutoGen](https://github.com/microsoft/autogen).\n\n![](https://github.com/JieyuZ2/EcoAssistant/blob/main/assets/system.png?raw=true)\n",
                "type": "Text_excerpt",
                "original_header": "What is EcoAssistant?",
                "parent_header": [
                    "EcoAssistant",
                    "Introduction"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        },
        {
            "result": {
                "value": "LLM assistant is an assistant agent backed by conversational LLM such as ChatGPT and GPT-4 and is able to address user query in a conversation.\n",
                "type": "Text_excerpt",
                "original_header": "What is LLM assistant?",
                "parent_header": [
                    "EcoAssistant",
                    "Introduction"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        },
        {
            "result": {
                "value": "Code-driven question answering is a task that requires the LLM assistant to write code to call external APIs to answer the question. \nFor example, given the question \"What is the average temperature of the city X in the next 5 days?\", the assistant needs to write code to get the weather information via certain APIS and calculate the average temperature of the city X in the next 5 days.\n\nCode-driven question answering requires iterative coding, because, just like human, LLM can hardly write the correct code at the first attempt.\nTherefore, the assistant needs to interact with the user to get feedback and revise the code iteratively until the code is correct.\nWe built our system on a **two-agent conversation framework**, where the LLM assistant is coupled with a code executor agent that can automatically execute the code and return the output to the LLM assistant.\n",
                "type": "Text_excerpt",
                "original_header": "What is code-driven question answering?",
                "parent_header": [
                    "EcoAssistant",
                    "Introduction"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        },
        {
            "result": {
                "value": "Assistant hierarchy is a hierarchy of assistants, where the LLM assistants are ranked by their cost (e.g., GPT-3.5-turbo -> GPT-4). \nWhen addressing a user query, the EcoAssistant first asks the cheapest assistant to answer the query. \nOnly when it fails, we invoke the more expensive assistant. It is designed to save the cost by reducing the usage of expensive assistants.\n",
                "type": "Text_excerpt",
                "original_header": "What is assistant hierarchy?",
                "parent_header": [
                    "EcoAssistant",
                    "Introduction"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        },
        {
            "result": {
                "value": "Solution demonstration is a technique that leverage the past successful query-code pair to help future queries.\nEverytime when a query is successfully addressed, we save the query-code pair to a database. \nWhen a new query comes, we retrieve the most similar query from the database, and then use the query and its associated code as in-context demonstration.\nIt is designed to improve the accuracy by leveraging the past successful query-code pairs.\n\n**The combination of assistant hierarchy and solution demonstration amplifies the individual benefits because the solution from high-performing model would be naturally leveraged to guide weaker model without specific designs.**\n",
                "type": "Text_excerpt",
                "original_header": "What is solution demonstration?",
                "parent_header": [
                    "EcoAssistant",
                    "Introduction"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "EcoAssistant",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "JieyuZ2/EcoAssistant",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/JieyuZ2/EcoAssistant/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/JieyuZ2/EcoAssistant/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 128,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "chatbot, gpt, large-language-models, llm-inference, nlp",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/JieyuZ2/EcoAssistant/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 37306
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "For queries about weather, stock, and places, EcoAssistant surpass individual GPT-4 assistant by 10 points of success rate with less than 50% of GPT-4's cost.\nMore details can be found in our paper.\n",
                "type": "Text_excerpt",
                "original_header": "Why use EcoAssistant?",
                "parent_header": [
                    "EcoAssistant",
                    "Introduction"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "All the data are included in this repository.\n\nYou only need to set your API keys in `keys.json`\n\nInstall required libraries (we recommend Python3.10):\n\n```bash\npip3 install -r requirements.txt\n```\n",
                "type": "Text_excerpt",
                "original_header": "Preparation",
                "parent_header": [
                    "EcoAssistant"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "**A simplified version with latest AutoGen is in `simplified_demo.py`** \n",
                "original_header": "EcoAssistant"
            },
            "confidence": 0.9401122691236516,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you find this repository useful, please consider citing:\n```bibtex\n@article{zhang2023ecoassistant,\n  title={EcoAssistant: Using LLM Assistant More Affordably and Accurately},\n  author={Zhang, Jieyu and Krishna, Ranjay and Awadallah, Ahmed H and Wang, Chi},\n  journal={arXiv preprint arXiv:2310.03046},\n  year={2023}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": ":paperclip: Cite",
                "parent_header": [
                    "EcoAssistant"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        },
        {
            "result": {
                "value": "@article{zhang2023ecoassistant,\n    year = {2023},\n    journal = {arXiv preprint arXiv:2310.03046},\n    author = {Zhang, Jieyu and Krishna, Ranjay and Awadallah, Ahmed H and Wang, Chi},\n    title = {EcoAssistant: Using LLM Assistant More Affordably and Accurately},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "EcoAssistant: Using LLM Assistant More Affordably and Accurately",
                "author": "Zhang, Jieyu and Krishna, Ranjay and Awadallah, Ahmed H and Wang, Chi"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        }
    ],
    "application_domain": [
        {
            "result": {
                "type": "String",
                "value": "Semantic web"
            },
            "confidence": 0.9841906210475416,
            "technique": "supervised_classification"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "\n**Run the GPT-3.5-turbo assistant**\n```bash\npython3 run.py --data mixed_100 --seed 0 --api --model gpt-3.5-turbo \n```\n \nset `model` to `gpt-3.5-turbo,gpt-4` \n```bash\npython3 run.py --data mixed_100 --seed 0 --api --model gpt-3.5-turbo,gpt-4\n```\n\n**Run the EcoAssistant: assistant hierarchy (GPT-3.5-turbo + GPT-4) + solution demonstration**\n```bash\npython3 run.py --data mixed_100 --seed 0 --api --solution_demonstration --model gpt-3.5-turbo,gpt-4\n```\n \n",
                "original_header": "Instructions"
            },
            "confidence": 0.9133544009837165,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "EcoAssistant"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/assets/system.png?raw=true"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2310.03046"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JieyuZ2/EcoAssistant/main/README.md"
        }
    ]
}