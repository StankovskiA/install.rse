{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:16:08"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/rizwan09/REDCODER",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "rizwan09",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-09-05T15:16:49Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-05T09:46:38Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": null,
                "type": "License",
                "name": "Other",
                "url": null,
                "spdx_id": "NOASSERTION"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Modified MIT License\n\nCopyright (c) 2021 Md Rizwan Parvez\n\nThis code uses underlying codebases like DPR which has different License such as non-commercial usgae. Please be awarev of that when using this software.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/LICENSE"
        }
    ],
    "name": [
        {
            "result": {
                "value": "REDCODER",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "rizwan09/REDCODER",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/rizwan09/REDCODER/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/rizwan09/REDCODER/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 40,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 9,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/rizwan09/REDCODER/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 6180960
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 698182
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 97297
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 20525
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CSS",
                "name": "CSS",
                "type": "Programming_language",
                "size": 6641
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 3781
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 1261
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <opensource-conduct@fb.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-R/CODE_OF_CONDUCT.md"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "# How to contribute to transformers?\n\nEveryone is welcome to contribute, and we value everybody's contribution. Code\nis thus not the only way to help the community. Answering questions, helping\nothers, reaching out and improving the documentations are immensely valuable to\nthe community.\n\nIt also helps us if you spread the word: reference the library from blog posts\non the awesome projects it made possible, shout out on Twitter every time it has\nhelped you, or simply star the repo to say \"thank you\".\n\n## You can contribute in so many ways!\n\nThere are 4 ways you can contribute to transformers:\n* Fixing outstanding issues with the existing code;\n* Implementing new models;\n* Contributing to the examples or to the documentation;\n* Submitting issues related to bugs or desired new features.\n\n*All are equally valuable to the community.*\n\n## Submitting a new issue or feature request\n\nDo your best to follow these guidelines when submitting an issue or a feature\nrequest. It will make it easier for us to come back to you quickly and with good\nfeedback.\n\n### Did you find a bug?\n\nThe transformers are robust and reliable thanks to the users who notify us of\nthe problems they encounter. So thank you for reporting an issue.\n\nFirst, we would really appreciate it if you could **make sure the bug was not\nalready reported** (use the search bar on Github under Issues).\n\nDid not find it? :( So we can act quickly on it, please follow these steps:\n\n* Include your **OS type and version**, the versions of **Python**, **PyTorch** and\n  **Tensorflow** when applicable;\n* A short, self-contained, code snippet that allows us to reproduce the bug in\n  less than 30s;\n* Provide the *full* traceback if an exception is raised.\n\nTo get the OS and software versions automatically, you can run the following command:\n\n```bash\ntransformers-cli env\n```\n\nor from the root of the repository the following command:\n\n```bash\npython src/transformers/commands/transformers_cli.py env\n```\n\n\n### Do you want to implement a new model?\n\nAwesome! Please provide the following information:\n\n* Short description of the model and link to the paper;\n* Link to the implementation if it is open-source;\n* Link to the model weights if they are available.\n\nIf you are willing to contribute the model yourself, let us know so we can best\nguide you.\n\nWe have added a **detailed guide and templates** to guide you in the process of adding a new model. You can find them \nin the [`templates`](https://github.com/huggingface/transformers/templates) folder.\n\n### Do you want a new feature (that is not a model)?\n\nA world-class feature request addresses the following points:\n\n1. Motivation first:\n  * Is it related to a problem/frustration with the library? If so, please explain\n    why. Providing a code snippet that demonstrates the problem is best.\n  * Is it related to something you would need for a project? We'd love to hear\n    about it!\n  * Is it something you worked on and think could benefit the community?\n    Awesome! Tell us what problem it solved for you.\n2. Write a *full paragraph* describing the feature;\n3. Provide a **code snippet** that demonstrates its future use;\n4. In case this is related to a paper, please attach a link;\n5. Attach any additional information (drawings, screenshots, etc.) you think may help.\n\nIf your issue is well written we're already 80% of the way there by the time you\npost it.\n\nWe have added **templates** to guide you in the process of adding a new example script for training or testing the \nmodels in the library. You can find them in the [`templates`](https://github.com/huggingface/transformers/templates) \nfolder.\n\n## Start contributing! (Pull Requests)\n\nBefore writing code, we strongly advise you to search through the exising PRs or\nissues to make sure that nobody is already working on the same thing. If you are\nunsure, it is always a good idea to open an issue to get some feedback.\n\nYou will need basic `git` proficiency to be able to contribute to\n`transformers`. `git` is not the easiest tool to use but it has the greatest\nmanual. Type `git --help` in a shell and enjoy. If you prefer books, [Pro\nGit](https://git-scm.com/book/en/v2) is a very good reference.\n\nFollow these steps to start contributing:\n\n1. Fork the [repository](https://github.com/huggingface/transformers) by\n   clicking on the 'Fork' button on the repository's page. This creates a copy of the code\n   under your GitHub user account.\n\n2. Clone your fork to your local disk, and add the base repository as a remote:\n\n   ```bash\n   $ git clone git@github.com:<your Github handle>/transformers.git\n   $ cd transformers\n   $ git remote add upstream https://github.com/huggingface/transformers.git\n   ```\n\n3. Create a new branch to hold your development changes:\n\n   ```bash\n   $ git checkout -b a-descriptive-name-for-my-changes\n   ```\n\n   **do not** work on the `master` branch.\n\n4. Set up a development environment by running the following command in a virtual environment:\n\n   ```bash\n   $ pip install -e \".[dev]\"\n   ```\n\n   (If transformers was already installed in the virtual environment, remove\n   it with `pip uninstall transformers` before reinstalling it in editable\n   mode with the `-e` flag.)\n\n   Right now, we need an unreleased version of `isort` to avoid a\n   [bug](https://github.com/timothycrosley/isort/pull/1000):\n\n   ```bash\n   $ pip install -U git+git://github.com/timothycrosley/isort.git@e63ae06ec7d70b06df9e528357650281a3d3ec22#egg=isort\n   ```\n5. Develop the features on your branch.\n\n   As you work on the features, you should make sure that the test suite\n   passes:\n\n   ```bash\n   $ make test\n   ```\n\n   `transformers` relies on `black` and `isort` to format its source code\n   consistently. After you make changes, format them with:\n\n   ```bash\n   $ make style\n   ```\n\n   `transformers` also uses `flake8` to check for coding mistakes. Quality\n   control runs in CI, however you can also run the same checks with:\n\n   ```bash\n   $ make quality\n   ```\n\n   Once you're happy with your changes, add changed files using `git add` and\n   make a commit with `git commit` to record your changes locally:\n\n   ```bash\n   $ git add modified_file.py\n   $ git commit\n   ```\n\n   Please write [good commit\n   messages](https://chris.beams.io/posts/git-commit/).\n\n   It is a good idea to sync your copy of the code with the original\n   repository regularly. This way you can quickly account for changes:\n\n   ```bash\n   $ git fetch upstream\n   $ git rebase upstream/master\n   ```\n\n   Push the changes to your account using:\n\n   ```bash\n   $ git push -u origin a-descriptive-name-for-my-changes\n   ```\n\n6. Once you are satisfied (**and the checklist below is happy too**), go to the\n   webpage of your fork on GitHub. Click on 'Pull request' to send your changes\n   to the project maintainers for review.\n\n7. It's ok if maintainers ask you for changes. It happens to core contributors\n   too! So everyone can see the changes in the Pull request, work in your local\n   branch and push the changes to your fork. They will automatically appear in\n   the pull request.\n\n\n### Checklist\n\n1. The title of your pull request should be a summary of its contribution;\n2. If your pull request adresses an issue, please mention the issue number in\n   the pull request description to make sure they are linked (and people\n   consulting the issue know you are working on it);\n3. To indicate a work in progress please prefix the title with `[WIP]`. These\n   are useful to avoid duplicated work, and to differentiate it from PRs ready\n   to be merged;\n4. Make sure existing tests pass;\n5. Add high-coverage tests. No quality testing = no merge. \n   - If you are adding a new model, make sure that you use \n     `ModelTester.all_model_classes = (MyModel, MyModelWithLMHead,...)`, which triggers the common tests.\n   - If you are adding new `@slow` tests, make sure they pass using \n     `RUN_SLOW=1 python -m pytest tests/test_my_new_model.py`. \n   - If you are adding a new tokenizer, write tests, and make sure \n     `RUN_SLOW=1 python -m pytest tests/test_tokenization_{your_model_name}.py` passes.\n   CircleCI does not run the slow tests. \n6. All public methods must have informative docstrings that work nicely with sphinx. See `modeling_ctrl.py` for an \n   example.\n\n### Tests\n\nAn extensive test suite is included to test the library behavior and several examples. Library tests can be found in \nthe [tests folder](https://github.com/huggingface/transformers/tree/master/tests) and examples tests in the \n[examples folder](https://github.com/huggingface/transformers/tree/master/examples).\n\nWe like `pytest` and `pytest-xdist` because it's faster. From the root of the\nrepository, here's how to run tests with `pytest` for the library:\n\n```bash\n$ python -m pytest -n auto --dist=loadfile -s -v ./tests/\n```\n\nand for the examples:\n\n```bash\n$ pip install -r examples/requirements.txt  # only needed the first time\n$ python -m pytest -n auto --dist=loadfile -s -v ./examples/\n```\n\nIn fact, that's how `make test` and `make test-examples` are implemented!\n\nYou can specify a smaller set of tests in order to test only the feature\nyou're working on.\n\nBy default, slow tests are skipped. Set the `RUN_SLOW` environment variable to\n`yes` to run them. This will download many gigabytes of models \u2014 make sure you\nhave enough disk space and a good Internet connection, or a lot of patience!\n\n```bash\n$ RUN_SLOW=yes python -m pytest -n auto --dist=loadfile -s -v ./tests/\n$ RUN_SLOW=yes python -m pytest -n auto --dist=loadfile -s -v ./examples/\n```\n\nLikewise, set the `RUN_CUSTOM_TOKENIZERS` environment variable to `yes` to run\ntests for custom tokenizers, which don't run by default either.\n\n\ud83e\udd17 Transformers uses `pytest` as a test runner only. It doesn't use any\n`pytest`-specific features in the test suite itself.\n\nThis means `unittest` is fully supported. Here's how to run tests with\n`unittest`:\n\n```bash\n$ python -m unittest discover -s tests -t . -v\n$ python -m unittest discover -s examples -t examples -v\n```\n\n\n### Style guide\n\nFor documentation strings, `transformers` follows the [google style](https://google.github.io/styleguide/pyguide.html).\nCheck our [documentation writing guide](https://github.com/huggingface/transformers/tree/master/docs#writing-documentation---specification)\nfor more information.\n\n#### This guide was heavily inspired by the awesome [scikit-learn guide to contributing](https://github.com/scikit-learn/scikit-learn/blob/master/CONTRIBUTING.md)\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/CONTRIBUTING.md"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/download_plbart.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/install_tools.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/evaluation_scripts/CodeBLEU/parser/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare_concode_redcoder_ext.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/run_bm25_csnet.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/run_concode_with_comments.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare_concode_redcoder.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare_bm25_concode.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare_conala.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/run_bm25_concode.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare_csnet_redcoder_ext.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare_csnet_redcoder.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/run_concode.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare_bm25_csnet.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/run_csnet_with_comments.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/run_conala.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/run_csnet.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/prepare_dpr_evalaute_text_to_code.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/text_to_code/parser/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/prep.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/prep_csnet_redcoder_ext.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/prepare_bm25_evalaute.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/prep_csnet_bm25.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/run_iclr.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/prepare_dpr_evalaute.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/prep_csnet.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/run_csnet_bm25.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/generate.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/prep_csnet_redcoder.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/download.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/run_csnet_with_codes.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/code_to_text/run_csnet.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/retrieval/bm25/pipeline.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/retrieval/bm25/pipeline-csnet-code-text.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/SCODE-G/retrieval/bm25/pipeline-csnet.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/deploy_multi_version_doc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/text-classification/run_pl.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/language-modeling/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/token-classification/run_pl.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/token-classification/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/seq2seq/train_distilbart_xsum.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/seq2seq/run_distiller.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/seq2seq/finetune_t5.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/seq2seq/finetune_bart_tiny.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/seq2seq/finetune.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/seq2seq/train_distilbart_cnn.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/.circleci/deploy.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "https://github.com/rizwan09/REDCODER/tree/main/transformers-3.0.2/docs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-cpu/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-cpu/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-gpu/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-gpu/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-tensorflow-cpu/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-tensorflow-cpu/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-tensorflow-gpu/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-tensorflow-gpu/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-pytorch-cpu/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-pytorch-cpu/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-pytorch-gpu/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docker/transformers-pytorch-gpu/Dockerfile"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "# Installation\n\n\ud83e\udd17 Transformers is tested on Python 3.6+, and PyTorch 1.1.0+ or TensorFlow 2.0+.\n\nYou should install \ud83e\udd17 Transformers in a [virtual environment](https://docs.python.org/3/library/venv.html). If you're\nunfamiliar with Python virtual environments, check out the [user guide](https://packaging.python.org/guides/installing-using-pip-and-virtual-environments/). Create a virtual environment with the version of Python you're going \nto use and activate it.\n\nNow, if you want to use \ud83e\udd17 Transformers, you can install it with pip. If you'd like to play with the examples, you\nmust install it from source.\n\n## Installation with pip\n\nFirst you need to install one of, or both, TensorFlow 2.0 and PyTorch.\nPlease refer to [TensorFlow installation page](https://www.tensorflow.org/install/pip#tensorflow-2.0-rc-is-available) \nand/or [PyTorch installation page](https://pytorch.org/get-started/locally/#start-locally) regarding the specific \ninstall command for your platform.\n\nWhen TensorFlow 2.0 and/or PyTorch has been installed, \ud83e\udd17 Transformers can be installed using pip as follows:\n\n```bash\npip install transformers\n```\n\nAlternatively, for CPU-support only, you can install \ud83e\udd17 Transformers and PyTorch in one line with\n\n```bash\npip install transformers[torch]\n```\n\nor \ud83e\udd17 Transformers and TensorFlow 2.0 in one line with\n\n```bash\npip install transformers[tf-cpu]\n```\n\nTo check \ud83e\udd17 Transformers is properly installed, run the following command:\n\n```bash\npython -c \"from transformers import pipeline; print(pipeline('sentiment-analysis')('I hate you'))\"\n```\n\nIt should download a pretrained model then print something like\n\n```bash\n[{'label': 'NEGATIVE', 'score': 0.9991129040718079}]\n```\n\n(Note that TensorFlow will print additional stuff before that last statement.)\n\n## Installing from source\n\nTo install from source, clone the repository and install with the following commands:\n\n``` bash\ngit clone https://github.com/huggingface/transformers.git\ncd transformers\npip install -e .\n```\n\nAgain, you can run \n\n```bash\npython -c \"from transformers import pipeline; print(pipeline('sentiment-analysis')('I hate you'))\"\n```\n\nto check \ud83e\udd17 Transformers is properly installed.\n\n## Caching models\n\nThis library provides pretrained models that will be downloaded and cached locally. Unless you specify a location with\n`cache_dir=...` when you use methods like `from_pretrained`, these models will automatically be downloaded in the\nfolder given by the shell environment variable ``TRANSFORMERS_CACHE``. The default value for it will be the PyTorch\ncache home followed by ``/transformers/`` (even if you don't have PyTorch installed). This is (by order of priority):\n\n  * shell environment variable ``ENV_TORCH_HOME``\n  * shell environment variable ``ENV_XDG_CACHE_HOME`` + ``/torch/``\n  * default: ``~/.cache/torch/``\n\nSo if you don't have any specific environment variable set, the cache directory will be at\n``~/.cache/torch/transformers/``.\n\n**Note:** If you have set a shell enviromnent variable for one of the predecessors of this library\n(``PYTORCH_TRANSFORMERS_CACHE`` or ``PYTORCH_PRETRAINED_BERT_CACHE``), those will be used if there is no shell\nenviromnent variable for ``TRANSFORMERS_CACHE``.\n\n### Note on model downloads (Continuous Integration or large-scale deployments)\n\nIf you expect to be downloading large volumes of models (more than 1,000) from our hosted bucket (for instance through\nyour CI setup, or a large-scale production deployment), please cache the model files on your end. It will be way\nfaster, and cheaper. Feel free to contact us privately if you need any help.\n\n## Do you want to run a Transformer model on a mobile device?\n\nYou should check out our [swift-coreml-transformers](https://github.com/huggingface/swift-coreml-transformers) repo.\n\nIt contains a set of tools to convert PyTorch or TensorFlow 2.0 trained Transformer models (currently contains `GPT-2`, \n`DistilGPT-2`, `BERT`, and `DistilBERT`) to CoreML models that run on iOS devices.\n\nAt some point in the future, you'll be able to seamlessly move from pre-training or fine-tuning models in PyTorch or\nTensorFlow 2.0 to productizing them in CoreML, or prototype a model or an app in CoreML then research its\nhyperparameters or architecture from PyTorch or TensorFlow 2.0. Super exciting!\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/docs/source/installation.md"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/movement-pruning/Saving_PruneBERT.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/examples/movement-pruning/Saving_PruneBERT.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/01-training-tokenizers.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/01-training-tokenizers.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/03-pipelines.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/03-pipelines.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/02-transformers.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/02-transformers.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/04-onnx-export.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/04-onnx-export.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/05-benchmark.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/transformers-3.0.2/notebooks/05-benchmark.ipynb"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- \ud83c\udf89 Our new paper [MapCoder](https://raw.githubusercontent.com/Md-Ashraful-Pramanik/MapCoder/) got accepted in [ACL 2024](https://2024.aclweb.org/).\n- All our codebase in both MapCoder and Redcoder are open-sourced with MIT and Modified MIT License.\n- See you at ACL, 2024, Bangkok, Thailand. \n \n",
                "original_header": "News"
            },
            "confidence": 0.9065445711690863,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This is repository for the SCODE-R retriever in the [Retrieval Augmented Code Generation and Summarization](https://arxiv.org/abs/2108.11601) paper. \n",
                "original_header": "REDCODER (Retrieval augmentED CODe gEneration and summaRization)"
            },
            "confidence": 0.9930374195599022,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you find this paper or this code useful, please cite this paper: \n\nOur model has two parts. You can use them seperately as well.\n- SCODE-R: Summary and Code Retriever. Please see instructions in ```./SCODE-R```.\n- SCODE-G: Summary and Code Generator. Please see instructions in BASH2*. \n"
            },
            "confidence": 0.94927988158779,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- Exclude retrieval candidate embeddings(too large)\n- Exclude tokenized input to SCODE-G (by sentencepiece, we provide code and docs in ```SCODE-G``` directory. Please use them instead.)\n- Please go through issues specially this [issue](https://github.com/rizwan09/REDCODER/issues/1)\n- Sample SCODE-R output: [code to text valid split top 30 k retrievals](https://drive.google.com/file/d/1ktOoJc0uRG7TqfYDI0OZlsLpMnRjEmLl/view?usp=sharing)\n- Finetuned SCODE-R checkpoints:\n  - Code2Text Python: [Link](https://drive.google.com/file/d/13-5wAHvNQwPifiODnpFYUFJpK-8NHtWt/view?usp=sharing)\n  - Text2Code Python: [Link](https://drive.google.com/file/d/1-YWPicpjynkC2sa8Mo02MhFiSvkV3ThJ/view?usp=sharing)\n  - Code2Text Java: [Link](https://drive.google.com/file/d/14nAonUhEKrE7Aufg6u2eNpchaiutNxIn/view?usp=sharing)\n  - Text2Code Java: [Link](https://drive.google.com/file/d/1pvolKC7o8iyGKLDCy37HXt4yH9lqTjpr/view?usp=sharing)\n- All the retrieval database: (a) one combined summary retrieval corpus for code2text for both python and Java (b) Java and Python code retrieval corpus for text2Code tasks: [LINK](https://drive.google.com/drive/folders/1njGXJuPsq5Eod9Ff5zAutRULk_G0TzQr?usp=sharing)\n \n",
                "original_header": "All REDCODER data/models/outputs together:"
            },
            "confidence": 0.9147814527293268,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@inproceedings{parvez2021retrieval,\n    year = {2021},\n    booktitle = {EMNLP-Findings},\n    author = {Parvez, Md Rizwan and Ahmad, Wasi Uddin and Chakraborty, Saikat and Ray, Baishakhi and Chang, Kai-Wei},\n    title = {Retrieval Augmented Code Generation and Summarization},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Retrieval Augmented Code Generation and Summarization",
                "author": "Parvez, Md Rizwan and Ahmad, Wasi Uddin and Chakraborty, Saikat and Ray, Baishakhi and Chang, Kai-Wei"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "News"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2108.11601"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/rizwan09/REDCODER/main/README.md"
        }
    ]
}