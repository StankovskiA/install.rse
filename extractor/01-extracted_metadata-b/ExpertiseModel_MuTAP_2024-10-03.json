{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 22:42:04"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/ExpertiseModel/MuTAP",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "ExpertiseModel",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-04-21T17:28:11Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-02T01:44:00Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "MutAP: A prompt_based learning technique to automatically generate test cases with Large Language Model",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "`MuTAP` is a prompt-based learning technique to generate effective test cases with Large Language Models (LLMs). This is an implementation of a method described in <a href=\"https://arxiv.org/abs/2308.16557\"><strong>Effective Test Generation Using Pre-trained Large Language Models and Mutation Testing</strong></a>. <br /> \n",
                "original_header": "MuTAP"
            },
            "confidence": 0.926511835393568,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "MuTAP",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "ExpertiseModel/MuTAP",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/ExpertiseModel/MuTAP/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/ExpertiseModel/MuTAP/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 24,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "llm, mutation-testing, prompt-based-learning, testcase-generator",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 4,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/ExpertiseModel/MuTAP/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 8374291
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Here is an example of `PUT` from the `HumanEval` dataset. We used the `few-shot learning` technique to generate the initial input for this example.\n\n```python\n#the PUT92\ndef any_int(x, y, z): \n          if isinstance(x,int) and isinstance(y,int) and isinstance(z,int):    \n               if (x+y==z) or (x+z==y) or (y+z==x):           \n                    return True       \n               return False   \n          return False\n```\n```python\npython generate_test_oracle.py \"fewshot\" \"HumanEval\" 92 \"script_NDS_\" \"T_O_FS_synxfixed_\" \"fewshot_synx_fix.csv\"\npython semantic_err_correction.py \"HumanEval\" 92 \"T_O_FS_synxfixed_\" \"T_O_FS_semticfixed_\" \"fewshot_semantic_fix.csv\"\npython Mutants_generation.py \"HumanEval\" 92 \"script_NDS_\" \"mutant_type.csv\"\npython Mutation_Score.py \"HumanEval\" 92  \"T_O_FS_semticfixed_\" \"fewshot_mutant_score.csv\"\npython augmented_prompt.py \"fewshot\" \"HumanEval\" 92 \"T_O_FS_semticfixed_\" \"test_oracle_FS_Mut_\" \"fewshot_mutant_score.csv\"\npython Merge_all_mut.py  \"HumanEval\" 92 \"T_O_FS_semticfixed_\" \"test_oracle_FS_Mut_\" \"T_O_FS_Mut_all_\"\npython greedy_test_generator.py \"HumanEval\" \"greedy_FS_results.scv\"\n```\n\nThe final test case that `MuTAP` generates for this example `PUT` is as follows:\n```python\ndef test():\n    assert any_int(3, 2, 5) == True\n    assert any_int(-3, -2, 1) == True\n    assert any_int(3, 2, 2) == False\n    assert any_int(3, 2, 1) == True\n    assert any_int(3.6, -2.2, 2) == False\n    \n  ```",
                "type": "Text_excerpt",
                "original_header": "Example",
                "parent_header": [
                    "MuTAP"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "<strong>Effective Test Generation Using Pre-trained Large Language Models and Mutation Testing</strong>\n```\n@article{,\n  title={Effective Test Generation Using Pre-trained Large Language Models and Mutation Testing},\n  author={Arghavan Moradi Dakhel, Amin Nikanjam, Vahid Majdinasab, Foutse Khomh, Michel C. Desmarais},\n  journal={https://arxiv.org/abs/2308.16557},\n  year={2023}\n}\n```\n\n    \n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "MuTAP"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Test cases generated by both initial prompt types, before and after augmentation are stored into two jsonl files: `Codex_test.jsonl.gz` and `llama2_test.jsonl.gz`.\n`Read_json_data.py` loads all test cases into a pickle file. \n",
                "original_header": "Load Data"
            },
            "confidence": 0.9624775768355285,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "MuTAP"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/MuTAP_diagram.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2308.16557\"><strong>Effective Test Generation Using Pre-trained Large Language Models and Mutation Testing</strong></a>. <br />\n\n![](https://github.com/ExpertiseModel/MuTAP/blob/master/MuTAP_diagram.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2308.16557"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ExpertiseModel/MuTAP/master/README.md"
        }
    ]
}