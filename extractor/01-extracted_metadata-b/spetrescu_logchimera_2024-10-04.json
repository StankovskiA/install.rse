{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:05:25"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/spetrescu/logchimera",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "spetrescu",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-05-25T08:37:12Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-07-16T13:51:42Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2023, Stefan Petrescu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/LICENSE"
        },
        {
            "result": {
                "value": "`logchimera` was created by Stefan Petrescu. It is licensed under the terms of the MIT license.\n",
                "type": "Text_excerpt",
                "original_header": "License",
                "parent_header": [
                    "logchimera"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Connecting research log processing to industry. Generate industry-like logs from publicly available data. Estimate log heterogeneity.",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": " `logchimera` was born out of a research innitiative ([Log Parsing Evaluation in the Era of Modern Software Systems](https://arxiv.org/abs/2308.09003)), as a consequence of a general lack of access to heterogeneous log data typically found in industry. With `logchimera` you can generate and evaluate log parsing on heterogeneous industry-like data from publicly available logs. The name of the tool is inspired by the mythological creature _chimera_, which symbolizes a fusion or combination of different elements; and in this case, it reflects heterogeneity by enabling bringing together diverse formats from various logs to resemble industry-like contexts. \n",
                "original_header": "logchimera"
            },
            "confidence": 0.9935847281407856,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "logchimera",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "spetrescu/logchimera",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/spetrescu/logchimera/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/spetrescu/logchimera/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/spetrescu/logchimera/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 46400
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "# Contributing\n\nContributions are welcome, and they are greatly appreciated! Every little bit\nhelps, and credit will always be given.\n\n## Types of Contributions\n\n### Report Bugs\n\nIf you are reporting a bug, please include:\n\n* Your operating system name and version.\n* Any details about your local setup that might be helpful in troubleshooting.\n* Detailed steps to reproduce the bug.\n\n### Fix Bugs\n\nLook through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help\nwanted\" is open to whoever wants to implement it.\n\n### Implement Features\n\nLook through the GitHub issues for features. Anything tagged with \"enhancement\"\nand \"help wanted\" is open to whoever wants to implement it.\n\n### Write Documentation\n\nYou can never have enough documentation! Please feel free to contribute to any\npart of the documentation, such as the official docs, docstrings, or even\non the web in blog posts, articles, and such.\n\n### Submit Feedback\n\nIf you are proposing a feature:\n\n* Explain in detail how it would work.\n* Keep the scope as narrow as possible, to make it easier to implement.\n* Remember that this is a volunteer-driven project, and that contributions\n  are welcome :)\n\n## Get Started!\n\nReady to contribute? Here's how to set up `logchimera` for local development.\n\n1. Download a copy of `logchimera` locally.\n2. Install `logchimera` using `poetry`:\n\n    ```console\n    $ poetry install\n    ```\n\n3. Use `git` (or similar) to create a branch for local development and make your changes:\n\n    ```console\n    $ git checkout -b name-of-your-bugfix-or-feature\n    ```\n\n4. When you're done making changes, check that your changes conform to any code formatting requirements and pass any tests.\n\n5. Commit your changes and open a pull request.\n\n## Pull Request Guidelines\n\nBefore you submit a pull request, check that it meets these guidelines:\n\n1. The pull request should include additional tests if appropriate.\n2. If the pull request adds functionality, the docs should be updated.\n3. The pull request should work for all currently supported operating systems and versions of Python.\n\n## Code of Conduct\n\nPlease note that the `logchimera` project is released with a\nCode of Conduct. By contributing to this project you agree to abide by its terms.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/CONTRIBUTING.md"
        },
        {
            "result": {
                "value": "Interested in contributing? Check out the contributing guidelines. Please note that this project is released with a Code of Conduct. By contributing to this project, you agree to abide by its terms.\n",
                "type": "Text_excerpt",
                "original_header": "Contributing",
                "parent_header": [
                    "logchimera"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "https://github.com/spetrescu/logchimera/tree/main/docs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/spetrescu/logchimera/main/docs/example.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/docs/example.ipynb"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "We display below how you can use `logchimera`. Currently, `logchimera` can do the following:\n1. Estimate heterogeneity for a log dataset\n2. Increase the heterogeneity for a log dataset\n3. Transform industry data into publicly available data with equivalent properties\n\nTo use `logchimera`, make sure you first follow the set-up section corresponding to your system (currently available for Linux or Mac).",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "logchimera"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "To estimate log heterogeneity, simply provide the path to your file. Currently, `logchimera` is able to estimate heterogeneity for a file of arbitrary size. The only requirement that needs to be met is for your file to contain the log lines separated by a new line character. Below you can see a sample of what `logchimera` would expect in terms of an input file.\n",
                "type": "Text_excerpt",
                "original_header": "1. Estimate heterogeneity",
                "parent_header": [
                    "logchimera",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "```\nworkerEnv.init() ok /etc/httpd/conf/workers2.properties\nmod_jk child init 1 -2\njk2_init() Found child 5785 in scoreboard slot 6\n...\n```",
                "type": "Text_excerpt",
                "original_header": "Sample input file:",
                "parent_header": [
                    "logchimera",
                    "Usage",
                    "1. Estimate heterogeneity"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "```python\n# example estimating heterogeneity in python shell\n$ python\nPython 3.9.17 (main, Jul  5 2023, 20:41:20) \n[GCC 11.2.0] :: Anaconda, Inc. on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from logchimera.logchimera import estimate_heterogeneity\n>>> from logchimera.datasets import get_example_data_for_estimating_heterogeneity\n>>> example_file_path = get_example_data_for_estimating_heterogeneity()\n>>> estimate_heterogeneity(example_file_path)\n# Returns a 3-decimal floating-point value in the range [0, 1], e.g., 0.222; higher means more heterogeneous.\n...\n```",
                "type": "Text_excerpt",
                "original_header": "Example 1 (estimate heterogeneity)",
                "parent_header": [
                    "logchimera",
                    "Usage",
                    "1. Estimate heterogeneity"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "```python\n# example estimating heterogeneity in python script\nfrom logchimera.logchimera import estimate_heterogeneity\nfrom logchimera.datasets import get_example_data_for_estimating_heterogeneity\nexample_file_path = get_example_data_for_estimating_heterogeneity()\nh_level = estimate_heterogeneity(example_file_path) # Returns a 3-decimal floating-point value in the range [0, 1], e.g., 0.222; higher means more heterogeneous.\nprint(h_level)\n...\n```",
                "type": "Text_excerpt",
                "original_header": "Example 2 (estimate heterogeneity)",
                "parent_header": [
                    "logchimera",
                    "Usage",
                    "1. Estimate heterogeneity"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "To increase log heterogeneity, simply provide the path to your file. Currently, `logchimera` is able to increase heterogeneity for a file of arbitrary size. The only requirement that needs to be met is for your file to contain the log lines separated by a new line character.\n",
                "type": "Text_excerpt",
                "original_header": "2. Increase heterogeneity",
                "parent_header": [
                    "logchimera",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "To transform your industry log dataset, you simply need to provide a list of files (one or more) with logs. Currently, `logchimera` assumes that every input file represents a different application. For example, if you provide 10 input files, `logchimera` is going to assume that each file contains logs from 10 different applications. In turn, `logchimera` returns 10 files with equivalent heterogeneity, using publicly available data.\n\n",
                "type": "Text_excerpt",
                "original_header": "3. Transform industry data into publicly available logs",
                "parent_header": [
                    "logchimera",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "1. Install `miniconda`\n```bash\n$ mkdir -p ~/miniconda3\n$ curl https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-arm64.sh -o ~/miniconda3/miniconda.sh\n$ bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\n$ rm -rf ~miniconda3/miniconda.sh\n```\n2. Initialize `miniconda` for bash / zsh shells\n```bash\n$ ~/miniconda3/bin/conda init bash\n$ ~/miniconda3/bin/conda init zsh\n```\n3. Create `logchimera` virtual environment and activate it\n```bash\n$ conda create --name logchimera python=3.9 -y\n$ conda activate logchimera\n$ pip install poetry\n```\n4. Install package\n```bash\n$ git clone https://github.com/spetrescu/logchimera.git\n$ cd logchimera\n$ poetry install\n```\n5. Check if installation was successfull\n```bash\n$ python\nPython 3.9.16 (main, Mar  8 2023, 04:29:44) \n[Clang 14.0.6 ] :: Anaconda, Inc. on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from logchimera.logchimera import function_test\n>>>\n```\n",
                "type": "Text_excerpt",
                "original_header": "Set-up MacOS",
                "parent_header": [
                    "logchimera"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "1. Install `miniconda`\n```bash\n$ mkdir -p ~/miniconda3\n$ wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh\n$ bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3\n$ rm -rf ~/miniconda3/miniconda.sh\n```\n2. Initialize `miniconda` for bash / zsh shells\n```bash\n$ ~/miniconda3/bin/conda init bash\n$ ~/miniconda3/bin/conda init zsh\n```\n3. Create `logchimera` virtual environment and activate it\n```bash\n$ conda create --name logchimera python=3.9 -y\n$ conda activate logchimera\n$ pip install poetry\n```\n4. Install package\n```bash\n$ git clone https://github.com/spetrescu/logchimera.git\n$ cd logchimera\n$ poetry install\n```\n5. Check if installation was successfull\n```bash\n$ python\nPython 3.9.17 (main, Jul  5 2023, 20:41:20) \n[GCC 11.2.0] :: Anaconda, Inc. on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> from logchimera.logchimera import estimate_heterogeneity\n>>>\n```\n",
                "type": "Text_excerpt",
                "original_header": "Set-up Linux",
                "parent_header": [
                    "logchimera"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "```bash\n$ pip install logchimera\n```\n",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "logchimera"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "  <img width=\"230\" alt=\"Group_movie\" src=\"https://github.com/spetrescu/logchimera/assets/60047427/10cc52d6-dc33-4159-a99c-cfc279cf3f11.jpg\">\n  <img width=\"230\" alt=\"Group_movie\" src=\"https://github.com/spetrescu/logchimera/assets/60047427/d2012c9d-753c-4b9d-b867-1c65896c26df.jpg\">\n  <img width=\"230\" alt=\"Group_movie\" src=\"https://github.com/spetrescu/logchimera/assets/60047427/cdc0d927-fbf5-48be-8a6c-e033fb4af958.jpg\"> \n  </p>\n  <p>\n    <a href=\"\">\n      <img alt=\"First release\" src=\"https://img.shields.io/badge/release-v0.1.0-brightgreen.svg\" />\n    </a>\n  </p>\n</div>\n \n",
                "original_header": "logchimera"
            },
            "confidence": 0.9999092073562457,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "The initial package structure of `logchimera` was created with [`cookiecutter`](https://cookiecutter.readthedocs.io/en/latest/) and the `py-pkgs-cookiecutter` [template](https://github.com/py-pkgs/py-pkgs-cookiecutter).\n",
                "type": "Text_excerpt",
                "original_header": "Credits for Initial Package Structure",
                "parent_header": [
                    "logchimera"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "To cite this package, you can use the following BibTeX entry:\n```python\n@INPROCEEDINGS{petrescu2023issre,\nauthor={Petrescu, Stefan and den Hengst, Floris and Uta, Alexandru and Rellermeyer, Jan S.},\nbooktitle={34th IEEE International Symposium on Software Reliability Engineering (ISSRE)},\ntitle={Log Parsing Evaluation in the Era of Modern Software Systems},\nyear={2023}}\n```\n\n\n\n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "logchimera"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{petrescu2023issre,\n    year = {2023},\n    title = {Log Parsing Evaluation in the Era of Modern Software Systems},\n    booktitle = {34th IEEE International Symposium on Software Reliability Engineering (ISSRE)},\n    author = {Petrescu, Stefan and den Hengst, Floris and Uta, Alexandru and Rellermeyer, Jan S.},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Log Parsing Evaluation in the Era of Modern Software Systems",
                "author": "Petrescu, Stefan and den Hengst, Floris and Uta, Alexandru and Rellermeyer, Jan S."
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "logchimera"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "related_documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://cookiecutter.readthedocs.io/",
                "format": "readthedocs"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/spetrescu/logchimera/assets/60047427/10cc52d6-dc33-4159-a99c-cfc279cf3f11.jpg"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/spetrescu/logchimera/assets/60047427/d2012c9d-753c-4b9d-b867-1c65896c26df.jpg"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/spetrescu/logchimera/assets/60047427/cdc0d927-fbf5-48be-8a6c-e033fb4af958.jpg"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2308.09003"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/spetrescu/logchimera/main/README.md"
        }
    ]
}