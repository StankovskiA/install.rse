{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:08:28"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/umangm/ziptrack",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "umangm",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2018-05-08T23:17:16Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-04-25T13:33:52Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2018 Umang Mathur\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Race Detection on Compressed Traces",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "ZipTrack analyses traces of concurrent programs, compressed as SLPs (straight line programs) and checks if there is a data race.  \nIt is based on [Data Race Detection On Compressed Traces, Kini et al, FSE 2018](https://dl.acm.org/citation.cfm?id=3236025). The original artifact submitted for ZipTrack can be found [here](https://uofi.box.com/v/ziptrack-fse18-artifact). A link to the original traces used can be found in the artifact.  \n\nZipTrack performs two analyses :\n\n\t1. HB race detection\n\t2. LockSet violation detection\n\nZipTrack is written in Java. \nThe following classes let you perform different analyses:\n\n\t1. `ZipHB.java` - for HB race detection on compressed traces\n\t2. `ZipLockSet.java` - for detecting violations of lockset discipline on compressed traces\n\t3. `ZipMetaInfo.java` - for printing trace characteristics.\n\t4. `TransformGrammar.java` - for transforming an SLP S into another SLP S' with more production rules that have terminal symbols only.\n\t5. `PrintTrace.java` - Convert an execution trace generated by RVPredict into a readable format.  \n\t**Update** - ZipTrack now supports two other formats - [STD](https://github.com/umangm/rapid/) and [RoadRunner's trace format](https://github.com/umangm/rapid/blob/master/notes/Generate_RoadRunner_traces.md).\n",
                "type": "Text_excerpt",
                "original_header": "Description",
                "parent_header": [
                    "ZipTrack"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "ziptrack",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "umangm/ziptrack",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/umangm/ziptrack/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/umangm/ziptrack/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 5,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "compression, program-analysis, programming-languages, race-detection",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 4,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/umangm/ziptrack/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 195717
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 68835
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 46761
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 8689
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 6073
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Perl",
                "name": "Perl",
                "type": "Programming_language",
                "size": 4991
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 987
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 691
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/umangm/ziptrack/releases/12985275",
                "tag": "v1.0.1",
                "name": "Artifact update",
                "author": {
                    "name": "umangm",
                    "type": "User"
                },
                "tarball_url": "https://api.github.com/repos/umangm/ziptrack/tarball/v1.0.1",
                "zipball_url": "https://api.github.com/repos/umangm/ziptrack/zipball/v1.0.1",
                "html_url": "https://github.com/umangm/ziptrack/releases/tag/v1.0.1",
                "url": "https://api.github.com/repos/umangm/ziptrack/releases/12985275",
                "release_id": 12985275,
                "date_created": "2018-09-19T17:14:26Z",
                "date_published": "2018-09-19T17:16:17Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/umangm/ziptrack/releases/12931683",
                "tag": "v1.0.0",
                "author": {
                    "name": "umangm",
                    "type": "User"
                },
                "tarball_url": "https://api.github.com/repos/umangm/ziptrack/tarball/v1.0.0",
                "zipball_url": "https://api.github.com/repos/umangm/ziptrack/zipball/v1.0.0",
                "html_url": "https://github.com/umangm/ziptrack/releases/tag/v1.0.0",
                "url": "https://api.github.com/repos/umangm/ziptrack/releases/12931683",
                "release_id": 12931683,
                "date_created": "2018-06-23T20:34:06Z",
                "date_published": "2018-09-17T10:26:45Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "In order to use ZipTrack, you need traces.\nWe use [RVPredict](https://runtimeverification.com/predict/)'s logger functionality for this.  \nWe then compress these traces as SLPs, using [Sequitur](https://github.com/craignm/sequitur).\nThese compressed traces can then be analyzed by ZipTrack.\n\n**Updates** -\n- RVPredict's support is deprecated. If still interested, you should use [this](https://uofi.box.com/v/rvpredict) version of RVPredict for logging traces. If this version does not work, your best bet is to download the latest version from [RVPredict's website](https://runtimeverification.com/predict/).\n- Recently, we also added support for using [RoadRunner](https://github.com/stephenfreund/RoadRunner)'s logging functionality. See [here](https://github.com/umangm/rapid/blob/master/notes/Generate_RoadRunner_traces.md) for help on how to generate RoadRunner logs.\n- We have also added support for manually written traces in the STD (Standard) format described [here](https://github.com/umangm/rapid/). This is a simple format and one can handcraft traces in this format for testing purposes.\n\n\n\n",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "ZipTrack"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        },
        {
            "result": {
                "value": "1. ~~Download and install [RVPredict](https://runtimeverification.com/predict/).~~\nDownload [this](https://uofi.box.com/v/rvpredict) version of RVPredict and if it does not work, use [the latest version from the website](https://runtimeverification.com/predict/).\n2. Run the logger :\n\n```\njava -jar /path/to/rv-predict.jar  --log  --base-log-dir /path/to/base_folder --log-dirname sub_folder <java_class_to_be_analyzed>\n\n```\nThis command creates binary log files in `/path/to/base_folder/sub_folder`.\n\n**Update** - You can now generate traces using [RoadRunner](https://github.com/stephenfreund/RoadRunner). See [here](https://github.com/umangm/rapid/blob/master/notes/Generate_RoadRunner_traces.md) for instructions.  \nAdditionally, you can also write your own traces in the more readable STD format described [here](https://github.com/umangm/rapid/).\n",
                "type": "Text_excerpt",
                "original_header": "Generating traces:",
                "parent_header": [
                    "ZipTrack",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        },
        {
            "result": {
                "value": "Use the build file :\n\n```\ncd /path/to/ziptrack\nant jar\n```\n\n",
                "type": "Text_excerpt",
                "original_header": "Compiling ZipTrack",
                "parent_header": [
                    "ZipTrack",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        },
        {
            "result": {
                "value": "1. First convert the bin files into a readable format. \n- When using RVPRedict traces, run the following command:\n```\njava -classpath /path/to/ziptrack/lib/*:/path/to/ziptrack/ziptrack.jar PrintTrace -p=/path/to/base_folder/sub_folder -f=rv -m=/path/to/base_folder/sub_folder/map.txt > /path/to/base_folder/sub_folder/trace.txt \n```\nThis command creates two files: `/path/to/base_folder/sub_folder/trace.txt` and `/path/to/base_folder/sub_folder/map.shared.txt`\n\n- When using RoadRunner traces, run the following command:\n```\njava -classpath /path/to/ziptrack/lib/*:/path/to/ziptrack/ziptrack.jar PrintTrace -p=/path/to/input_trace_file.rr -f=rr -m=/path/to/map.txt > /path/to/trace.txt \n```\nThis command creates two files: `/path/to/trace.txt` and `/path/to/map.txt`\n\n- When using traces in STD format, run the following command:\n```\njava -classpath /path/to/ziptrack/lib/*:/path/to/ziptrack/ziptrack.jar PrintTrace -p=/path/to/input_trace_file.std -f=std -m=/path/to/map.txt > /path/to/trace.txt \n```\nThis command creates two files: `/path/to/trace.txt` and `/path/to/map.txt`\n\n\n\n2. Use Sequitur to compress `trace.txt`. \nFor this, first compile Sequitur.\nZipTrack comes with a copy of Sequitur (forked from [here](https://github.com/craignm/sequitur/)).\n```\ncd /path/to/ziptrack/sequitur/c++\nmake\n/path/to/ziptrack/sequitur/c++/sequitur -d -p -m 2000 < /path/to/base_folder/sub_folder/trace.txt > /path/to/base_folder/sub_folder/slp.txt\n```\n\nThis command creates the SLP in the file `/path/to/base_folder/sub_folder/slp.txt`.\n",
                "type": "Text_excerpt",
                "original_header": "Compressing traces:",
                "parent_header": [
                    "ZipTrack",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "1. [Optional] First transform the grammar:\n```\njava -Xmx10000m -Xms10000m -classpath /path/to/ziptrack/ziptrack.jar:/path/to/ziptrack/lib/* TransformGrammar -m /path/to/base_folder/sub_folder/map.shared.txt -t /path/to/base_folder/sub_folder/slp.txt  -s > /path/to/base_folder/sub_folder/slp_new.txt\n## Replace the old SLP :\ncp /path/to/base_folder/sub_folder/slp.txt /path/to/base_folder/sub_folder/slp_old.txt\ncp /path/to/base_folder/sub_folder/slp_new.txt /path/to/base_folder/sub_folder/slp.txt \n```\n\n2. Run ZipHB :\n\n```\njava -Xmx10000m -Xms10000m -classpath /path/to/ziptrack/ziptrack.jar:/path/to/ziptrack/lib/* ZipHB -m /path/to/base_folder/sub_folder/map.shared.txt -t /path/to/base_folder/sub_folder/slp.txt  -s \n```\n\n3. Run ZipLockSet :\n\n```\njava -Xmx10000m -Xms10000m -classpath /path/to/ziptrack/ziptrack.jar:/path/to/ziptrack/lib/* ZipLockSet -m /path/to/base_folder/sub_folder/map.shared.txt -t /path/to/base_folder/sub_folder/slp.txt  -s \n```\n\n4. Run ZipMetaInfo :\n\n```\njava -Xmx10000m -Xms10000m -classpath /path/to/ziptrack/ziptrack.jar:/path/to/ziptrack/lib/* ZipMetaInfo -m /path/to/base_folder/sub_folder/map.shared.txt -t /path/to/base_folder/sub_folder/slp.txt\n```\n\n",
                "type": "Text_excerpt",
                "original_header": "Run ZipTrack",
                "parent_header": [
                    "ZipTrack",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        },
        {
            "result": {
                "value": "We will use [RAPID](https://github.com/umangm/rapid/) for this.\n\nFirst, clone RAPID and run `ant jar` in RAPID's directory.\nThen, follow these steps:\n\n1. Run Djit+ VC algorithm :\n\n```\njava -Xmx10000m -Xms10000m -classpath /path/to/rapid/rapid.jar:/path/to/rapid/lib/* HB -p=/path/to/base_folder/sub_folder -f=rv -s\n```\n\n2. Run FastTrack VC algorithm :\n\n```\njava -Xmx10000m -Xms10000m -classpath /path/to/rapid/rapid.jar:/path/to/rapid/lib/* HBEpoch -p=/path/to/base_folder/sub_folder -f=rv -s\n```\n\n3. Run Goldilocks algorithm :\n\n```\njava -Xmx10000m -Xms10000m -classpath /path/to/rapid/rapid.jar:/path/to/rapid/lib/* Goldilocks -p=/path/to/base_folder/sub_folder -f=rv -s\n```\n\n4. Run Lockset algorithm :\n\n```\njava -Xmx10000m -Xms10000m -classpath /path/to/rapid/rapid.jar:/path/to/rapid/lib/* LockSet -p=/path/to/base_folder/sub_folder -f=rv -s\n```\n",
                "type": "Text_excerpt",
                "original_header": "Run analyses on Uncompressed traces",
                "parent_header": [
                    "ZipTrack",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "ZipTrack"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/umangm/ziptrack/master/ziptrack_logo.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/umangm/ziptrack/master/README.md"
        }
    ]
}