{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:46:31"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/Learner0x5a/kTrans-release",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "Learner0x5a",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-08-24T08:44:42Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-01T02:19:42Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2023 Wenyu Zhu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Official code for kTrans: Knowledge-Aware Transformer for Binary Code Embedding",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "*This repo provide the source code, the pretrained model as well as Quick Start of [kTrans](https://arxiv.org/abs/2308.12659).* \n",
                "original_header": "kTrans: Knowledge-Aware Transformer for Binary Code Embedding"
            },
            "confidence": 0.9125827640150207,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "kTrans-release",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "Learner0x5a/kTrans-release",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/Learner0x5a/kTrans-release/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/Learner0x5a/kTrans-release/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 22,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "binary, embedding, knowledge, reverse-engineering, transformer",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/Learner0x5a/kTrans-release/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 63902
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": " - NVIDIA GPU\n - CUDA 11.7\n - IDA Pro 7.6 (Linux)\n - pytorch 2.0\n - pytorch Lightning 2.0\n - transformers 4.27.1\n - captone 4.0.2\n",
                "type": "Text_excerpt",
                "original_header": "Requirements",
                "parent_header": [
                    "kTrans: Knowledge-Aware Transformer for Binary Code Embedding"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "download": [
        {
            "result": {
                "value": "https://drive.google.com/file/d/1SvS4tO-UVvZDvdubl9jVgUKJtjzdxa7V/view?usp=sharing\n\n```bash\n$ md5sum ktrans-110M-epoch-2.ckpt\n6628c8a5e0bb9689bce0d5fe10bde734  ktrans-110M-epoch-2.ckpt\n``` \n",
                "type": "Text_excerpt",
                "original_header": "Download link for the pretrained kTrans model",
                "parent_header": [
                    "kTrans: Knowledge-Aware Transformer for Binary Code Embedding"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "This step generates a pickle file containing a list of [instruction addresses,disassembly,instruction,operand type, operand r/w status, eflags]\n\ne.g. `/root/idapro-7.6/idat64 -L\"ida.log\" -A -S\"./insn_rw.py ./ida_outputs\" ./demo_bin/ls`\n\n```bash\n# Note: Remember to change IDA's python interpreter to the system's python interpreter (the one equipped with PyTorch, Capstone, etc.)\n/path/to/ida -L\"ida.log\" -A -S\"./insn_rw.py output_dir\" /path/to/target_binary\n```\n",
                "type": "Text_excerpt",
                "original_header": "1. Generate instructions along with metadata with IDA",
                "parent_header": [
                    "kTrans: Knowledge-Aware Transformer for Binary Code Embedding",
                    "Usage to generate embedding from a given binary program"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        },
        {
            "result": {
                "value": "This step generates embedding with kTrans and stores the output into a pickle file (numpy.ndarray in shape (num_functions, embedding_dim))\n\ne.g. `python3 ktrans-gen-emb.py -i ./ida_outputs -o ./saved_emb -m ./ktrans-110M-epoch-2.ckpt -n 32 -bs 128`\n\n```bash\npython3 ktrans-gen-emb.py -i /path/to/pickles_gen_by_ida -o /path/to/saved_embeddings -m /path/to/kTrans_model -n num_workers_for_dataloader -bs inference_batch_size\n```\n",
                "type": "Text_excerpt",
                "original_header": "2. Generate embedding with kTrans",
                "parent_header": [
                    "kTrans: Knowledge-Aware Transformer for Binary Code Embedding",
                    "Usage to generate embedding from a given binary program"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "This step generates a pickle file containing a list of [instruction addresses,disassembly,instruction,operand type, operand r/w status, eflags]\n\ne.g. `/root/idapro-7.6/idat64 -L\"ida.log\" -A -S\"./insn_rw.py ./ida_outputs\" ./demo_bin/ls`\n\n```bash\n# Note: Remember to change IDA's python interpreter to the system's python interpreter (the one equipped with PyTorch, Capstone, etc.)\n/path/to/ida -L\"ida.log\" -A -S\"./insn_rw.py output_dir\" /path/to/target_binary\n```\n",
                "type": "Text_excerpt",
                "original_header": "1. Generate instructions along with metadata with IDA",
                "parent_header": [
                    "kTrans: Knowledge-Aware Transformer for Binary Code Embedding",
                    "Usage to generate embedding from a given binary program"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        },
        {
            "result": {
                "value": "This step generates embedding with kTrans and stores the output into a pickle file (numpy.ndarray in shape (num_functions, embedding_dim))\n\ne.g. `python3 ktrans-gen-emb.py -i ./ida_outputs -o ./saved_emb -m ./ktrans-110M-epoch-2.ckpt -n 32 -bs 128`\n\n```bash\npython3 ktrans-gen-emb.py -i /path/to/pickles_gen_by_ida -o /path/to/saved_embeddings -m /path/to/kTrans_model -n num_workers_for_dataloader -bs inference_batch_size\n```\n",
                "type": "Text_excerpt",
                "original_header": "2. Generate embedding with kTrans",
                "parent_header": [
                    "kTrans: Knowledge-Aware Transformer for Binary Code Embedding",
                    "Usage to generate embedding from a given binary program"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "acknowledgement": [
        {
            "result": {
                "value": "This project is not possible without multiple great open-sourced code bases. We list some notable examples below.\n\n* [transformers](https://github.com/huggingface/transformers)\n* [lightning](https://github.com/lightning-ai/lightning)\n",
                "type": "Text_excerpt",
                "original_header": "Acknowledgement",
                "parent_header": [
                    "kTrans: Knowledge-Aware Transformer for Binary Code Embedding"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "```\n.\n|-- AsmLM                                        # Source code of kTrans\n|   |-- dataloader                               # Dataset, Tokenizer, Vocab\n|   `-- model                                    # Model Arch, Pretrain Task\n|-- demo_bin                                     # Example binary for embedding generation\n|   `-- ls\n|-- README.md\n|-- config.py                                    # Configuration\n|-- ktrans-110M-epoch-2.ckpt                     # Pretrained model\n|-- asmlm.py                                     # Model Trainer\n|-- insn_rw.py                                   # IDAPython Script for knowledge generation\n`-- ktrans-gen-emb.py                            # Main script for embedding generation\n``` \n",
                "original_header": "Contents"
            },
            "confidence": 0.9004600208849094,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@article{zhu2023ktrans,\n    year = {2023},\n    journal = {arXiv preprint arXiv:2308.12659},\n    author = {Zhu, Wenyu and Wang, Hao and Zhou, Yuchen and Wang, Jiaming and Sha, Zihan and Gao, Zeyu and Zhang, Chao},\n    title = {kTrans: Knowledge-Aware Transformer for Binary Code Embedding},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "kTrans: Knowledge-Aware Transformer for Binary Code Embedding",
                "author": "Zhu, Wenyu and Wang, Hao and Zhou, Yuchen and Wang, Jiaming and Sha, Zihan and Gao, Zeyu and Zhang, Chao"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{10.1145/3533767.3534367,\n    series = {ISSTA 2022},\n    location = {Virtual, South Korea},\n    keywords = {Binary Analysis, Similarity Detection, Neural Networks, Datasets},\n    numpages = {13},\n    pages = {1\u201313},\n    booktitle = {Proceedings of the 31st ACM SIGSOFT International Symposium on Software Testing and Analysis},\n    abstract = {Binary code similarity detection (BCSD) has important applications in various fields such as vulnerabilities detection, software component analysis, and reverse engineering. Recent studies have shown that deep neural networks (DNNs) can comprehend instructions or control-flow graphs (CFG) of binary code and support BCSD. In this study, we propose a novel Transformer-based approach, namely jTrans, to learn representations of binary code. It is the first solution that embeds control flow information of binary code into Transformer-based language models, by using a novel jump-aware representation of the analyzed binaries and a newly-designed pre-training task. Additionally, we release to the community a newly-created large dataset of binaries, BinaryCorp, which is the most diverse to date. Evaluation results show that jTrans outperforms state-of-the-art (SOTA) approaches on this more challenging dataset by 30.5% (i.e., from 32.0% to 62.5%). In a real-world task of known vulnerability searching, jTrans achieves a recall that is 2X higher than existing SOTA baselines.},\n    doi = {10.1145/3533767.3534367},\n    url = {https://doi.org/10.1145/3533767.3534367},\n    address = {New York, NY, USA},\n    publisher = {Association for Computing Machinery},\n    isbn = {9781450393799},\n    year = {2022},\n    title = {JTrans: Jump-Aware Transformer for Binary Code Similarity Detection},\n    author = {Wang, Hao and Qu, Wenjie and Katz, Gilad and Zhu, Wenyu and Gao, Zeyu and Qiu, Han and Zhuge, Jianwei and Zhang, Chao},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1145/3533767.3534367",
                "title": "JTrans: Jump-Aware Transformer for Binary Code Similarity Detection",
                "author": "Wang, Hao and Qu, Wenjie and Katz, Gilad and Zhu, Wenyu and Gao, Zeyu and Qiu, Han and Zhuge, Jianwei and Zhang, Chao",
                "url": "https://doi.org/10.1145/3533767.3534367"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "kTrans: Knowledge-Aware Transformer for Binary Code Embedding"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main//figures/poolsizecompare.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2308.12659"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Learner0x5a/kTrans-release/main/README.md"
        }
    ]
}