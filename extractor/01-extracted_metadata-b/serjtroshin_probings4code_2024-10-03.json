{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 18:49:20"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/serjtroshin/probings4code",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "serjtroshin",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-01-03T13:55:25Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-03-27T16:15:53Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "probings4code",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This project contains source code to replicate the experiments from the [Probing Pretrained Models of Source Code](https://arxiv.org/abs/2202.08975) accepted to [EMNLP 2022 Black Box NLP Workshop](https://blackboxnlp.github.io).\n \n",
                "original_header": "Probing Pretrained Models of Source Code"
            },
            "confidence": 0.9389567279333068,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The code structure is as follows:\n- scripts for running experiments\n- `src`:\n  - `models`, pretrained models\n  - `struct_probing`:\n    - `code_augs` syntetic changes to code\n    - `probings` utils for probings\n- `CodeAnalysis`: directory with processed data and results\n \n",
                "original_header": "Overview"
            },
            "confidence": 0.9237532879648016,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "probings4code",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "serjtroshin/probings4code",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/serjtroshin/probings4code/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/serjtroshin/probings4code/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 3,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/serjtroshin/probings4code/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 365167
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 2019
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/save_embeddings_post_aug.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/prepare_ablation.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/download_models.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/generate_synt_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/save_embeddings.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/run_ablation.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/src/models/plbart/download_checkpoints.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "download": [
        {
            "result": {
                "value": "`src/models` directory contains a folder for each pretrained model. \n\nTo download BERT, CodeBERT, GraphCodeBERT, CodeT5, and GPT HugginFace checkpoints and tokenizers use:\n  - `bash download_models.sh`\n\nTo run the experiments with PLBART models, please download PLBART pretrained `plbart_base`, `plbart_large` checkpoints from the original [PLBART official repository](https://github.com/wasiahmad/PLBART) putting them in the `src/models/plbart` folder. Finetuned checkpoints are also avaliable in the official PLBART repo to reproduce the experiments comparing finetuned models (Figure 5). Use `src/models/available_models.py` to provide relevant paths for checkpoints.\n",
                "type": "Text_excerpt",
                "original_header": "Downloading models",
                "parent_header": [
                    "Probing Pretrained Models of Source Code"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "The run_parallel.py script runs the probing experiments for all models for all tasks saving the results in `csv` format for each model-probing pair at `CodeAnalysis` directory.\n\nTo replicate the experiments with linear probing model (Figure 3, 4) use:\n- `python3 run_parallel.py` to run experiments with the *linear model*\n\nTo run the probing experiments with a *3-layer MLP*:\n`python3 run_parallel.py --probing_model mlp`\n\nTo run the experiments for ablation study (Appendix) use:\n- `bash run_ablation.sh`\n\nNote you can pass `--model <model_name> --probing <probing_task_name>` flags to `run_parallel.py` to run the particular model on the particular task.\n",
                "type": "Text_excerpt",
                "original_header": "Running probing experiments",
                "parent_header": [
                    "Probing Pretrained Models of Source Code",
                    "Saving embedding to disk"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ],
    "acknowledgement": [
        {
            "result": {
                "value": "We use the following projects in our work:\n- [Fairseq](https://github.com/pytorch/fairseq)\n- [PLBART](https://github.com/wasiahmad/PLBART)\n- [tree-sitter](https://tree-sitter.github.io/tree-sitter/)\n- [Hugging Face](https://pypi.org/project/transformers/)\n",
                "type": "Text_excerpt",
                "original_header": "Acknowledgements"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you found this code useful, please cite our work:\n```\n@misc{https://doi.org/10.48550/arxiv.2202.08975,\n    doi = {10.48550/ARXIV.2202.08975},\n    url = {https://arxiv.org/abs/2202.08975},\n    author = {Troshin, Sergey and Chirkova, Nadezhda},\n    keywords = {Software Engineering (cs.SE), Computation and Language (cs.CL), Machine Learning (cs.LG), FOS: Computer and information sciences, FOS: Computer and information sciences},\n    title = {Probing Pretrained Models of Source Code},\n    publisher = {arXiv},\n    year = {2022},\n    copyright = {arXiv.org perpetual, non-exclusive license}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citation"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        },
        {
            "result": {
                "value": "@misc{https://doi.org/10.48550/arxiv.2202.08975,\n    copyright = {arXiv.org perpetual, non-exclusive license},\n    year = {2022},\n    publisher = {arXiv},\n    title = {Probing Pretrained Models of Source Code},\n    keywords = {Software Engineering (cs.SE), Computation and Language (cs.CL), Machine Learning (cs.LG), FOS: Computer and information sciences, FOS: Computer and information sciences},\n    author = {Troshin, Sergey and Chirkova, Nadezhda},\n    url = {https://arxiv.org/abs/2202.08975},\n    doi = {10.48550/ARXIV.2202.08975},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.48550/ARXIV.2202.08975",
                "title": "Probing Pretrained Models of Source Code",
                "author": "Troshin, Sergey and Chirkova, Nadezhda",
                "url": "https://arxiv.org/abs/2202.08975"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- `git clone https://github.com/serjtroshin/probings4code`\n- `cd probings4code`\n- go to [link](https://mega.nz/file/3FtkQa6C#y-TLNFNfkrLvC7sY9QeCqrnIZo7FugMEHqPrwtKCJRU) and download the data\n- `unzip -l CodeAnalysis.zip`\n  \nThe script was run on `CentOS Linux 7`, `Python 3.9.2`.\nCreate a conda environment for the project and install requirements:\n- `conda create -n probings4code python=3.9.12`\n- `conda activate probings4code`\n- `conda install pytorch==1.11.0 torchvision==0.12.0 cudatoolkit=11.6 numpy=1.22.3 -c pytorch -y`\n- `pip install -r requirements.txt` \nInstall tree-sitter parser for `python` and `java` by running \n-  `bash build.sh`\n \n",
                "original_header": "Repository Environment"
            },
            "confidence": 0.999996329510332,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To prepare data for the tasks run and create `train`, `test` splits: \n- `bash generate_synt_data.sh` \nThe script will output `all.json` file with train/test splits `train.json`, `test.json` in the following subfolders in CodeAnalysis directory: `identity`,`undeclared`, `dfg`, `identname`,  `varmisuse`, `readability`, `algo`. \nTo prepare data for ablation study (Appendix) run:\n- `bash prepare_ablation.sh`\n \n",
                "original_header": "Data preprocessing"
            },
            "confidence": 0.9754767332370665,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To save embeddings from all layers for all tasks use \n- `bash save_embeddings.sh`.  \nThe script will save embeddings to the `data_all.pkz` in the `CodeAnalysis` subfolders. \n",
                "original_header": "Saving embedding to disk"
            },
            "confidence": 0.945237940962891,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To prepare data for the tasks run and create `train`, `test` splits: \n- `bash generate_synt_data.sh` \nThe script will output `all.json` file with train/test splits `train.json`, `test.json` in the following subfolders in CodeAnalysis directory: `identity`,`undeclared`, `dfg`, `identname`,  `varmisuse`, `readability`, `algo`. \n",
                "original_header": "Data preprocessing"
            },
            "confidence": 0.9400865941681088,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Probing Pretrained Models of Source Code"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2202.08975"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2202.08975},\n    author = {Troshin, Sergey and Chirkova, Nadezhda},\n    keywords = {Software Engineering (cs.SE"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/serjtroshin/probings4code/master/README.md"
        }
    ]
}