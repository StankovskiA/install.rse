{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:02:23"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/haoxintu/LLM4CBI",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "haoxintu",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-06-29T07:13:34Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-08-06T08:05:17Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Isolating Compiler Bugs by Generating Effective Witness Programs with Large Language Models (Accepted by IEEE TSE)",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "LLM4CBI",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "haoxintu/LLM4CBI",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/haoxintu/LLM4CBI/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/haoxintu/LLM4CBI/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/haoxintu/LLM4CBI/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 232120
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 45002
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "R",
                "name": "R",
                "type": "Programming_language",
                "size": 10687
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 3472
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-llvm/run-gpt-4.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-llvm/ub_test.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-llvm/run-gpt-1.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-llvm/run-gpt-5.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-llvm/run-gpt-2.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-llvm/run-gpt-6.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-llvm/run-gpt-3.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-gcc/run-gpt-4.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-gcc/ub_test.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-gcc/run-gpt-1.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-gcc/run-gpt-5.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-gcc/run-gpt-2.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-gcc/run-gpt-6.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/llm4cbi-gcc/run-gpt-3.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "* Operating System: Ubuntu 18.04\n* Python version: 3.9.16\n* Torch version 1.4.0\n",
                "type": "Text_excerpt",
                "original_header": "Experimental environment",
                "parent_header": [
                    "LLM4CBI",
                    "Setup Instructions"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        },
        {
            "result": {
                "value": "```\n# To isolate GCC bugs for example\n$ cd llm4cbi-gcc\n$ python setup-gcc.py\n```\n\nWe provide the required compiler version in the file `llvmbug.txt` and `gccbugs.txt`. An example of this format shown in gccbugs.txt is as follows:\n\n ```\n57303,r198967,-O0,-O1,checkIsPass_wrongcodeOneline,install_no\n```\n\n* `57303` is the bug ID in the [GCC bug repository](https://gcc.gnu.org/bugzilla/).\n* `r198967` is the buggy version on SVN.\n* `-O0,-O1` are correct and wrong optimization options.\n* `checkIsPass_wrongcodeOneline` is the test oracle checking, please refer to the description [here]( https://github.com/haoyang9804/RecBi/tree/master?tab=readme-ov-file#deploying--1--preparing-for-installing-target-llvm-trunk).\n* `install_no` means this LLVM trunk has not been installed while `install_yes` means the opposite.\n",
                "type": "Text_excerpt",
                "original_header": "Step 1: Build compilers with coverage profilers (i.e.,`gcov`)",
                "parent_header": [
                    "LLM4CBI",
                    "Setup Instructions"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "```\n# To isolate GCC bugs for example\n$ cd llm4cbi-gcc\n$ python gcc-run.py gpt-1\n```\n",
                "type": "Text_excerpt",
                "original_header": "Step 2: Run `LLVM4CBI` and get the ranking results",
                "parent_header": [
                    "LLM4CBI",
                    "Setup Instructions"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        },
        {
            "result": {
                "value": "```\nBegin batchrun\nbugIds:  57303\nrevisions:  r198967\nrights:  -O0\nwrongs:  -O1\ncheckpasses:  checkIsPass_wrongcodeOneline\nconfigFile:  /home/haoxin/disk-dut/research/xxx/config-gpt-1/config.ini\nBegin delete\nBegin rank\nBegin analyze\nfinallist =  [[1]] \nresult =  {'Top-1': 1, 'Top-5': 1, 'Top-10': 1, 'Top-20': 1, 'MFR': 1.0, 'MAR': 1.0} \n```\n\nIn the above example, `LLM4CBI` ranks the suspicious file at Top-1. \n\n\n\n",
                "type": "Text_excerpt",
                "original_header": "The output of a running example (GCC bug 57303)",
                "parent_header": [
                    "LLM4CBI",
                    "Setup Instructions"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "```\n# To isolate GCC bugs for example\n$ cd llm4cbi-gcc\n$ python gcc-run.py gpt-1\n```\n",
                "type": "Text_excerpt",
                "original_header": "Step 2: Run `LLVM4CBI` and get the ranking results",
                "parent_header": [
                    "LLM4CBI",
                    "Setup Instructions"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        },
        {
            "result": {
                "value": "```\nBegin batchrun\nbugIds:  57303\nrevisions:  r198967\nrights:  -O0\nwrongs:  -O1\ncheckpasses:  checkIsPass_wrongcodeOneline\nconfigFile:  /home/haoxin/disk-dut/research/xxx/config-gpt-1/config.ini\nBegin delete\nBegin rank\nBegin analyze\nfinallist =  [[1]] \nresult =  {'Top-1': 1, 'Top-5': 1, 'Top-10': 1, 'Top-20': 1, 'MFR': 1.0, 'MAR': 1.0} \n```\n\nIn the above example, `LLM4CBI` ranks the suspicious file at Top-1. \n\n\n\n",
                "type": "Text_excerpt",
                "original_header": "The output of a running example (GCC bug 57303)",
                "parent_header": [
                    "LLM4CBI",
                    "Setup Instructions"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "```\n@article{tu2024isolating,\n  title={{Isolating Compiler Bugs by Generating Effective Witness Programs with Large Language Models}},\n  author={Tu, Haoxin and Zhou, Zhide and Jiang, He and Yusuf, Imam Nur Bani and Li, Yuxian and Jiang, Lingxiao},\n  journal={IEEE Transactions on Software Engineering},\n  year={2024},\n  pages = {1--20},\n  publisher={IEEE}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Reference",
                "parent_header": [
                    "LLM4CBI"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        },
        {
            "result": {
                "value": "@article{tu2024isolating,\n    publisher = {IEEE},\n    pages = {1--20},\n    year = {2024},\n    journal = {IEEE Transactions on Software Engineering},\n    author = {Tu, Haoxin and Zhou, Zhide and Jiang, He and Yusuf, Imam Nur Bani and Li, Yuxian and Jiang, Lingxiao},\n    title = {{Isolating Compiler Bugs by Generating Effective Witness Programs with Large Language Models}},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "{Isolating Compiler Bugs by Generating Effective Witness Programs with Large Language Models}",
                "author": "Tu, Haoxin and Zhou, Zhide and Jiang, He and Yusuf, Imam Nur Bani and Li, Yuxian and Jiang, Lingxiao"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "LLM4CBI"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/./LLM4CBI-framework.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2307.00593.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/haoxintu/LLM4CBI/main/README.md"
        }
    ]
}