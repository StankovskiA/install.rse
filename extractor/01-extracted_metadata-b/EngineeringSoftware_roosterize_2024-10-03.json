{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:18:33"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/EngineeringSoftware/roosterize",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "EngineeringSoftware",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2020-04-19T01:04:11Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-01-26T20:13:21Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2020-Present Roosterize\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice (including the next paragraph) shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Tool for suggesting lemma names in Coq verification projects",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Our [research paper][arxiv-paper] outlines the design of Roosterize,\nand describes an evaluation on a [corpus][math-comp-corpus]\nof serialized Coq code derived from the [Mathematical Components][math-comp-website]\nfamily of projects. The training, validation, and testing sets of Coq files from the corpus\nused in the evaluation are defined in the `training` directory. \n",
                "original_header": "Technique"
            },
            "confidence": 0.9480924585022096,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "roosterize",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "EngineeringSoftware/roosterize",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/EngineeringSoftware/roosterize/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/EngineeringSoftware/roosterize/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 18,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "coq, deep-learning, machine-learning, mathcomp, name-generation, neural-networks, pytorch, serapi",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 5,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/EngineeringSoftware/roosterize/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 896085
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 5022
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 613
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/EngineeringSoftware/roosterize/releases/34320386",
                "tag": "v1.1.0+8.10.2",
                "name": "Roosterize v1.1.0 for Coq 8.10.2",
                "author": {
                    "name": "pengyunie",
                    "type": "User"
                },
                "description": "Major changes since the initial release: improved command-line interface; added VSCode interface (using LSP); added functionality of utilizing .roosterizerc.\r\n\r\nSupporting Coq version 8.10.2. The tool requires OCaml 4.07.1, SerAPI 0.7.1, Python 3.7 or later, PyTorch 1.1.0.\r\n\r\nAttached to this release:\r\nroosterize-dist-debian-cpu.tgz: binary distribution built under Debian system, using CPU only.\r\nroosterize-model-t1.tgz: pre-trained model, trained on the tier-1 part of our MathComp corpus.\r\nroosterize-model-ta.tgz: pre-trained model, trained on all tiers of our MathComp corpus.",
                "tarball_url": "https://api.github.com/repos/EngineeringSoftware/roosterize/tarball/v1.1.0+8.10.2",
                "zipball_url": "https://api.github.com/repos/EngineeringSoftware/roosterize/zipball/v1.1.0+8.10.2",
                "html_url": "https://github.com/EngineeringSoftware/roosterize/releases/tag/v1.1.0%2B8.10.2",
                "url": "https://api.github.com/repos/EngineeringSoftware/roosterize/releases/34320386",
                "release_id": 34320386,
                "date_created": "2020-11-23T16:18:33Z",
                "date_published": "2020-11-23T17:01:28Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/EngineeringSoftware/roosterize/releases/34209587",
                "tag": "v1.1.0+8.10.2-beta",
                "name": "Roosterize v1.1.0 for Coq 8.10.2 (beta)",
                "author": {
                    "name": "pengyunie",
                    "type": "User"
                },
                "description": "Major changes since the last release: improved command-line interface, added VSCode interface (using LSP), added functionality of utilizing `.roosterizerc`.\r\n\r\nSupporting Coq version 8.10.2. The tool requires OCaml 4.07.1, SerAPI 0.7.1, Python 3.7 or later, PyTorch 1.1.0.\r\n\r\nAttached to this release:\r\nroosterize-dist-debian-cpu.tgz: binary distribution built under Debian system, using CPU only.\r\nroosterize-model-t1.tgz: pre-trained model, trained on the tier-1 part of our [MathComp corpus][math-comp-corpus].\r\nroosterize-model-ta.tgz: pre-trained model, trained on all tiers of our [MathComp corpus][math-comp-corpus].\r\n\r\n[math-comp-corpus]: https://github.com/EngineeringSoftware/math-comp-corpus",
                "tarball_url": "https://api.github.com/repos/EngineeringSoftware/roosterize/tarball/v1.1.0+8.10.2-beta",
                "zipball_url": "https://api.github.com/repos/EngineeringSoftware/roosterize/zipball/v1.1.0+8.10.2-beta",
                "html_url": "https://github.com/EngineeringSoftware/roosterize/releases/tag/v1.1.0%2B8.10.2-beta",
                "url": "https://api.github.com/repos/EngineeringSoftware/roosterize/releases/34209587",
                "release_id": 34209587,
                "date_created": "2020-11-21T09:42:40Z",
                "date_published": "2020-11-21T09:43:53Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/EngineeringSoftware/roosterize/releases/28182375",
                "tag": "v8.10.0",
                "name": "Roosterize for Coq 8.10",
                "author": {
                    "name": "palmskog",
                    "type": "User"
                },
                "description": "Initial release of the Roosterize tool for suggesting lemma names in Coq verification projects using neural networks, supporting Coq version 8.10.2. The tool requires OCaml 4.07.1, SerAPI 0.7.1, Python 3.7.7 or later, PyTorch 1.1.0, and pre-trained models (attached to this release). The tool release accompanies the research paper [Deep Generation of Coq Lemma Names Using Elaborated Terms](https://doi.org/10.1007/978-3-030-51054-1_6), published in the proceedings of IJCAR 2020.",
                "tarball_url": "https://api.github.com/repos/EngineeringSoftware/roosterize/tarball/v8.10.0",
                "zipball_url": "https://api.github.com/repos/EngineeringSoftware/roosterize/zipball/v8.10.0",
                "html_url": "https://github.com/EngineeringSoftware/roosterize/releases/tag/v8.10.0",
                "url": "https://api.github.com/repos/EngineeringSoftware/roosterize/releases/28182375",
                "release_id": 28182375,
                "date_created": "2020-07-03T02:29:18Z",
                "date_published": "2020-07-03T02:30:32Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/package.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/pretrain.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "- Linux or macOS\n- [OCaml 4.07.1](https://ocaml.org)\n- [SerAPI 0.7.1](https://github.com/ejgallego/coq-serapi)\n- [Coq 8.10.2](https://coq.inria.fr/download)\n- [Python 3.7](https://www.python.org)\n- [PyTorch 1.1.0](https://pytorch.org/get-started/previous-versions/#v110)\n",
                "type": "Text_excerpt",
                "original_header": "Requirements",
                "parent_header": [
                    "Roosterize"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "You can install Roosterize from source code by cloning this GitHub\nrepository and setting up the dependencies following steps 1 & 2.\n(Alternatively, you can download the a [binary\ndistribution](https://github.com/EngineeringSoftware/roosterize/releases)\nwhich already contains the Python dependencies, and then you only need\nstep 1.)\n\n```\ngit clone https://github.com/EngineeringSoftware/roosterize.git\ncd roosterize\n```\n",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "Roosterize"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        },
        {
            "result": {
                "value": "We strongly recommend installing the required versions of OCaml, Coq,\nand SerAPI via the [OPAM package manager](https://opam.ocaml.org),\nversion 2.0.7 or later.\n\nTo set up the OPAM-based OCaml environment, use:\n```\nopam switch create roosterize 4.07.1\nopam switch roosterize\neval $(opam env)\n```\nThen, install Coq and SerAPI, pinning them to avoid unintended upgrades:\n```\nopam update\nopam pin add coq 8.10.2\nopam pin add coq-serapi 8.10.0+0.7.1\n```\n",
                "type": "Text_excerpt",
                "original_header": "1. Installation of OCaml, Coq, and SerAPI",
                "parent_header": [
                    "Roosterize",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        },
        {
            "result": {
                "value": "We strongly recommend installing the required versions of Python and\nPyTorch using [Conda](https://docs.conda.io/en/latest/miniconda.html).\n\nTo set up the Conda environment, use one of the following command\nsuitable for your operating system and whether you want to use it on a\nCPU or GPU.\n\n- Linux, CPU:\n```\nconda env create --name roosterize --file conda-envs/cpu.yml\n```\n\n- Linux, GPU w/ CUDA 10.0:\n```\nconda env create --name roosterize --file conda-envs/gpu-cuda10.yml\n```\n\n- Linux, GPU w/ CUDA 9.0:\n```\nconda env create --name roosterize --file conda-envs/gpu-cuda9.yml\n```\n\n- Mac, CPU:\n```\nconda env create --name roosterize --file conda-envs/mac-cpu.yml\n```\n\nFinally, activate the Conda environment before using Roosterize:\n```\nconda activate roosterize\n```\n",
                "type": "Text_excerpt",
                "original_header": "2. Installation of PyTorch and Python libraries",
                "parent_header": [
                    "Roosterize",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        },
        {
            "result": {
                "value": "Next, you need to obtain a pre-trained model that capture naming\nconventions.  The default pre-trained model, which was trained using\nour [corpus][math-comp-corpus] and follows the conventions used in the\n[Mathematical Components][math-comp-website] family of projects, can\nbe obtained by running the command:\n\n```\n./bin/roosterize download_global_model\n```\n\nThe model will be downloaded to `$HOME/.roosterize/`. To use a\ndifferent model (that we [released][latest-release] or you trained),\nsimply put it in `$HOME/.roosterize/`.\n",
                "type": "Text_excerpt",
                "original_header": "Installation of trained models",
                "parent_header": [
                    "Roosterize",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "\n[arxiv-paper]: https://arxiv.org/abs/2004.07761\n[math-comp-corpus]: https://github.com/EngineeringSoftware/math-comp-corpus\n[math-comp-website]: https://math-comp.github.io\n \n"
            },
            "confidence": 0.999999744968609,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "To use Roosterize on a Coq verification project, you first need to\nbuild the Coq project using a command provided by the project (usually\n`make`).  Then, run this command to get the lemma name suggestions for\nthe lemmas in a Coq document (.v file):\n\n```\npython -m roosterize.main suggest_naming --file=PATH_TO_FILE\n```\n\nRoosterize automatically infers the root directory of the project by\nfinding `_CoqProject`, and reads `_CoqProject` to infer the SerAPI\ncommand line options (for mapping logical paths to directories, see\n[SerAPI's documentation][serapi-faq-link]).  If you don't have a\n`_CoqProject` file, you need to provide an additional argument\n`--project_root=PATH_TO_PROJECT_ROOT`.\n\n\n\n\n\n\n\n\nThe above command extracts all lemmas from the file, uses the\npre-trained model to generate likely lemma names for each lemma, and\nfinally prints the lemma name update suggestions, i.e., the generated\nlemma names that are different from to the existing ones.  See an\n[example suggestion report](./docs/example-suggestion.txt).\n\nFor other usages and command line interfaces of Roosterize, please\ncheck the help:\n```\npython -m roosterize.main help\n```\n\n[latest-release]: https://github.com/EngineeringSoftware/roosterize/releases/latest\n[serapi-faq-link]: https://github.com/ejgallego/coq-serapi/blob/v8.10/FAQ.md#does-serapi-support-coqs-command-line-flags\n",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "Roosterize"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@inproceedings{NieETAL20Roosterize,\n    year = {2020},\n    doi = {10.1007/978-3-030-51054-1_6},\n    pages = {97--118},\n    booktitle = {International Joint Conference on Automated Reasoning},\n    title = {Deep Generation of {Coq} Lemma Names Using Elaborated Terms},\n    author = {Nie, Pengyu and Palmskog, Karl and Li, Junyi Jessy and Gligoric, Milos},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1007/978-3-030-51054-1_6",
                "title": "Deep Generation of {Coq} Lemma Names Using Elaborated Terms",
                "author": "Nie, Pengyu and Palmskog, Karl and Li, Junyi Jessy and Gligoric, Milos"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Roosterize"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/seqtoseq-arch.svg"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2004.07761\n[math-comp-corpus]: https://github.com/EngineeringSoftware/math-comp-corpus\n[math-comp-website]: https://math-comp.github.io\n\n## Authors\n\n- [Pengyu Nie](https://pengyunie.github.io"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/EngineeringSoftware/roosterize/master/README.md"
        }
    ]
}