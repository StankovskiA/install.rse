{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:18:25"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/evalplus/evalplus",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "evalplus",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-04-15T04:20:10Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-03T14:23:22Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n-------------------------------------------------------------------------------\nThe files under \"evalplus/eval/\" additionally complies with the MIT License for\nbeing built on OpenAI's HumanEval work.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Rigourous evaluation of LLM-synthesized code - NeurIPS 2023",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "EvalPlus is a rigorous evaluation framework for LLM4Code, with: \n",
                "original_header": "About"
            },
            "confidence": 0.9446773075060868,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "evalplus",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "evalplus/evalplus",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/evalplus/evalplus/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/evalplus/evalplus/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 1170,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "benchmark, chatgpt, gpt-4, large-language-models, program-synthesis, testing",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 102,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/evalplus/evalplus/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 319882
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 593
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 465
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/149486517",
                "tag": "v0.2.1",
                "name": "EvalPlus v0.2.1",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "## Main updates\r\n\r\n* HumanEval+ and MBPP+ datasets are on the hub now: \r\n   * HumanEval+: https://huggingface.co/datasets/evalplus/humanevalplus\r\n   * MBPP+: https://huggingface.co/datasets/evalplus/mbppplus\r\n* HumanEval+ is ported to original HumanEval format. Release files have a new home now:\r\n   * HumanEval+: https://github.com/evalplus/humanevalplus_release\r\n   * MBPP+: https://github.com/evalplus/mbppplus_release\r\n* You can use EvalPlus through [bigcode-evaluation-harness](https://github.com/bigcode-project/bigcode-evaluation-harness) now\r\n* Docker image now uses Python 3.10 since some model might generate Python code using latest syntax, leading to false positive using older Python\r\n* Sanitizer is now merged into the pacakge\r\n* Several improvements and bug fixes to the sanitizer\r\n* Test suite reduction now moved to `tools`\r\n* Fixes the `CACHE_DIR` nonexistance issue\r\n* Simplified the format of `eval_results.json` for readability\r\n* Use `EVALPLUS_TIMEOUT_PER_TASK` env var to set the maximum testing time for each task\r\n* Timeout per test is set to 0.5s by default\r\n* Fixes argument validity for `inputgen.py`\r\n\r\n## Dataset maintainence\r\n\r\n* `HumanEval/32`: fixes the oracle\r\n\r\n## Supported codegen models\r\n\r\n* Now EvalPlus leaderboard lists 82 models\r\n* WizardCoders\r\n* Stable Code\r\n* OpenCodeInterpreter\r\n* antropic API\r\n* mistral API\r\n* CodeLlama instruct\r\n* Phi-2\r\n* Solar\r\n* Dophin\r\n* OpenChat\r\n* CodeMillenials\r\n* Speechless\r\n* xdan-l1-chat\r\n* etc.\r\n\r\n\r\n\r\nPyPI: https://pypi.org/project/evalplus/0.2.1/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.2.1/images/sha256-2bb315e40ea502b4f47ebf1f93561ef88280d251bdc6f394578c63d90e1825d7",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.2.1",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.2.1",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.2.1",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/149486517",
                "release_id": 149486517,
                "date_created": "2024-04-01T06:34:11Z",
                "date_published": "2024-04-02T22:40:44Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/131410075",
                "tag": "v0.2.0",
                "name": "EvalPlus v0.2.0",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "## \ud83d\udd25 Announcing MBPP+\r\n\r\n**[MBPP](https://github.com/google-research/google-research/tree/master/mbpp)** is a dataset curated by Google. Its full set includes around 1000 crowd-sourced Python programming problems. However, certain amount of problems can be noisy (e.g., prompts make no sense or tests are broken). Consequently, a subset (~427 problems) of the data has been hand-verified by original author -- `MBPP-sanitized`.\r\n\r\n**MBPP+** improves MBPP based on its sanitized version (`MBPP-sanitized`):\r\n- We further hand-verify the problems to trim ill-formed problems to keep 399 problems\r\n- We also fix the problems whose implementation is wrong (more details can be found [here](https://github.com/evalplus/evalplus/tree/mbpp/groundtruth/mbpp#check-implementation))\r\n- We perform test augmentation to improve the number of tests by 35x (on avg from 3.1 to 108.5)\r\n- We mantain the scripting compatibility against HumanEval+ where one simply needs to toggle the switch by `--dataset mbpp` for `evalplus.evaluate`, `codegen/generate.py`, `tools/checker.py` as well as `tools/sanitize.py`\r\n- Initial leaderboard is made available on https://evalplus.github.io/leaderboard.html and we will keep updating\r\n\r\nA typical workflow to use MBPP+:\r\n\r\n```python\r\n# Step 1: Generate MBPP solutions\r\nfrom evalplus.data import get_mbpp_plus, write_jsonl\r\n\r\ndef GEN_SOLUTION(prompt: str) -> str:\r\n    # LLM produce the whole solution based on prompt\r\n\r\nsamples = [\r\n    dict(task_id=task_id, solution=GEN_SOLUTION(problem[\"prompt\"]))\r\n    for task_id, problem in get_mbpp_plus().items()\r\n]\r\nwrite_jsonl(\"samples.jsonl\", samples)\r\n# May perform some post-processing to sanitize LLM produced code\r\n# e.g., https://github.com/evalplus/evalplus/blob/master/tools/sanitize.py\r\n```\r\n\r\n```bash\r\n# Step 2: Evaluation on MBPP+\r\ndocker run -v $(pwd):/app ganler/evalplus:latest --dataset mbpp --samples samples.jsonl\r\n# STDOUT will display the scores for \"base\" (with MBPP tests) and \"base + plus\" (with additional MBPP+ tests)\r\n```\r\n\r\n## \ud83d\udd25 HumanEval+ Maintainance\r\n\r\n- Leaderboard updates (now **41** models!): https://evalplus.github.io/leaderboard.html\r\n    - DeepSeek Coder series\r\n    - Phind-CodeLlama\r\n    - Mistral and Zephyr series\r\n    - Smaller StarCoders\r\n- HumanEval+ now upgrades to `v0.1.9` from `v0.1.6`\r\n    - Test-case fixes: 0, 3, 9, 148\r\n    - Prompt fixes: 114\r\n    - Contract fixes: 1, 2, 99, 35, 28, 32, 160\r\n\r\nPyPI: https://pypi.org/project/evalplus/0.2.0/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.2.0/images/sha256-6f1b9bd13930abfb651a99d4c6a55273271f73e5b44c12dcd959a00828782dd6",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.2.0",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.2.0",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.2.0",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/131410075",
                "release_id": 131410075,
                "date_created": "2023-11-24T21:44:05Z",
                "date_published": "2023-11-24T22:12:33Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/120170565",
                "tag": "v0.1.7",
                "name": "EvalPlus v0.1.7",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "- EvalPlus leader board: https://evalplus.github.io/leaderboard.html\r\n- Evaluated CodeLlama, CodeT5+ and WizardCoder\r\n- Fixed contract (HumanEval+): 116, 126, 006\r\n- Removed extreme inputs (HumanEval+): 32\r\n- Established `HUMANEVAL_OVERRIDE_PATH` which allows to override the original dataset with customized dataset\r\n\r\nPyPI: https://pypi.org/project/evalplus/0.1.7/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.1.7/images/sha256-69fe87df89b8c1545ff7e3b20232ac6c4841b43c20f22f4a276ba03f1b0d79ae",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.1.7",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.1.7",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.1.7",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/120170565",
                "release_id": 120170565,
                "date_created": "2023-09-06T18:10:53Z",
                "date_published": "2023-09-06T18:35:48Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/109860650",
                "tag": "v0.1.6",
                "name": "EvalPlus v0.1.6",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "- Supporting configurable timeouts $T=\\max(T_{base}, T_{gt}\\times k)$, where:\r\n    - $T_{base}$ is the minimal timeout (configurable by `--min-time-limit`; default to 0.2s);\r\n    - $T_{gt}$ is the runtime of the ground-truth solutions (achieved via profiling);\r\n    - $k$ is a configurable factor `--gt-time-limit-factor` (default to 4);\r\n- Using a more conservative timeout setting to mitigate test-beds with weak performance ($T_{base}: 0.05s \\to 0.2s$ and $k: 2\\to 4$).\r\n- `HumanEval+` dataset bug fixes:\r\n    - Medium contract fixesL P129 (#4), P148 (self-identified)\r\n    - Minor contract fixes: P75 (#4), P53 (#8), P0 (self-identified), P3 (self-identified), P9 (self-identified)\r\n    - Minor GT fixes: P140 (#3)\r\n\r\nPyPI: https://pypi.org/project/evalplus/0.1.6/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.1.6/images/sha256-5913b95172962ad61e01a5d5cf63b60e1140dd547f5acc40370af892275e777c",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.1.6",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.1.6",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.1.6",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/109860650",
                "release_id": 109860650,
                "date_created": "2023-06-26T05:48:52Z",
                "date_published": "2023-06-26T06:57:42Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/105802347",
                "tag": "v0.1.5",
                "name": "EvalPlus v0.1.5",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "## \ud83d\ude80 `HumanEval+[mini]` -- 47x smaller while equivalently effective as HumanEval+\r\n\r\n- Add **`--mini`** to `evalplus.evaluate ...` you can use a minimal and best-quality set of extra tests to accelerate evaluation!\r\n- `HumanEval+[mini]` (avg 16.5 tests) is smaller than `HumanEval+` (avg 774.8 tests) by **47x**. \r\n- This is achieved via **test-suite reduction** -- we run a set covering algorithm to preserve the same coverage (coverage analysis), mutant-killings (mutation analysis) and sample-killings (pass-fail status of each sample-test pair).\r\n\r\n![image](https://github.com/evalplus/evalplus/assets/38074777/a09258c7-a227-4c1d-9f28-c96c93dc805d)\r\n\r\nPyPI: https://pypi.org/project/evalplus/0.1.5/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.1.5/images/sha256-01ef3275ab02776e94edd4a436a3cd33babfaaf7a81e7ae44f895c2794f4c104\r\n",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.1.5",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.1.5",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.1.5",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/105802347",
                "release_id": 105802347,
                "date_created": "2023-06-02T08:00:36Z",
                "date_published": "2023-06-02T08:19:18Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/102732681",
                "tag": "v0.1.4",
                "name": "EvalPlus v0.1.4",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "- **Performance**:\r\n    - Lazy loading of the cache of evaluation results\r\n    - Use `ProcessPoolExecutor` over `ThreadPoolExecutor`\r\n    - Caching groudtruth outputs\r\n- **Observability**:\r\n    - Concurrent logger when a task gets stuck for 10s\r\n- **New models**:\r\n    - CodeGen2 (infill)\r\n    - StarCoder (infill)\r\n- **Fixes**:\r\n    - Deterministic hashing of input problem \r\n\r\nPyPI: https://pypi.org/project/evalplus/0.1.4/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.1.4/images/sha256-a0ea8279c71afa9418808326412b1e5cd11f44b3b59470477ecf4ba999d4b73a",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.1.4",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.1.4",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.1.4",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/102732681",
                "release_id": 102732681,
                "date_created": "2023-05-12T01:43:04Z",
                "date_published": "2023-05-12T05:02:20Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/102388697",
                "tag": "v0.1.3",
                "name": "EvalPlus v0.1.3",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "- Fixes evaluation when input sample format is `.jsonl`\r\n\r\nPyPI: https://pypi.org/project/evalplus/0.1.3/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.1.3/images/sha256-fd13ab6ee2aa313eb160fc29debe8c761804cb6af7309280b4e200b6549bd75a",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.1.3",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.1.3",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.1.3",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/102388697",
                "release_id": 102388697,
                "date_created": "2023-05-09T17:17:25Z",
                "date_published": "2023-05-09T18:33:51Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/102115671",
                "tag": "v0.1.2",
                "name": "EvalPlus v0.1.2",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "- Fix the bug induced by using `--base-only`\r\n- Build docker image locally instead of simply doing a `pip install`\r\n\r\nPyPI: https://pypi.org/project/evalplus/0.1.2/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.1.2/images/sha256-747ae02f0bfbd300c0205298113006203d984373e6ab6b8fb3048626f41dbe08",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.1.2",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.1.2",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.1.2",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/102115671",
                "release_id": 102115671,
                "date_created": "2023-05-07T04:49:22Z",
                "date_published": "2023-05-07T05:24:34Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/102115607",
                "tag": "v0.1.1",
                "name": "EvalPlus v0.1.1",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "In this version, efforts are mainly made to sanitize and standardize code in `evalplus`. Most importantly, `evalplus` strictly follows the dataset usage style of [HumanEval](https://github.com/openai/human-eval). As a result, users can use `evalplus` in this way:\r\n\r\n![carbon (1)](https://user-images.githubusercontent.com/38074777/236659016-a2475e1a-c3bd-4d42-a1fe-75661bf28155.png)\r\n\r\nFor more details, the main changes are (tracked in #1):\r\n- Package build and pypi setup\r\n- (HumanEval Compatibility) Support sample files as `.jsonl`\r\n- (HumanEval Compatibility) `get_human_eval_plus()` returns a `dict` instead of `list`\r\n- (HumanEval Compatibility) Use HumanEval task ID splitter `\"/\"` over `\"_\"`\r\n- Optimize the evaluation parallelism scheme to the sample-level granularity (original: task level)\r\n- Optimize IPC via shared memory\r\n- Remove groundtruth solutions to avoid data leakage\r\n- Use docker the sandboxing mechanism\r\n- Support Codegen2 in generation\r\n- Split dependency into multiple categories\r\n\r\nPyPI: https://pypi.org/project/evalplus/0.1.1/\r\nDocker Hub: https://hub.docker.com/layers/ganler/evalplus/v0.1.1/images/sha256-4993a0dc0ec13d6fe88eb39f94dd0a927e1f26864543c8c13e2e8c5d5c347af0",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.1.1",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.1.1",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.1.1",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/102115607",
                "release_id": 102115607,
                "date_created": "2023-05-05T23:53:40Z",
                "date_published": "2023-05-07T05:21:41Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/evalplus/evalplus/releases/101657743",
                "tag": "v0.1.0",
                "name": "EvalPlus v0.1.0 and Pre-Generated LLM Code Samples for HumanEval+",
                "author": {
                    "name": "ganler",
                    "type": "User"
                },
                "description": "## What is this?\r\n\r\nIn addition to the initial version of EvalPlus source-code, we release the pre-generated code of LLMs on HumanEval+ (also applicable for base HumanEval) and regularized ground-truth solutions. With these we hope to accelerate future research where research may try to reuse our pre-generated code instead of generating them from scratch. \r\n\r\n- `${MODEL_NAME}_temp_${TEMPERATURE}.zip`: LLM-produced program samples\r\n- `HumanEvalPlusGT.zip`: The re-implemented ground-truth solutions\r\n\r\n## Data sources\r\n\r\nThe configuration of the pre-generated code follows our pre-print paper: https://arxiv.org/abs/2305.01210\r\n\r\n- We evaluated it over:\r\n    - **x 14 models** (10 model types)\r\n    - **x 5 temperature** settings including zero temperature (for greedy decoding) as well as `{0.2, 0.4, 0.6, 0.8}`\r\n    - **x 200 code samples** used random sampling (i.e., non-greedy decoding settings)\r\n- We use nucleus sampling with top p = 0.95 for all hugging-face based model\r\n- Codegen6B and Codegen16B is accelerated by [FauxPilot](https://github.com/fauxpilot/fauxpilot) (thanks!)\r\n\r\n![image](https://user-images.githubusercontent.com/38074777/235818976-b58220ae-3038-4a09-991e-ebdc885c53d8.png)\r\n\r\n## Evaluated results\r\n\r\nWe draw the results from the samples and test-cases from the base HumanEval and our enhanced HumanEval+:\r\n\r\n![image](https://user-images.githubusercontent.com/38074777/235819326-77192614-64ac-40c3-a2c6-5ca325296a77.png)\r\n\r\n## Call for contribution\r\n\r\nWe also encourage open-source developers to contributing to LLM4Code research by: (i) reproducing and validating our results; (ii) uploading LLM-generated samples and reproducing the results of new models; and of course (iii) trying out our enhanced dataset to get more accurate and trustworthy results!",
                "tarball_url": "https://api.github.com/repos/evalplus/evalplus/tarball/v0.1.0",
                "zipball_url": "https://api.github.com/repos/evalplus/evalplus/zipball/v0.1.0",
                "html_url": "https://github.com/evalplus/evalplus/releases/tag/v0.1.0",
                "url": "https://api.github.com/repos/evalplus/evalplus/releases/101657743",
                "release_id": 101657743,
                "date_created": "2023-05-02T00:11:13Z",
                "date_published": "2023-05-03T01:56:35Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/evalplus/evalplus/master/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/Dockerfile"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "cff-version: 1.2.0\nmessage: \"If you use this work and love it, consider citing it as below \\U0001F917\"\ntitle: EvalPlus\nauthors:\n  - family-names: EvalPlus Team\nurl: https://github.com/evalplus/evalplus\ndoi: https://doi.org/10.48550/arXiv.2305.01210\ndate-released: 2023-05-01\nlicense: Apache-2.0\npreferred-citation:\n  type: article\n  title: \"Is Your Code Generated by ChatGPT Really Correct? Rigorous Evaluation of Large Language Models for Code Generation\"\n  authors:\n    - family-names: Liu\n      given-names: Jiawei\n    - family-names: Xia\n      given-names: Chunqiu Steven\n    - family-names: Wang\n      given-names: Yuyao\n    - family-names: Zhang\n      given-names: Lingming\n  year: 2023\n  journal: \"arXiv preprint arXiv:2305.01210\"\n  doi: https://doi.org/10.48550/arXiv.2305.01210\n  url: https://arxiv.org/abs/2305.01210\n",
                "type": "File_dump",
                "format": "cff"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/CITATION.cff"
        },
        {
            "result": {
                "value": "```bibtex\n@inproceedings{evalplus,\n  title = {Is Your Code Generated by Chat{GPT} Really Correct? Rigorous Evaluation of Large Language Models for Code Generation},\n  author = {Liu, Jiawei and Xia, Chunqiu Steven and Wang, Yuyao and Zhang, Lingming},\n  booktitle = {Thirty-seventh Conference on Neural Information Processing Systems},\n  year = {2023},\n  url = {https://openreview.net/forum?id=1qvx610Cu7},\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "\ud83d\udcdc Citation",
                "parent_header": [
                    "`EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda`"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{evalplus,\n    url = {https://openreview.net/forum?id=1qvx610Cu7},\n    year = {2023},\n    booktitle = {Thirty-seventh Conference on Neural Information Processing Systems},\n    author = {Liu, Jiawei and Xia, Chunqiu Steven and Wang, Yuyao and Zhang, Lingming},\n    title = {Is Your Code Generated by Chat{GPT} Really Correct? Rigorous Evaluation of Large Language Models for Code Generation},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Is Your Code Generated by Chat{GPT} Really Correct? Rigorous Evaluation of Large Language Models for Code Generation",
                "author": "Liu, Jiawei and Xia, Chunqiu Steven and Wang, Yuyao and Zhang, Lingming",
                "url": "https://openreview.net/forum?id=1qvx610Cu7"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/evalplus/evalplus/master/release.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "https://github.com/evalplus/evalplus/tree/master/docs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "> [!Tip]\n>\n> EvalPlus \u2764\ufe0f [bigcode-evaluation-harness](https://github.com/bigcode-project/bigcode-evaluation-harness)!\n> HumanEval+ and MBPP+ have been integrated to bigcode-evaluation-harness that you can also run EvalPlus datasets there!\n\nTo quickly perform code generation and evaluation on HumanEval+:\n\n```bash\npip install evalplus --upgrade\n```\n",
                "type": "Text_excerpt",
                "original_header": "\ud83d\udd25 Quick Start",
                "parent_header": [
                    "`EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda`"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        },
        {
            "result": {
                "value": "- `transformers` backend:\n\n```bash\nevalplus.evaluate --model \"mistralai/Mistral-7B-Instruct-v0.3\" \\\n                  --dataset [humaneval|mbpp]                   \\\n                  --backend hf                                 \\\n                  --greedy\n```\n\n> [!Note]\n>\n> EvalPlus uses different prompts for base and chat models.\n> By default it is detected by `tokenizer.chat_template` when using `hf`/`vllm` as backend.\n> For other backends, only chat mode is allowed.\n>\n> Therefore, if your base models come with a `tokenizer.chat_template`,\n> please add `--force-base-prompt` to avoid being evaluated\n> in a chat mode.\n\n<details><summary>Enable Flash Attention 2<i>:: click to expand ::</i></summary>\n<div>\n\n```bash\n# Install Flash Attention 2\npip install packaging ninja\npip install flash-attn --no-build-isolation\n# Note: if you have installation problem, consider using pre-built\n# wheels from https://github.com/Dao-AILab/flash-attention/releases\n\n# Run evaluation with FA2\nevalplus.evaluate --model \"mistralai/Mistral-7B-Instruct-v0.3\"    \\\n                  --dataset [humaneval|mbpp]                      \\\n                  --backend hf                                    \\\n                  --attn-implementation [flash_attention_2|sdpa]  \\\n                  --greedy\n```\n\n</div>\n</details>\n\n- `vllm` backend:\n\n```bash\npip install \"evalplus[vllm]\" --upgrade    # Install vLLM backend\nevalplus.evaluate --model \"mistralai/Mistral-7B-Instruct-v0.3\" \\\n                  --dataset [humaneval|mbpp]                   \\\n                  --backend vllm                               \\\n                  --tp [TENSOR_PARALLEL_SIZE]                  \\\n                  --greedy\n```\n\n- `openai` compatible servers (e.g., [vLLM](https://docs.vllm.ai/en/latest/serving/openai_compatible_server.html)):\n\n```bash\n# Launch a model server first: e.g., https://docs.vllm.ai/en/latest/serving/deploying_with_docker.html\nevalplus.evaluate --model \"mistralai/Mistral-7B-Instruct-v0.3\" \\\n                  --dataset [humaneval|mbpp]                   \\\n                  --backend openai                             \\\n                  --base-url http://localhost:8000/v1          \\\n                  --greedy\n```\n",
                "type": "Text_excerpt",
                "original_header": "HuggingFace models",
                "parent_header": [
                    "`EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda`",
                    "\ud83d\udd25 Quick Start"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        },
        {
            "result": {
                "value": "- Access OpenAI APIs from [OpenAI Console](https://platform.openai.com/)\n\n```bash\nexport OPENAI_API_KEY=\"[YOUR_API_KEY]\"\nevalplus.evaluate --model \"gpt-4o\"            \\\n                  --dataset [humaneval|mbpp]  \\\n                  --backend openai            \\\n                  --greedy\n```\n",
                "type": "Text_excerpt",
                "original_header": "OpenAI models",
                "parent_header": [
                    "`EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda`",
                    "\ud83d\udd25 Quick Start"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        },
        {
            "result": {
                "value": "- Access Anthropic APIs from [Anthropic Console](https://console.anthropic.com/)\n\n```bash\nexport ANTHROPIC_API_KEY=\"[YOUR_API_KEY]\"\nevalplus.evaluate --model \"claude-3-haiku-20240307\" \\\n                  --dataset [humaneval|mbpp]        \\\n                  --backend anthropic               \\\n                  --greedy\n```\n",
                "type": "Text_excerpt",
                "original_header": "Anthropic models",
                "parent_header": [
                    "`EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda`",
                    "\ud83d\udd25 Quick Start"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        },
        {
            "result": {
                "value": "- Access Gemini APIs from [Google AI Studio](https://aistudio.google.com/)\n\n```bash\nexport GOOGLE_API_KEY=\"[YOUR_API_KEY]\"\nevalplus.evaluate --model \"gemini-1.5-pro\"    \\\n                  --dataset [humaneval|mbpp]  \\\n                  --backend gemini            \\\n                  --greedy\n```\n\nYou can checkout the generation and results at `evalplus_results/[humaneval|mbpp]/`\n\n<details><summary>\u23ec Install nightly version <i>:: click to expand ::</i></summary>\n<div>\n\n```bash\npip install --upgrade \"git+https://github.com/evalplus/evalplus.git\"                     # without vLLM\npip install --upgrade \"evalplus[vllm] @ git+https://github.com/evalplus/evalplus@master\" # with vLLM\n```\n\n</div>\n</details>\n\n<details><summary>\u23ec Using EvalPlus as a local repo? <i>:: click to expand ::</i></summary>\n<div>\n\n```bash\ngit clone https://github.com/evalplus/evalplus.git\ncd evalplus\nexport PYTHONPATH=$PYTHONPATH:$(pwd)\npip install -r requirements.txt\n```\n\n</div>\n</details>\n",
                "type": "Text_excerpt",
                "original_header": "Google Gemini models",
                "parent_header": [
                    "`EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda`",
                    "\ud83d\udd25 Quick Start"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        }
    ],
    "acknowledgement": [
        {
            "result": {
                "value": "- [HumanEval](https://github.com/openai/human-eval)\n- [MBPP](https://github.com/google-research/google-research/tree/master/mbpp)\n",
                "type": "Text_excerpt",
                "original_header": "\ud83d\ude4f Acknowledgement",
                "parent_header": [
                    "`EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda`"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "<p align=\"center\">\n    <a href=\"https://evalplus.github.io/leaderboard.html\"><img src=\"https://img.shields.io/badge/%F0%9F%8F%86-leaderboard-8A2BE2\"></a>\n    <a href=\"https://openreview.net/forum?id=1qvx610Cu7\"><img src=\"https://img.shields.io/badge/Paper-NeurIPS'23-a55fed.svg\"></a>\n    <a href=\"https://huggingface.co/evalplus/\"><img src=\"https://img.shields.io/badge/\ud83e\udd17%20Hugging%20Face-evalplus-%23ff8811.svg\"></a>\n    <a href=\"https://pypi.org/project/evalplus/\"><img src=\"https://img.shields.io/pypi/v/evalplus?color=g\"></a>\n    <a href=\"https://pepy.tech/project/evalplus\"><img src=\"https://static.pepy.tech/badge/evalplus\"></a>\n    <a href=\"https://hub.docker.com/r/ganler/evalplus\" title=\"Docker\"><img src=\"https://img.shields.io/docker/image-size/ganler/evalplus\"></a>\n    <a href=\"https://github.com/evalplus/evalplus/blob/master/LICENSE\"><img src=\"https://img.shields.io/pypi/l/evalplus\"></a>\n</p> \n",
                "original_header": "`EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda`"
            },
            "confidence": 1.0,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "> [!Important]\n>\n> \ud83d\udea7 **MBPP+ update (`v0.1.0` to `v0.2.0`)**:\n> We recently improved and stablized MBPP+ dataset by removing some tasks whose `test_list` is wrong (brought by the original MBPP dataset itself) to make it more reasonable to solve.\n> In `v0.1.0` MBPP+ has 399 tasks while the new `v0.2.0` has 378 tasks.\n> We also improved the oracle. Therefore, **using `v0.2.0` you might expect ~4pp pass@1 improvement** for both base and plus tests.\n \n",
                "original_header": "About"
            },
            "confidence": 0.9697460671468692,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Each sample file is packaged in a zip file named like `${model_name}_temp_${temperature}.zip`.\nYou can unzip them to a folder named like `${model_name}_temp_${temperature}` and run the evaluation from scratch with:\n```bash\nevalplus.evaluate --dataset humaneval --samples ${model_name}_temp_${temperature}\n```\n \n",
                "original_header": "\ud83d\udcbb LLM-generated code"
            },
            "confidence": 0.9238367097195801,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "EvalPlus(\ud83d\udcd6) =&gt; \ud83d\udcda"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/evalplus/evalplus/master/README.md"
        }
    ]
}