{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:38:19"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/ulyantsev/EFSM-tools",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "ulyantsev",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2014-03-15T16:00:44Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-25T07:26:00Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Tools for extended finite-state machine synthesis and testing",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "EFSM-tools is a toolset for finite-state machine (FSM) synthesis. Is is mostly based on satisfiability solvers, and uses *traces* (aka IO-traces, *scenarios*) and LTL formulae as input. EFSM means \"extended finite-state machine\", an FSM with variables. However, within this toolset variables are Boolean and are often treated analogously to input events. The variant of the FSM synthesis problem being solved is *exact*: an FSM is generated with the given number of states, or its non-existence is reported.\n\nThe toolset implements the techniques described in the following papers:\n\n* [Ulyantsev V., Tsarev F. Extended Finite-State Machine Induction using SAT-Solver / Proceedings of the Tenth International Conference on Machine Learning and Applications. - Honolulu: IEEE Computer Society, 2011. - Vol. 2. - P. 346-349](http://dx.doi.org/10.1109/ICMLA.2011.166)\n* [Ulyantsev V., Buzhinsky I., Shalyto A. Exact Finite-State Machine Identification from Scenarios and Temporal Properties. International Journal on Software Tools for Technology Transfer, 2016, DOI: 10.1007/s10009-016-0442-1](http://arxiv.org/abs/1601.06945)\n* [Buzhinsky I., Vyatkin V. Automatic Inference of Finite-State Plant Models from Traces and Temporal Properties. IEEE Transactions on Industrial Informatics, 2017, DOI: 10.1109/TII.2017.2670146](http://rain.ifmo.ru/~buzhinsky/papers/tii-2017-automatic.pdf)\n\nEFSM-tools is developed in Computer Technologies Laboratory, ITMO University. You may find related projects by the same research group below:\n\n* [Toolset for deterministic finite automata (DFA) synthesis](https://github.com/ctlab/DFA-Inductor)\n* [MuACO toolset for EFSM synthesis based on ant colony optimization](https://bitbucket.org/chivilikhin_daniil/aco-for-automata)\n",
                "type": "Text_excerpt",
                "original_header": "Introduction"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "While each input is a combination of an event and, optionally, of variable values, each output is a combination of comma-separated actions, for example: \n",
                "original_header": "Input data format for traces"
            },
            "confidence": 0.9074685771848665,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This method is described here as the \"Iterative SAT-based\" one: \n",
                "original_header": "Mealy machine synthesis from traces and LTL properties based on incremental SAT solvers"
            },
            "confidence": 0.911020620227285,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "It supports four methods of FSM synthesis based on: \n",
                "original_header": "Mealy machine synthesis from traces and LTL properties based on SAT and QSAT solvers"
            },
            "confidence": 0.9655591394547053,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This is a spin-off of the FSM synthesis project which focuses on Moore machine synthesis for a specific application. In the industrial automation domain, controllers co-exist with plants. In formal modeling, it is natural to represent plants as nondeterministic Moore machines. Read more in: \n",
                "original_header": "Plant model synthesis from traces and LTL properties"
            },
            "confidence": 0.9889114196221186,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This method is described in: \n*4. Modular method*. Modular explicit-state plant model construction. An example is given in [evaluation/counter/modular.sh](/evaluation/counter/modular.sh). \n",
                "original_header": "Plant model synthesis from behavior traces only"
            },
            "confidence": 0.9657505549964662,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This set of tools is partially described in the paper: \n* [automaton-generator.jar](/jars/automaton-generator.jar): generate a random EFSM with the given parameters\n* [scenarios-generator.jar](/jars/scenarios-generator.jar): generate scenarios for the given EFSM\n* [isomorphism-checker.jar](/jars/isomorphism-checker.jar): check two EFSMs for isomorphism\n* [completeness-checker.jar](/jars/completeness-checker.jar): check an EFSM for completeness (completeness here means rather coverage of transitions by traces)\n* [consistency-checker.jar](/jars/consistency-checker.jar): check EFSM compliance with a set of scenarios\n \n",
                "original_header": "Mealy machine synthesis from traces based on SAT and CSP solvers"
            },
            "confidence": 0.9617252146692665,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "EFSM-tools",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "ulyantsev/EFSM-tools",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/ulyantsev/EFSM-tools/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/ulyantsev/EFSM-tools/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 19,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 5,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/ulyantsev/EFSM-tools/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 3430934
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 1433860
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 867024
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 339889
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "SuperCollider",
                "name": "SuperCollider",
                "type": "Programming_language",
                "size": 132694
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 73512
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 54737
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 38792
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Roff",
                "name": "Roff",
                "type": "Programming_language",
                "size": 14257
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Gnuplot",
                "name": "Gnuplot",
                "type": "Programming_language",
                "size": 8347
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "R",
                "name": "R",
                "type": "Programming_language",
                "size": 1164
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CSS",
                "name": "CSS",
                "type": "Programming_language",
                "size": 891
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/test.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/cash-dispenser-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/cas-protocol-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/arbiter-qbf-solve.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/clock-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/cvs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/elevator-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/editor.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/elevator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/cvs-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/arbiter-qbf-generate.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/cas-protocol.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/priority-queue-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/editor-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/jhotdraw.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/cash-dispenser.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/jhotdraw-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/clock.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/vending-machine.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/vending-machine-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/examples/priority-queue.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/statemerging-run-jar-smfail.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/statemerging-run-jar-cvs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/evaluate-statemerging.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/experiment.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/daniil-run-jar.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/see-daniil.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/backtracking-run-jar.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/backtracking-daniil.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/evaluate-daniil.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/evaluate.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/run-jar-errors-in-senarios.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/counterex-run-jar.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/iter-vs-runtime.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/run-jar-weak-completeness.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/iterate-states.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/qbf-create.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/evaluate-daniil-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/statemerging-run-jar-jhotdraw.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/evaluate-fast.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/walkinshaw-run-jar-smfail.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/unsat.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/qbf-create-walkinshaw.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/expsat-run-jar.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/qbf-run-jar.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/see.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/statemerging-run-jar-editor.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/Unbeast-0.6b/cudd/setup.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/Unbeast-0.6b/cudd/shutdown.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/Unbeast-0.6b/cudd/nanotrav/tst.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-synthesis-sm/vver.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-synthesis-sm/cylinder.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-synthesis-sm/water-level.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/iteration-plots/plot.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-model-random-ltl/evaluate-sm.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-model-random-ltl/evaluate.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-model-random-ltl/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-model-random-ltl/create.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-model-random-ltl/plot.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-model-random-ltl/see.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/moore-json/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/explicit-state-on-modular.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/quantiles.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/constraint-based.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/sat-based-on-modular.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/evaluate-trace-sufficiency.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/traces.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/modular-nosat.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/explicit-state.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/serialize-datasets.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/sat-based.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/explicit-state-timed.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/spin-builder.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/constraint-based-iecon2017.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/modular-sat.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/apros-scripts/explicit-state-iecon2017.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/moore-machine-synthesis/cylinder.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/moore-machine-synthesis/water-level.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/counter/modular.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/counter/serialize-datasets.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-synthesis/vver.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-synthesis/cylinder.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/plant-synthesis/water-level.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "license": [
        {
            "result": {
                "value": "Copyright (c) 1995-2004, Regents of the University of Colorado\n\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\nRedistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\nRedistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\nNeither the name of the University of Colorado nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS\nFOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE\nCOPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\nBUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\nLIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN\nANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/evaluation/Unbeast-0.6b/cudd/LICENSE"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "To build the toolset, you need JDK 1.8 (or greater) and [ant](https://ant.apache.org/). The tool is intended to work on Linux and Windows. The most recent features are not tested on Windows, though. Running some examples may require bash.\n\nEFSM-tools works with [cryptominisat](http://www.msoos.org/cryptominisat4/) and [lingeling](http://fmv.jku.at/lingeling/) SAT solvers, [Choco](http://choco-solver.org/) constraint (CSP) solver and [DepQBF](https://github.com/lonsing/depqbf) QSAT (QBF) solver. Choco is included into the toolset as a library. As for the rest, they must be installed separately. Make them available in command line as \"cryptominisat4\", \"lingeling\" and \"depqbf\".\n\nSome of the tools which work with solvers require [limboole](http://fmv.jku.at/limboole/). Make it available in command line as \"limboole\".\n\nDifferent features of the toolset require different solvers, so probably there is no need to install all of them. More information is provided in other sections.\n\nTo view generated FSMs, you need [Graphviz](http://www.graphviz.org/) (on Linux, you may additionally install the XDot viewer).\n",
                "type": "Text_excerpt",
                "original_header": "Prerequisites"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "To build the toolset, move to the root of the project and run:\n\n> ant\n\nThe JAR executables will be generated in the [jars](/jars/) directory. Then you can try running JAR tools like this and see the summaries of their command line options:\n\n> java -jar jars/<tool-name\\>.jar\n\nIn addition, recent synthesis methods by default use the incremental version of cryptominisat4. The pre-built Linux binary is located in the [incremental-cryptominisat](/incremental-cryptominisat/) directory. Make the binary file incremental-cryptominisat-binary available in command line, e.g.:\n\n> sudo ln -s incremental-cryptominisat-binary /usr/bin\n\nTo run incremental-cryptominisat-binary, you at least need to have cryptominisat4 installed. To rebuild it yourself, you need make, g++ and cryptominisat4. Run:\n\n> make\n\nIf for some reason you are unable to use the incremental version of cryptominisat, the usual versions of cryptominisat and lingeling can be used instead (some jar tools have command line options to set the used solver).\n",
                "type": "Text_excerpt",
                "original_header": "Building and running"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "LTL properties, or LTL formulae, are represented as text files. Each line represents a single LTL formula. Formulae may use temporal operators X (next), F (future), G (globally), U (until), R (release), Boolean operators \"&&\" (and), \"||\" (or), \"!\" (not), and atomic propositions *event(&lt;event name or a comma-separated list of event names&gt;)*, *action(&lt;action name&gt;)*, *variable(&lt;variable name&gt;)*. \n",
                "original_header": "Input data format for LTL properties"
            },
            "confidence": 0.9997337939908222,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "It uses incremental cryptominisat by default, but switching to usual versions of cryptominisat or lingeling are possible using command line options. To run the tool: \n> cd examples \n",
                "original_header": "Mealy machine synthesis from traces and LTL properties based on incremental SAT solvers"
            },
            "confidence": 0.975234735389455,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Run the following tool: \n",
                "original_header": "Mealy machine synthesis from traces and LTL properties based on SAT and QSAT solvers"
            },
            "confidence": 0.9269093628562352,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Here are scripts to run some examples: \n",
                "original_header": "Moore machine synthesis from traces and LTL properties"
            },
            "confidence": 0.9005075916320626,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Regarding issues with the tool, bugs, etc., email Igor Buzhinsky.\n \n",
                "original_header": "Troubleshooting, questions, research collaboration, etc."
            },
            "confidence": 0.9604426559294641,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": ""
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/ulyantsev/EFSM-tools/wiki",
                "format": "wiki"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ulyantsev/EFSM-tools/master/README.md"
        }
    ]
}