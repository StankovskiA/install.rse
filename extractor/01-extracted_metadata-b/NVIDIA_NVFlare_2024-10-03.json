{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:37:44"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/NVIDIA/NVFlare",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "NVIDIA",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-07-23T17:26:12Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-03T12:43:19Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/LICENSE"
        },
        {
            "result": {
                "value": "NVIDIA FLARE is released under an [Apache 2.0 license](https://github.com/NVIDIA/NVFlare/blob/main/LICENSE).\n",
                "type": "Text_excerpt",
                "original_header": "License",
                "parent_header": [
                    "NVIDIA FLARE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "NVIDIA Federated Learning Application Runtime Environment",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "[NVIDIA FLARE](https://nvidia.github.io/NVFlare/) (**NV**IDIA **F**ederated **L**earning **A**pplication **R**untime **E**nvironment)\nis a domain-agnostic, open-source, extensible SDK that allows researchers and data scientists to adapt existing ML/DL workflows to a federated paradigm.\nIt enables platform developers to build a secure, privacy-preserving offering for a distributed multi-party collaboration.\n \n",
                "original_header": "NVIDIA FLARE"
            },
            "confidence": 0.9029274395795838,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "FLARE is built on a componentized architecture that allows you to take federated learning workloads\nfrom research and simulation to real-world production deployment. \nApplication Features\n* Support both deep learning and traditional machine learning algorithms (eg. PyTorch, TensorFlow, Scikit-learn, XGBoost etc.)\n* Support horizontal and vertical federated learning\n* Built-in Federated Learning algorithms (e.g., FedAvg, FedProx, FedOpt, Scaffold, Ditto, etc.)\n* Support multiple server and client-controlled training workflows (e.g., scatter & gather, cyclic) and validation workflows (global model evaluation, cross-site validation)\n* Support both data analytics (federated statistics) and machine learning lifecycle management\n* Privacy preservation with differential privacy, homomorphic encryption, private set intersection (PSI) \nFrom Simulation to Real-World\n* FLARE Client API to transition seamlessly from ML/DL to FL with minimal code changes\n* Simulator and POC mode for rapid development and prototyping\n* Fully customizable and extensible components with modular design\n* Deployment on cloud and on-premise\n* Dashboard for project management and deployment\n* Security enforcement through federated authorization and privacy policy\n* Built-in support for system resiliency and fault tolerance \n",
                "original_header": "Features"
            },
            "confidence": 0.954996942649626,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "NVFlare",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "NVIDIA/NVFlare",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 613,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "decentralized, federated-analytics, federated-computing, federated-learning, pet, privacy-protection, python",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 174,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/NVIDIA/NVFlare/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 6181189
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 494383
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Astro",
                "name": "Astro",
                "type": "Programming_language",
                "size": 165223
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 121843
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 23925
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 14203
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CMake",
                "name": "CMake",
                "type": "Programming_language",
                "size": 6732
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 983
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 350
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/174213568",
                "tag": "2.5.0",
                "name": "2.5.0: Latest release with features and bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* updated the hello-TF2 readme [skip ci] by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2271\r\n* Enhanced the Simulator client end_run solution  by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2270\r\n* Clean up master template yaml file (step 1) by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2274\r\n* updates examples, add version matching note [skip ci] by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2278\r\n* Fix Auto login \"communication error\"  by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2279\r\n* handle none value for the subcommand parser by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2276\r\n* Address VDR comments [slip ci] by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2283\r\n* Fix the client_executor improper lock use by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2282\r\n* Add notebook for GNN examples by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2289\r\n* Fix FLModelUtil by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2291\r\n* Check invalid input directory in nvflare config by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2295\r\n* Refactor AWS and Azure cloud scripts of server and client by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2275\r\n* Added debug headers for all message route in CoreCell by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2301\r\n* Update execution api documentation and docstrings by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2305\r\n* Address VDR feedback by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2297\r\n* Rename to execution api type, update job command output by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2306\r\n* Move simulator workspace setup inside constructor by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2311\r\n* Update cli string [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2313\r\n* Remove base class Filter in ParamConverter by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2312\r\n* Add hello-ccwf to ci by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2316\r\n* Improve monai integration tracking example by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2318\r\n* Exclude hidden json file when perform config parsing by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2323\r\n* apply nemo 2.4 fixes by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2327\r\n* Update all examples/research/integration requirements by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2330\r\n* Removed the no need client custom path. by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2322\r\n* Enhance the handling of RC of task returned from clients by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2338\r\n* Add xgboost to CI/CD by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2328\r\n* Update cifar10 and gnn examples by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2340\r\n* Address final VDR feedbacks by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2332\r\n* Cifar10 fix plot by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2346\r\n* Added a few workarounds for HTTP driver's latency issues by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2343\r\n* Address VDR report by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2335\r\n* Add notes about running TF with GPUs [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2348\r\n* Fix tb receiver by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2349\r\n* Clarify nemo example readme by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2352\r\n* DataBus by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2285\r\n* Native FLARE/XGB integration  by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2354\r\n* Fix Pipe and PipeHandler by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2356\r\n* Setup for tf load_data by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2360\r\n* tf dataset setup and teardown by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2366\r\n* Fix nemo example link by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2373\r\n* Update outdated links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2368\r\n* Clean up FilePipe remains by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2369\r\n* In process Client API Executor Part 1 by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2248\r\n* BioNeMo examples by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2241\r\n* Fix LauncherExecutor handle_event by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2370\r\n* Fix NEMO links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2385\r\n* Update xgboost tree code by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2383\r\n* Reliable aux msg by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2380\r\n* Fix header parameter handling in sklearn's data_loader, update README with new AUC by @mikez3 in https://github.com/NVIDIA/NVFlare/pull/2363\r\n* Controller Refactor Part 1: separate communication by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2390\r\n* Update publication list by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2395\r\n* Job submission with binary protocol  by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2393\r\n* Update rr_order to cyclic_order by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2412\r\n* Updated FOBS readme to add DatumManager, added agrpcs as secure scheme by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2410\r\n* Multiple CC Authorizer support CCManager by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2396\r\n* Support Responder functions by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2397\r\n* Exclude non-training clients from cse by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2421\r\n* Fix mlflow example tag links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2423\r\n* Lightning client api patch multiple times by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2424\r\n* Add check to client api send method by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2425\r\n* Fixed the wrong workspace object in the simulator worker by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2429\r\n* Fix api send typo by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2432\r\n* Enable StreamCell for all application channels by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2407\r\n* Add back request header by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2440\r\n* Check wandb login by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2445\r\n* Clarify download_job workspace delay by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2454\r\n* Client API Update: Job Templates, examples to reflect different type of Client API by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2456\r\n* Add controller interface by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2451\r\n* Update README.md by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2460\r\n* Improve reliable msg by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2459\r\n* CC block byoc jobs  by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2403\r\n* Fixed the authz and site_security check for check_resource command by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2462\r\n* Add garbage collect at ends of round-based workflows by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2463\r\n* Add WFController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2468\r\n* Add warning when the same admin in project.yml has different role by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2470\r\n* Add custom order and early termination to CyclicController by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2387\r\n* Add IPC agent and exchanger by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2435\r\n* Fix a typo in ModelController by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2473\r\n* Refactor WFController and ModelController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2475\r\n* Add example for mulitparty kaplan-meier analysis with HE by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2259\r\n* Remove task_fn_args by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2479\r\n* Enable simulator to run HE by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2339\r\n* Fix simulator workspace by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2489\r\n* Fix xgboost integration tests by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2486\r\n* Add FedBPT research example by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2465\r\n* Fix xgboost test setup by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2494\r\n* add Client API documentation by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2497\r\n* Added more logging for the job status changing. by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2480\r\n* Fix update client status by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2508\r\n* Add user guide on how to deploy to EKS by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2510\r\n* Improve dead client handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2506\r\n* Enhance WFController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2505\r\n* Temporarily disable preflight tests by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2521\r\n* Upgrade dependencies by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2516\r\n* Use full path for PSI components by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2517\r\n* Multiple bug fixes from 2.4 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2518\r\n* Pythonic job creation by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2483\r\n* Enhancements from 2.4 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2519\r\n* Update ci cd from 2.4 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2520\r\n* Use controller name for stats by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2522\r\n* Simulator workspace re-design by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2492\r\n* Simulator end run for all clients by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2514\r\n* Secure XGBoost Integration by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2512\r\n* simplify Pythonic job simulator_run with only workspace parameter by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2528\r\n* Add missing client api test jobs by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2535\r\n* Fixed the simulator server workspace root dir by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2533\r\n* Improve InProcessClientAPIExecutor  by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2536\r\n* User-defined aggregate_fn by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2539\r\n* FIX MLFLow and Tensorboard Output to be consistent with new Workspace root changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2537\r\n* Fix decorator issue by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2542\r\n* FLModel summary by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2544\r\n* Update KM example, add 2-stage solution without HE by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2541\r\n* handle cases where the script with relative path in Script Runner by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2543\r\n* Lr newton raphson by @zhijinl in https://github.com/NVIDIA/NVFlare/pull/2529\r\n* Add information about dig (bind9-dnsutils) in the document [skip ci] by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2548\r\n* Update monai readme to remove logging.conf [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2552\r\n* MONAI mednist example by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2532\r\n* Improve AWS cloud launch script by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2547\r\n* Add in process client api tests by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2549\r\n* Add client controller executor by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2530\r\n* Add option in dashboard cli for AWS vpc and subnet by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2569\r\n* [2.5] Clean up to allow creation of nvflare light by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2573\r\n* Enable patch and build for nvflare_light by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2574\r\n* add FedBN Implementation on NVFlare research folder - a local batch normalization federated learning method  by @MinghuiChen43 in https://github.com/NVIDIA/NVFlare/pull/2524\r\n* FIx MLFLOW example bugs by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2575\r\n* BugFix: InProcessClientAPIExecutor's TaskScriptRunner by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2558\r\n* update client_api.png by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2577\r\n* Fix the simulator worker sys path by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2561\r\n* Moved the get_component_init_parameters to class_utils by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2578\r\n* Add Cyclic WFController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2554\r\n* Horizontal Secure XGBoost Support by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2562\r\n* Fobs auto register by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2567\r\n* Update TF2 example by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2587\r\n* added handle for class in the to-level main script for job creation API. by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2592\r\n* Fix CI failure by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2590\r\n* Add API for Pythonic Job Creation by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2563\r\n* Escape character ' in the sub_start.sh. by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2581\r\n* Enable delayed model build by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2596\r\n* Rename WFController to ModelController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2588\r\n* Update readme of KM  by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2593\r\n* Missing sj heartbeat by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2583\r\n* Getting started guide with job tutorial by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2598\r\n* Add fedopt workflow by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2550\r\n* Enhance the client sync_runner process to timeout use max_timeout, in\u2026 by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2603\r\n* Reduce timeout warnings during NeMo PEFT example by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2605\r\n* [2.5] Support config dict by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2604\r\n* Job CLI bugs fix by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2607\r\n* Added target validation for job API by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2606\r\n* Add ipcl_python lib by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2612\r\n* add the runner_config to the client by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2615\r\n* Add hierarchical statistics support by @apatole in https://github.com/NVIDIA/NVFlare/pull/2608\r\n* Added empty results check for aggregate_fn by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2613\r\n* allow absolute path for the external script by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2565\r\n* [2.5] fix missing replying var by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2619\r\n* Added engine.add_component() function by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2621\r\n* Add lightning and tensorflow getting started notebooks by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2610\r\n* [2.5] Support log file rotation in admin commands by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2624\r\n* Update blossom-ci ACL to secure format [skip ci] by @pxLi in https://github.com/NVIDIA/NVFlare/pull/2628\r\n* Fix docs typos by @apatole in https://github.com/NVIDIA/NVFlare/pull/2629\r\n* Build process update by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2638\r\n* Fix `project.yml` master templates by @apatole in https://github.com/NVIDIA/NVFlare/pull/2617\r\n* [2.5] Consolidate text file name validation by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2632\r\n* Update setup.py for base version and nightly build by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2644\r\n* Add licenses for website by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2645\r\n* Add flare site to github pages by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2642\r\n* Wrap the xgboost plugin into a C library. by @trivialfis in https://github.com/NVIDIA/NVFlare/pull/2639\r\n* Add Secure XGBoost example by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2635\r\n* aws cloud deployment improvements  by @dirkpetersen in https://github.com/NVIDIA/NVFlare/pull/2618\r\n* Add feedback when users launch dashboard to cloud with editable version by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2655\r\n* Added external script for fed_job API by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2623\r\n* update client_api executor docs by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2661\r\n* Fix DockerBuilder to add `build` section by @apatole in https://github.com/NVIDIA/NVFlare/pull/2662\r\n* Use npm for pages deployment by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2665\r\n* Allow the simulator to pass the End_Run aux message to clients by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2653\r\n* Use google drive video embeddings by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2668\r\n* Change the ScatterAndGather default persistor_id by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2664\r\n* AWS cloud deployments: Adding multi-region capability and auto-detection of GPU instance types and AMI images  by @dirkpetersen in https://github.com/NVIDIA/NVFlare/pull/2650\r\n* Fixed the numpy release version by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2670\r\n* Add correct params exchange format for tf by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2676\r\n* BUGFIX: cloud deployment script issue with OSX  by @dirkpetersen in https://github.com/NVIDIA/NVFlare/pull/2677\r\n* Add min_responses to send_model_and_wait() by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2675\r\n* Resolve CVE with updated dependency by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2681\r\n* Add site enhancements by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2682\r\n* Enhance ModelController arguments by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2683\r\n* FOBS Enhancement by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2580\r\n* [2.5] Support app commands through admin by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2647\r\n* Updates for num_clients by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2685\r\n* FedAvg Early Stopping with ModelController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2648\r\n* fixed TaskScriptRunner which may locate the wrong script by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2626\r\n* Fixed the sys.path for fedavg_model_learner_xsite_val_cifar10 example by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2614\r\n* Update getting started notebooks for 2.5.0rc by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2690\r\n* Fix Fed Stats due to recent changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2691\r\n* Support server side custom scripts in job API by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2695\r\n* update notebooks due to the simulator changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2696\r\n* Fix DAM Unit Test by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2692\r\n* Update version number MONAI and the bundle version by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2702\r\n* Add Hierarchical Stats example by @apatole in https://github.com/NVIDIA/NVFlare/pull/2694\r\n* Update Hello Client Controlled Workflow(CCWF) README.md by @tonywjs in https://github.com/NVIDIA/NVFlare/pull/2709\r\n* Update stats READMEs by @apatole in https://github.com/NVIDIA/NVFlare/pull/2711\r\n* Fix torch ddp by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2706\r\n* Cherry pick RM fix from #2667 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2700\r\n* Update ClientAlgo by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2705\r\n* Fix ClientAPILauncherExecutor import path to remove torch dependency. by @zhijinl in https://github.com/NVIDIA/NVFlare/pull/2713\r\n* Fix cyclic job creation example by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2627\r\n* Use ReliableMessage from 2.4 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2717\r\n* Enhance CLI command config by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2716\r\n* Add CrossSiteEval with ModelController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2699\r\n* Enhance job auth setup script by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2715\r\n* Merging XGBoost changes from 2.4 by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2712\r\n* [2.5] Fix pipe handler race condition handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2728\r\n* Remove serialization of pfx by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2721\r\n* Update readme link to website by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2734\r\n* Fix BcastTaskManager min_responses by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2733\r\n* Fix cell encrypt by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2732\r\n* keep the local resources for simulator by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2730\r\n* Support same app for all sites in Job API by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2714\r\n* Fix overseer test timing by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2743\r\n* Add ModelController documentation by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2707\r\n* [2.5] TIE (Technology for Integrating Everything) and Flower Inegration by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2523\r\n* Add MetricsSender docstring by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2745\r\n* Update MONAI example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2724\r\n* [2.5] Fix clone job to keep original job by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2755\r\n* Bump up the version of monai-nvflare package to 0.2.9 by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2749\r\n* Update getting_started.rst by @hwpang in https://github.com/NVIDIA/NVFlare/pull/2737\r\n* Add CIFAR 10 examples for Tensorflow-based FedAvg & FedOpt by @zhijinl in https://github.com/NVIDIA/NVFlare/pull/2704\r\n* Minor fix for instructions in setup_poc.ipynb for main by @hwpang in https://github.com/NVIDIA/NVFlare/pull/2752\r\n* Added id to the jobAPI swarm_script_executor_cifar10 component deploy by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2678\r\n* XGBoost plugin with new API by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2725\r\n* Moved the simulator server logger init earlier by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2753\r\n* Cherry pick XGB docs from #2671 by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2759\r\n* Getting started readmes by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2757\r\n* fix the CrossSiteEvalClientController in swarm_script_executor_cifar10 by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2762\r\n* Cherry pick fixes from 2.4 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2768\r\n* Cherry pick launcher log fix by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2766\r\n* Update xgboost user guide by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2750\r\n* Honor optional flag at streaming level by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2771\r\n* Removed the app_opt scan by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2758\r\n* Add job API to support additional external dir in the custom dir by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2748\r\n* Moved the hello-pt example initialization to START_RUN by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2735\r\n* Fix config file name in doc by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2772\r\n* Fix loading cli history in admin console by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2777\r\n* Port 2.4 xgb changes by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2773\r\n* implementation of Scaffold and FedProx for TensorFlow by @falibabaei in https://github.com/NVIDIA/NVFlare/pull/2727\r\n* name to path changes in configuration by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2781\r\n* Added error handling for XGB_CONFIGURED event by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2780\r\n* Fix JobAPI Persistor handling by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2775\r\n* Add FedJobAPI documentation by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2718\r\n* fixed the cross validation wrong config for swarm_script_executor_cifar10 by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2778\r\n* Fixed the mgpu simulator workspace change error by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2770\r\n* Update Secure XGBoost example w.r.t. XGBoost's code changes by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2686\r\n* Improve the kill children processes by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2789\r\n* Add back metric callback and fix examples based on new xgboost version by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2787\r\n* [2.5] Improve app_command  by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2782\r\n* Add docstring to reliable message by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2788\r\n* Pre-trained Model and training_mode changes by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2793\r\n* Update xgboost example and ci by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2794\r\n* [2.5] Update flower CLI by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2792\r\n* Fix FedBN api key issue by replacing comet by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2798\r\n* more app_opt scan example changes by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2797\r\n* Add first version of release notes by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2800\r\n* FIX hard-coded sp_end_point in POC by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2795\r\n* Add hello examples with new APIs by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2785\r\n* Update autofedrl example by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2801\r\n* Refactor XGBDataLoader by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2804\r\n* Fix HE docstring typo by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2802\r\n* re-arrange getting started examples by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2805\r\n* Update secure xgboost examples by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2803\r\n* XGBoost user interface change and XGBoost version check by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2808\r\n* Add lock to reliable message by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2811\r\n* Fixed 2 PTFileModelLocator config errors (Research) by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2807\r\n* Update xgboost example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2813\r\n* Refactor Job API by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2799\r\n* Add CUDA plugin code by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2814\r\n* Fix Jenkins CI by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2812\r\n* Remove the module class scan  by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2790\r\n* Change all name to path by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2817\r\n* Add back hello-numpy-sag and update references by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2816\r\n* Revert \"Remove the module class scan \" by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2819\r\n* Fix config typos by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2818\r\n* Relax grpcio/protobuf versions by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2822\r\n* ScriptExecutor improvements by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2820\r\n* Fix Job API Examples by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2823\r\n* Support ScriptRunner in ccwf_job by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2825\r\n* ScriptRunner framework option in examples by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2827\r\n* Use pre module scan to create classes table by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2824\r\n* Add one entry in MANIFEST.in by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2826\r\n* Add NVIDIA FLARE DAY banner by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2829\r\n* Fix existing xgboost examples by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2830\r\n* Remove unused code and update README by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2828\r\n* Fixed the config changes error by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2834\r\n* Minor fixes to xgboost example by @hwpang in https://github.com/NVIDIA/NVFlare/pull/2832\r\n* fix notebook errors by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2835\r\n* Update requirements versions by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2831\r\n* Add NPModelPersistor to hello-fedavg-numpy by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2837\r\n* improve the class_utils to handle the duplicate class name case by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2833\r\n* Add migration guide by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2806\r\n* Fix hello-pt and empty metrics by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2840\r\n* Update ml-to-fl examples with new APIs by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2836\r\n* Add example notebook for docker by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2767\r\n* hello-pt-mlflow job api example by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2839\r\n* Credit Card Fraud detection end-to-end with XGBoost by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2738\r\n* rolled back the job api custom_file copy destination change by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2848\r\n* Remove basename in ScriptRunner by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2849\r\n* Update site code blocks and links by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2847\r\n* Gradient inversion fix dtype error by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2852\r\n* Convert step-by-step stats examples to use new Job API by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2842\r\n* Convert tree-based Fed XGBoost with Job API by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2843\r\n* Convert Scikit-Learn examples (SVM, Kmeans, Linear) to use Job API by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2845\r\n* Added Debug in ReliableMessage and Ignore XGB errors after shutdown by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2851\r\n* Update arg name for MLflowReceiver by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2850\r\n* Update step by step examples to use Job API by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2841\r\n* Update client api to use same task as CSE and update step-by-step CSE by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2844\r\n* Autofedrl fix for updated locator behavior by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2856\r\n* Convert CCWF examples to use Job API by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2846\r\n* Fixed the SubprocessLauncher missing app_custom_folder in PYTHONPATH by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2857\r\n* Add FLModel parameter checks by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2859\r\n* Clarify default persistor_id by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2861\r\n* Added check for duplicate RM request by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2858\r\n* Add support of just doing metrics streaming with client api by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2763\r\n* Add flower metrics streaming example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2764\r\n* Add docs for Flower integration by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2862\r\n* Update simulator folder path for random forest example by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2865\r\n* Fix an XGB Failure caused by len() by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2863\r\n* Fed Stats Notebooks and Read ME: fix fed stats output directory due to simulator output structure changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2864\r\n* Fixed the wrong dh_psi_task_handler path by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2866\r\n* improve race condition handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2867\r\n* support passing custom env vars for flower client by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2870\r\n* Gradient inversion: fix cross-validation path by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2869\r\n* Update Job API docs after redesign by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2873\r\n* Updated xgboost user guide by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2872\r\n* Add pipe docstring by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2868\r\n* Update flower examples by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2871\r\n* Clean up getting started installation docs by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2874\r\n* Make the Launcher extends FLComponent by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2875\r\n* BioNeMo examples: fix docs by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2877\r\n* Fix heartbeat timeout config by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2878\r\n* Added more handling for the source file import handling by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2876\r\n* Update the generated component classes table by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2879\r\n* Fix for last index of module path by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2881\r\n* Fix hierarchical stats documentation by @apatole in https://github.com/NVIDIA/NVFlare/pull/2882\r\n* Update fedbn example by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2883\r\n* fix path due to simulator output structure changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2885\r\n* Add note on installing nvflare in requirements by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2884\r\n* Fix sbs notebooks by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2887\r\n* Re-factor hello-numpy-cse example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2880\r\n* Update CrossSiteEval by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2886\r\n* Add printing of tb logdir by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2888\r\n* Update getting_started cifar notebook by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2889\r\n* Deprecate decorator pattern by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2891\r\n* Added instructions to run horizontal secure XGBoost in simulator by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2890\r\n* Updated plugin build doc by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2892\r\n* fix PSI and Vertical learning paths by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2893\r\n* Fix ci test configs format issue by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2896\r\n* Remove bionemo from new by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2897\r\n* Update random forest and vertical xgb examples by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2895\r\n* Site, docs, and example updates by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2894\r\n* Update xgboost requirements by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2898\r\n* Update flare simulator tutorial by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2899\r\n* Fix tf weights filename by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2901\r\n* Add log info for flower executor by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2900\r\n* Fix hello-pt-cse job by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2905\r\n* Undo remove bionemo from new by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2902\r\n* Add vertical xgboost gpu instructions by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2903\r\n* Fix bionemo examples by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2904\r\n* Fixed Plugin README by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2906\r\n* Update xgboost docs by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2907\r\n* Added debug info for memoryview error by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2908\r\n* Change job simulator run to use Popen by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2909\r\n* Fix hello_world tf result printing by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2910\r\n* Fixed XGBoost Example README by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2913\r\n* Fix cifar10 examples num_clients by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2914\r\n* Fix data save path by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2917\r\n* trim the whitespace of the clients and gpu from the job simulator_run by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2912\r\n* Add CSE with job api with client api by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2918\r\n* Update to use BaseFedJob by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2919\r\n* Warning for Mixed Plugin Use by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2920\r\n* BugFix: Hierarchical Fed Stats, prepare data: replace os.rename() function by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2921\r\n* Note about Simulator in XGBoost Doc by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2911\r\n* Add params_transfer_type to ScriptRunner by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2922\r\n* Fix nemo examples by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2923\r\n* Added the current-round info the fl_ctx for BaseModelController by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2916\r\n* Fix ci path by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2927\r\n* Fix xgb standalone fed by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2924\r\n* Fixing the memoryview issues by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2926\r\n* Fixing memoryview error by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2929\r\n\r\n## New Contributors\r\n* @mikez3 made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2363\r\n* @zhijinl made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2529\r\n* @MinghuiChen43 made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2524\r\n* @apatole made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2608\r\n* @trivialfis made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2639\r\n* @dirkpetersen made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2618\r\n* @tonywjs made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2709\r\n* @hwpang made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2737\r\n* @falibabaei made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2727\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.0...2.5.0",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/174213568",
                "release_id": 174213568,
                "date_created": "2024-09-09T21:04:19Z",
                "date_published": "2024-09-09T21:13:27Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/173944053",
                "tag": "2.5.0rc12",
                "name": "2.5.0rc12: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Fixed XGBoost Example README by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2913\r\n* Fix cifar10 examples num_clients by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2914\r\n* Fix data save path by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2917\r\n* trim the whitespace of the clients and gpu from the job simulator_run by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2912\r\n* Add CSE with job api with client api by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2918\r\n* Update to use BaseFedJob by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2919\r\n* Warning for Mixed Plugin Use by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2920\r\n* BugFix: Hierarchical Fed Stats, prepare data: replace os.rename() function by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2921\r\n* Note about Simulator in XGBoost Doc by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2911\r\n* Add params_transfer_type to ScriptRunner by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2922\r\n* Fix nemo examples by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2923\r\n* Added the current-round info the fl_ctx for BaseModelController by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2916\r\n* Fix ci path by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2927\r\n* Fix xgb standalone fed by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2924\r\n* Fixing the memoryview issues by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2926\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc11...2.5.0rc12",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc12",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc12",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc12",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/173944053",
                "release_id": 173944053,
                "date_created": "2024-09-07T00:29:52Z",
                "date_published": "2024-09-07T00:51:04Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/173548896",
                "tag": "2.5.0rc11",
                "name": "2.5.0rc11: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Fix hello-pt-cse job by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2905\r\n* Undo remove bionemo from new by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2902\r\n* Add vertical xgboost gpu instructions by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2903\r\n* Fix bionemo examples by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2904\r\n* Fixed Plugin README by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2906\r\n* Update xgboost docs by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2907\r\n* Added debug info for memoryview error by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2908\r\n* Change job simulator run to use Popen by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2909\r\n* Fix hello_world tf result printing by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2910\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc10...2.5.0rc11",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc11",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc11",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc11",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/173548896",
                "release_id": 173548896,
                "date_created": "2024-09-05T02:19:28Z",
                "date_published": "2024-09-05T04:17:01Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/173325551",
                "tag": "2.5.0rc9",
                "name": "2.5.0rc9: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Updated plugin build doc by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2892\r\n* fix PSI and Vertical learning paths by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2893\r\n* Fix ci test configs format issue by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2896\r\n* Remove bionemo from new by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2897\r\n* Update random forest and vertical xgb examples by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2895\r\n* Site, docs, and example updates by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2894\r\n* Update xgboost requirements by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2898\r\n* Update flare simulator tutorial by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2899\r\n* Fix tf weights filename by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2901\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc8...2.5.0rc9",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc9",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc9",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc9",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/173325551",
                "release_id": 173325551,
                "date_created": "2024-09-04T00:28:02Z",
                "date_published": "2024-09-04T01:11:08Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/173326068",
                "tag": "2.5.0rc10",
                "name": "2.5.0rc10: Feature improvements",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Add log info for flower executor by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2900\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc9...2.5.0rc10",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc10",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc10",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc10",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/173326068",
                "release_id": 173326068,
                "date_created": "2024-09-04T01:14:38Z",
                "date_published": "2024-09-04T01:20:05Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/172862599",
                "tag": "2.5.0rc8",
                "name": "2.5.0rc8: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Fix hierarchical stats documentation by @apatole in https://github.com/NVIDIA/NVFlare/pull/2882\r\n* Update fedbn example by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2883\r\n* fix path due to simulator output structure changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2885\r\n* Add note on installing nvflare in requirements by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2884\r\n* Fix sbs notebooks by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2887\r\n* Re-factor hello-numpy-cse example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2880\r\n* Update CrossSiteEval by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2886\r\n* Add printing of tb logdir by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2888\r\n* Update getting_started cifar notebook by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2889\r\n* Deprecate decorator pattern by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2891\r\n* Added instructions to run horizontal secure XGBoost in simulator by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2890\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc7...2.5.0rc8",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc8",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc8",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc8",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/172862599",
                "release_id": 172862599,
                "date_created": "2024-08-31T00:26:02Z",
                "date_published": "2024-08-31T00:37:20Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/172683567",
                "tag": "2.5.0rc7",
                "name": "2.5.0rc7: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Clean up getting started installation docs by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2874\r\n* Make the Launcher extends FLComponent by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2875\r\n* BioNeMo examples: fix docs by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2877\r\n* Fix heartbeat timeout config by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2878\r\n* Added more handling for the source file import handling by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2876\r\n* Update the generated component classes table by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2879\r\n* Fix for last index of module path by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2881\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc6...2.5.0rc7",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc7",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc7",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc7",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/172683567",
                "release_id": 172683567,
                "date_created": "2024-08-30T03:21:52Z",
                "date_published": "2024-08-30T03:25:41Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/172467042",
                "tag": "2.5.0rc6",
                "name": "2.5.0rc6: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Add docs for Flower integration by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2862\r\n* Update simulator folder path for random forest example by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2865\r\n* Fix an XGB Failure caused by len() by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2863\r\n* Fed Stats Notebooks and Read ME: fix fed stats output directory due to simulator output structure changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2864\r\n* Fixed the wrong dh_psi_task_handler path by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2866\r\n* improve race condition handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2867\r\n* support passing custom env vars for flower client by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2870\r\n* Gradient inversion: fix cross-validation path by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2869\r\n* Update Job API docs after redesign by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2873\r\n* Updated xgboost user guide by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2872\r\n* Add pipe docstring by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2868\r\n* Update flower examples by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2871\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc5...2.5.0rc6",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc6",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc6",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc6",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/172467042",
                "release_id": 172467042,
                "date_created": "2024-08-29T00:49:08Z",
                "date_published": "2024-08-29T01:24:41Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/172254423",
                "tag": "2.5.0rc5",
                "name": "2.5.0rc5: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Support ScriptRunner in ccwf_job by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2825\r\n* ScriptRunner framework option in examples by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2827\r\n* Use pre module scan to create classes table by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2824\r\n* Add one entry in MANIFEST.in by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2826\r\n* Add NVIDIA FLARE DAY banner by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2829\r\n* Fix existing xgboost examples by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2830\r\n* Remove unused code and update README by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2828\r\n* Fixed the config changes error by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2834\r\n* Minor fixes to xgboost example by @hwpang in https://github.com/NVIDIA/NVFlare/pull/2832\r\n* fix notebook errors by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2835\r\n* Update requirements versions by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2831\r\n* Add NPModelPersistor to hello-fedavg-numpy by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2837\r\n* improve the class_utils to handle the duplicate class name case by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2833\r\n* Add migration guide by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2806\r\n* Fix hello-pt and empty metrics by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2840\r\n* Update ml-to-fl examples with new APIs by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2836\r\n* Add example notebook for docker by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2767\r\n* hello-pt-mlflow job api example by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2839\r\n* Credit Card Fraud detection end-to-end with XGBoost by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2738\r\n* rolled back the job api custom_file copy destination change by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2848\r\n* Remove basename in ScriptRunner by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2849\r\n* Update site code blocks and links by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2847\r\n* Gradient inversion fix dtype error by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2852\r\n* Convert step-by-step stats examples to use new Job API by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2842\r\n* Convert tree-based Fed XGBoost with Job API by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2843\r\n* Convert Scikit-Learn examples (SVM, Kmeans, Linear) to use Job API by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2845\r\n* Added Debug in ReliableMessage and Ignore XGB errors after shutdown by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2851\r\n* Update arg name for MLflowReceiver by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2850\r\n* Update step by step examples to use Job API by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2841\r\n* Update client api to use same task as CSE and update step-by-step CSE by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2844\r\n* Autofedrl fix for updated locator behavior by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2856\r\n* Convert CCWF examples to use Job API by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2846\r\n* Fixed the SubprocessLauncher missing app_custom_folder in PYTHONPATH by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2857\r\n* Add FLModel parameter checks by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2859\r\n* Clarify default persistor_id by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2861\r\n* Added check for duplicate RM request by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2858\r\n* Add support of just doing metrics streaming with client api by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2763\r\n* Add flower metrics streaming example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2764\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc4...2.5.0rc5",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc5",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc5",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc5",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/172254423",
                "release_id": 172254423,
                "date_created": "2024-08-28T00:41:44Z",
                "date_published": "2024-08-28T00:48:53Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/171400155",
                "tag": "2.5.0rc4",
                "name": "2.5.0rc4: Feature enhancements",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Update xgboost example and ci by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2794\r\n* [2.5] Update flower CLI by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2792\r\n* Fix FedBN api key issue by replacing comet by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2798\r\n* more app_opt scan example changes by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2797\r\n* Add first version of release notes by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2800\r\n* FIX hard-coded sp_end_point in POC by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2795\r\n* Add hello examples with new APIs by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2785\r\n* Update autofedrl example by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2801\r\n* Refactor XGBDataLoader by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2804\r\n* Fix HE docstring typo by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2802\r\n* re-arrange getting started examples by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2805\r\n* Update secure xgboost examples by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2803\r\n* XGBoost user interface change and XGBoost version check by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2808\r\n* Add lock to reliable message by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2811\r\n* Fixed 2 PTFileModelLocator config errors (Research) by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2807\r\n* Update xgboost example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2813\r\n* Refactor Job API by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2799\r\n* Add CUDA plugin code by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2814\r\n* Fix Jenkins CI by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2812\r\n* Remove the module class scan  by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2790\r\n* Change all name to path by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2817\r\n* Add back hello-numpy-sag and update references by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2816\r\n* Revert \"Remove the module class scan \" by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2819\r\n* Fix config typos by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2818\r\n* Relax grpcio/protobuf versions by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2822\r\n* ScriptExecutor improvements by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2820\r\n* Fix Job API Examples by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2823\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc3...2.5.0rc4",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc4",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc4",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc4",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/171400155",
                "release_id": 171400155,
                "date_created": "2024-08-22T04:50:09Z",
                "date_published": "2024-08-22T05:03:42Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/171371884",
                "tag": "2.4.2",
                "name": "2.4.2: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Remove serialization of pfx (#2721) by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2746\r\n* Fix missing link by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2747\r\n* fix race condition handling if pipe handler (#2729) by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2809\r\n* [2.4] Ported newest ReliableMessage to 2.4 by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2815\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.1...2.4.2",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.2",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.2",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.2",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/171371884",
                "release_id": 171371884,
                "date_created": "2024-08-21T20:34:20Z",
                "date_published": "2024-08-21T23:41:50Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/170080946",
                "tag": "2.5.0rc3",
                "name": "2.5.0rc3: Secure XGBoost",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Moved the simulator server logger init earlier by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2753\r\n* Cherry pick XGB docs from #2671 by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2759\r\n* Getting started readmes by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2757\r\n* fix the CrossSiteEvalClientController in swarm_script_executor_cifar10 by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2762\r\n* Cherry pick fixes from 2.4 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2768\r\n* Cherry pick launcher log fix by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2766\r\n* Update xgboost user guide by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2750\r\n* Honor optional flag at streaming level by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2771\r\n* Removed the app_opt scan by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2758\r\n* Add job API to support additional external dir in the custom dir by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2748\r\n* Moved the hello-pt example initialization to START_RUN by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2735\r\n* Fix config file name in doc by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2772\r\n* Fix loading cli history in admin console by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2777\r\n* Port 2.4 xgb changes by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2773\r\n* implementation of Scaffold and FedProx for TensorFlow by @falibabaei in https://github.com/NVIDIA/NVFlare/pull/2727\r\n* name to path changes in configuration by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2781\r\n* Added error handling for XGB_CONFIGURED event by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2780\r\n* Fix JobAPI Persistor handling by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2775\r\n* Add FedJobAPI documentation by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2718\r\n* fixed the cross validation wrong config for swarm_script_executor_cifar10 by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2778\r\n* Fixed the mgpu simulator workspace change error by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2770\r\n* Update Secure XGBoost example w.r.t. XGBoost's code changes by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2686\r\n* Improve the kill children processes by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2789\r\n* Add back metric callback and fix examples based on new xgboost version by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2787\r\n* [2.5] Improve app_command  by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2782\r\n* Add docstring to reliable message by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2788\r\n* Pre-trained Model and training_mode changes by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2793\r\n\r\n## New Contributors\r\n* @falibabaei made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2727\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc2...2.5.0rc3",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc3",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc3",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc3",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/170080946",
                "release_id": 170080946,
                "date_created": "2024-08-14T00:36:04Z",
                "date_published": "2024-08-14T01:36:16Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/168518053",
                "tag": "2.5.0rc2",
                "name": "2.5.0rc2: Secure XGBoost and other feature enhancements",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Add min_responses to send_model_and_wait() by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2675\r\n* Resolve CVE with updated dependency by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2681\r\n* Add site enhancements by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2682\r\n* Enhance ModelController arguments by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2683\r\n* FOBS Enhancement by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2580\r\n* [2.5] Support app commands through admin by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2647\r\n* Updates for num_clients by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2685\r\n* FedAvg Early Stopping with ModelController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2648\r\n* fixed TaskScriptRunner which may locate the wrong script by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2626\r\n* Fixed the sys.path for fedavg_model_learner_xsite_val_cifar10 example by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2614\r\n* Update getting started notebooks for 2.5.0rc by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2690\r\n* Fix Fed Stats due to recent changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2691\r\n* Support server side custom scripts in job API by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2695\r\n* update notebooks due to the simulator changes by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2696\r\n* Fix DAM Unit Test by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2692\r\n* Update version number MONAI and the bundle version by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2702\r\n* Add Hierarchical Stats example by @apatole in https://github.com/NVIDIA/NVFlare/pull/2694\r\n* Update Hello Client Controlled Workflow(CCWF) README.md by @tonywjs in https://github.com/NVIDIA/NVFlare/pull/2709\r\n* Update stats READMEs by @apatole in https://github.com/NVIDIA/NVFlare/pull/2711\r\n* Fix torch ddp by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2706\r\n* Cherry pick RM fix from #2667 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2700\r\n* Update ClientAlgo by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2705\r\n* Fix ClientAPILauncherExecutor import path to remove torch dependency. by @zhijinl in https://github.com/NVIDIA/NVFlare/pull/2713\r\n* Fix cyclic job creation example by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2627\r\n* Use ReliableMessage from 2.4 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2717\r\n* Enhance CLI command config by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2716\r\n* Add CrossSiteEval with ModelController by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2699\r\n* Enhance job auth setup script by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2715\r\n* Merging XGBoost changes from 2.4 by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2712\r\n* [2.5] Fix pipe handler race condition handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2728\r\n* Remove serialization of pfx by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2721\r\n* Update readme link to website by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2734\r\n* Fix BcastTaskManager min_responses by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2733\r\n* Fix cell encrypt by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2732\r\n* keep the local resources for simulator by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2730\r\n* Support same app for all sites in Job API by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2714\r\n* Fix overseer test timing by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2743\r\n* Add ModelController documentation by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2707\r\n* [2.5] TIE (Technology for Integrating Everything) and Flower Inegration by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2523\r\n* Add MetricsSender docstring by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2745\r\n* Update MONAI example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2724\r\n* [2.5] Fix clone job to keep original job by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2755\r\n* Bump up the version of monai-nvflare package to 0.2.9 by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2749\r\n* Update getting_started.rst by @hwpang in https://github.com/NVIDIA/NVFlare/pull/2737\r\n* Add CIFAR 10 examples for Tensorflow-based FedAvg & FedOpt by @zhijinl in https://github.com/NVIDIA/NVFlare/pull/2704\r\n* Minor fix for instructions in setup_poc.ipynb for main by @hwpang in https://github.com/NVIDIA/NVFlare/pull/2752\r\n* Added id to the jobAPI swarm_script_executor_cifar10 component deploy by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2678\r\n* XGBoost plugin with new API by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2725\r\n\r\n## New Contributors\r\n* @tonywjs made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2709\r\n* @hwpang made their first contribution in https://github.com/NVIDIA/NVFlare/pull/2737\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.5.0rc1...2.5.0rc2",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.5.0rc2",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.5.0rc2",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.5.0rc2",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/168518053",
                "release_id": 168518053,
                "date_created": "2024-08-02T21:03:01Z",
                "date_published": "2024-08-02T23:04:42Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/162347287",
                "tag": "2.4.2rc3",
                "name": "2.4.2rc3: Improvements and bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] Fix missing replying arg by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2620\r\n* Added engine.add_component() function -- 2.4 branch by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2622\r\n* [2.4] Support log file rotation in admin commands by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2625\r\n* Added Simulator HE support --- [2.4] by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2631\r\n* [2.4] XGBoost User Experience Improvement by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2630\r\n* [2.4] Add cuda processor so and license by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2633\r\n* [2.4] Support IPCL version from pypi by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2641\r\n* Update MANIFEST.in file to include nvflare/libs/*.so files into the by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2646\r\n* [2.4] Add feedback when users launch dashboard to cloud with editable version by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2654\r\n* [2.4] Fixed a LocalProcessor bug and a typo by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2656\r\n* [2.4] Update libproc cuda by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2660\r\n* [2.4] Cleaning up XGBoost Log by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2659\r\n* [2.4] Fix xgboost model overwrite by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2663\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.1...2.4.2rc3",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.2rc3",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.2rc3",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.2rc3",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/162347287",
                "release_id": 162347287,
                "date_created": "2024-06-25T04:20:40Z",
                "date_published": "2024-06-25T16:42:21Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/155982743",
                "tag": "2.4.1",
                "name": "2.4.1: Numerous improvements and bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] tf dataset setup and teardown by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2365\r\n* [2.4] Update outdated links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2367\r\n* [2.4] Fix nemo example link by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2374\r\n* [2.4] Fix NEMO links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2384\r\n* [2.4] Update license headers by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2386\r\n* [2.4] Add xgboost histogram_based_v2 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2382\r\n* [2.4] Clean up file pipe by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2391\r\n* [2.4] Added ReliableMessage by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2394\r\n* [2.4] Add xgboost example, unit tests, integration tests by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2392\r\n* [2.4] Add xgboost metrics tracking cb by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2381\r\n* Exclude non-training clients from cse by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2400\r\n* [2.4] Integrated ReliableMessage with XGBoost by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2399\r\n* [2.4] Fixed the FOBS doc to add support for DatumManager by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2408\r\n* [2.4] Added AGRPCS, NGRPCS as secure scheme by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2409\r\n* [2.4] Enable StreamCell for all application channels by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2406\r\n* [2.4] Update rr_order to cyclic_order by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2411\r\n* [2.4] Fix mlflow tag links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2417\r\n* [2.4] Add client api send check by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2418\r\n* [2.4] Lightning API Patch just once by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2416\r\n* [2.4] Fix LauncherExecutor handle_event by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2414\r\n* [2.4] Add custom order and early termination to cyclic controller by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2422\r\n* [2.4] Upgrade dependencies versions by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2426\r\n* [2.4] Fixed the wrong workspace object in the simulator worker by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2430\r\n* [2.4] always use default grpc opts by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2428\r\n* [2.4] Fix check resource auth by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2439\r\n* [2.4] Upgrade protobuf version by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2436\r\n* [2.4] Improve xgb runner status check by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2434\r\n* [2.4] Check wandb login by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2444\r\n* [2.4] Update fed xgboost docstrings/readme based on stable version by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2446\r\n* [2.4] metric relay starts pipe handler heartbeat send/check after task is pulled by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2415\r\n* [2.4] task_exchanger starts pipe handler heartbeat send/check after task is pull  by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2442\r\n* [2.4] Use full path for DhPSITaskHandler by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2437\r\n* [2.4] Update finance example using job templates by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2448\r\n* [2.4] Update setup.py of monai integration folder by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2449\r\n* [2.4] Improve cell pipe timeout handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2441\r\n* [2.4] Update github actions by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2450\r\n* [2.4] Clarify download_job workspace delay by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2453\r\n* [2.4] Improve reliable message by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2452\r\n* [2.4] Support client custom code in simulator by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2447\r\n* [2.4] Enhance launcher executor by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2433\r\n* [2.4] Remove cancel_futures args by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2457\r\n* [2.4] Fix sub_worker_process shutdown by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2458\r\n* [2.4] Fire and forget for pipe handler control messages by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2413\r\n* [2.4] Add garbage collect at ends of round-based workflows by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2464\r\n* [2.4] cherry-pick the fix_submit_job_auth_failure to 2.4 branch by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2466\r\n* [2.4] Add warning when the same admin in project.yml has different role by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2469\r\n* [2.4] Fix premerge by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2467\r\n* [2.4] Use unbuffered python launch by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2472\r\n* Fix wait-for-reply by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2478\r\n* [2.4] Set GRPC_ENABLE_FORK_SUPPORT to False by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2474\r\n* [2.4] Add reliable xgboost documentation by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2471\r\n* [2.4] Update doc link for xgboost histogram based by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2482\r\n* [2.4] Added more logging for the job status changing by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2481\r\n* Fix issues on hello-world TF2 notebook by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2493\r\n* [2.4] Fix pipe handler timeout in task exchanger and launcher executor by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2495\r\n* [2.4] Client API doc updates by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2498\r\n* add missing images by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2500\r\n* [2.4] Fix metric relay pipe handler timeout by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2496\r\n* [2.4] Fix tf integration test by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2504\r\n* [2.4] Add client api integration tests  by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2503\r\n* [2.4] Rely on launcher check_run_status to pause/resume heartbeat by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2502\r\n* [2.4] Simulator end run for all clients by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2515\r\n* [2.4] Add missing client api test jobs by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2531\r\n* [2.4] Update monai readme [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2551\r\n* [2.4] Add info for custom data/class [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2553\r\n* [2.4] Update ClientAlgo by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2566\r\n* [2.4] Fix get_target_names by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2564\r\n* [2.4] Backport AWS VPC/Subnet enhancement from main branch by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2568\r\n* [2.4] Upgrade gunicorn by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2525\r\n* [2.4] Fix global steps in MLflow example by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2571\r\n* [2.4] Bump up monai nvflare by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2572\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.0...2.4.1",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.1",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.1",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.1",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/155982743",
                "release_id": 155982743,
                "date_created": "2024-05-09T18:23:37Z",
                "date_published": "2024-05-16T00:20:13Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/154982249",
                "tag": "2.4.1rc8",
                "name": "2.4.1rc8: A few bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] Add missing client api test jobs by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2531\r\n* [2.4] Update monai readme [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2551\r\n* [2.4] Add info for custom data/class [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2553\r\n* [2.4] Update ClientAlgo by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2566\r\n* [2.4] Fix get_target_names by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2564\r\n* [2.4] Backport AWS VPC/Subnet enhancement from main branch by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2568\r\n* [2.4] Upgrade gunicorn by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2525\r\n* [2.4] Fix global steps in MLflow example by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2571\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.1rc7...2.4.1rc8",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.1rc8",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.1rc8",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.1rc8",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/154982249",
                "release_id": 154982249,
                "date_created": "2024-05-09T16:22:54Z",
                "date_published": "2024-05-09T17:20:53Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/151482371",
                "tag": "2.3.12",
                "name": "2.3.12: Minor bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.3] Fix 2.3 unit tests by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2507\r\n* [2.3] Remove unneeded tracebacks by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2509\r\n* [2.3] Ignore sysconfigdata test error by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2511\r\n* [2.3] Improve dead client handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2501\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.3.11...2.3.12",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.3.12",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.3.12",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.3.12",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/151482371",
                "release_id": 151482371,
                "date_created": "2024-04-17T02:12:59Z",
                "date_published": "2024-04-17T04:32:27Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/150676355",
                "tag": "2.3.11",
                "name": "2.3.11: Bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Add numpy decomposers to fix 2.3 CI by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2272\r\n* Set compatible 2.3 version, tf dataset setup and teardown by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2364\r\n* [2.3] fix client death handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2484\r\n* [2.3] Fix CyclicController bug by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2490\r\n* [2.3] Changed exception log to error level for GRPC drivers by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2491\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.3.10...2.3.11",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.3.11",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.3.11",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.3.11",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/150676355",
                "release_id": 150676355,
                "date_created": "2024-04-11T02:00:16Z",
                "date_published": "2024-04-11T02:08:18Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/150670446",
                "tag": "2.4.1rc5",
                "name": "2.4.1rc5: Various fixes and improvements",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] Use unbuffered python launch by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2472\r\n* Fix wait-for-reply by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2478\r\n* [2.4] Set GRPC_ENABLE_FORK_SUPPORT to False by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2474\r\n* [2.4] Add reliable xgboost documentation by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2471\r\n* [2.4] Update doc link for xgboost histogram based by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2482\r\n* [2.4] Added more logging for the job status changing by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2481\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.1rc4...2.4.1rc5",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.1rc5",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.1rc5",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.1rc5",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/150670446",
                "release_id": 150670446,
                "date_created": "2024-04-10T22:52:04Z",
                "date_published": "2024-04-11T00:38:06Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/149836014",
                "tag": "2.4.1rc4",
                "name": "2.4.1rc4: Various bug fixes and feature improvements",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] Upgrade dependencies versions by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2426\r\n* [2.4] Fixed the wrong workspace object in the simulator worker by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2430\r\n* [2.4] always use default grpc opts by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2428\r\n* [2.4] Fix check resource auth by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2439\r\n* [2.4] Upgrade protobuf version by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2436\r\n* [2.4] Improve xgb runner status check by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2434\r\n* [2.4] Check wandb login by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2444\r\n* [2.4] Update fed xgboost docstrings/readme based on stable version by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2446\r\n* [2.4] metric relay starts pipe handler heartbeat send/check after task is pulled by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2415\r\n* [2.4] task_exchanger starts pipe handler heartbeat send/check after task is pull  by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2442\r\n* [2.4] Use full path for DhPSITaskHandler by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2437\r\n* [2.4] Update finance example using job templates by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2448\r\n* [2.4] Update setup.py of monai integration folder by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2449\r\n* [2.4] Improve cell pipe timeout handling by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2441\r\n* [2.4] Update github actions by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2450\r\n* [2.4] Clarify download_job workspace delay by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2453\r\n* [2.4] Improve reliable message by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2452\r\n* [2.4] Support client custom code in simulator by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2447\r\n* [2.4] Enhance launcher executor by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2433\r\n* [2.4] Remove cancel_futures args by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2457\r\n* [2.4] Fix sub_worker_process shutdown by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2458\r\n* [2.4] Fire and forget for pipe handler control messages by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2413\r\n* [2.4] Add garbage collect at ends of round-based workflows by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2464\r\n* [2.4] cherry-pick the fix_submit_job_auth_failure to 2.4 branch by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2466\r\n* [2.4] Add warning when the same admin in project.yml has different role by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2469\r\n* [2.4] Fix premerge by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2467\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.1rc3...2.4.1rc4",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.1rc4",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.1rc4",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.1rc4",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/149836014",
                "release_id": 149836014,
                "date_created": "2024-04-04T17:13:39Z",
                "date_published": "2024-04-04T19:28:12Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/147340488",
                "tag": "2.4.1rc3",
                "name": "2.4.1rc3: Bug fixes and feature improvements",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] Enable StreamCell for all application channels by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2406\r\n* [2.4] Update rr_order to cyclic_order by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2411\r\n* [2.4] Fix mlflow tag links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2417\r\n* [2.4] Add client api send check by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2418\r\n* [2.4] Lightning API Patch just once by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2416\r\n* [2.4] Fix LauncherExecutor handle_event by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2414\r\n* [2.4] Add custom order and early termination to cyclic controller by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2422\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.1rc2...2.4.1rc3",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.1rc3",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.1rc3",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.1rc3",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/147340488",
                "release_id": 147340488,
                "date_created": "2024-03-19T20:39:13Z",
                "date_published": "2024-03-20T01:28:07Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/147119267",
                "tag": "2.4.1rc2",
                "name": "2.4.1rc2: Bug fixes and feature improvements",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Exclude non-training clients from cse by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2400\r\n* [2.4] Integrated ReliableMessage with XGBoost by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2399\r\n* [2.4] Fixed the FOBS doc to add support for DatumManager by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2408\r\n* [2.4] Added AGRPCS, NGRPCS as secure scheme by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2409\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.1rc1...2.4.1rc2",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.1rc2",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.1rc2",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.1rc2",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/147119267",
                "release_id": 147119267,
                "date_created": "2024-03-18T19:31:10Z",
                "date_published": "2024-03-18T20:45:46Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/145943579",
                "tag": "2.4.1rc1",
                "name": "2.4.1rc1: Add more XGBoost features",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] tf dataset setup and teardown by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2365\r\n* [2.4] Update outdated links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2367\r\n* [2.4] Fix nemo example link by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2374\r\n* [2.4] Fix NEMO links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2384\r\n* [2.4] Update license headers by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2386\r\n* [2.4] Add xgboost histogram_based_v2 by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2382\r\n* [2.4] Clean up file pipe by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2391\r\n* [2.4] Added ReliableMessage by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2394\r\n* [2.4] Add xgboost example, unit tests, integration tests by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2392\r\n* [2.4] Add xgboost metrics tracking cb by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2381\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.0...2.4.1rc1",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.1rc1",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.1rc1",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.1rc1",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/145943579",
                "release_id": 145943579,
                "date_created": "2024-03-11T16:50:06Z",
                "date_published": "2024-03-11T23:31:05Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/140720921",
                "tag": "2.4.0",
                "name": "2.4.0: Release",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's New\r\n\r\nPlease check the [What's New](https://nvflare.readthedocs.io/en/2.4.0/whats_new.html) of document page.",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.0",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.0",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.0",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/140720921",
                "release_id": 140720921,
                "date_created": "2024-02-08T17:34:36Z",
                "date_published": "2024-02-09T01:02:31Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/139727295",
                "tag": "2.4.0rc9",
                "name": "2.4.0rc9: Improvements and fixes addressing some issues",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] Move workspace setup inside constructor by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2308\r\n* [2.4] Update cli string 24 [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2309\r\n* [2.4] Fix ParamsConverter signature by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2310\r\n* Bump up the versions and improve dependency syntax by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2315\r\n* [2.4] Improve monai integration tracking example by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2319\r\n* [2.4] Exclude hidden Json file when parsing config  by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2324\r\n* [2.4] Update all examples/research/integration requirements by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2329\r\n* [2.4] Removed the no need client custom path by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2321\r\n* [2.4] update gnn readme by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2334\r\n* [2.4] Fix CIFAR-10 global model selection by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2333\r\n* [2.4] Enhance the handling of RC of task returned from clients by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2337\r\n* [2.4] Address final VDR feedbacks by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2331\r\n* [2.4] Cifar10 fix plot by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2345\r\n* Added a few workarounds for HTTP driver's latency issues for 2.4 by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2344\r\n* [2.4] Address VDR report by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2336\r\n* [2.4] Add notes about running TF with GPUs [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2347\r\n* [2.4] Fix tb receiver by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2341\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.0rc8...2.4.0rc9",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.0rc9",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.0rc9",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.0rc9",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/139727295",
                "release_id": 139727295,
                "date_created": "2024-02-02T20:15:42Z",
                "date_published": "2024-02-02T20:29:12Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/138232852",
                "tag": "2.4.0rc8",
                "name": "2.4.0rc8: Fixes and improvements",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* [2.4] Fix Auto login \"communication error\" by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2280\r\n* [2.4] updates examples, add version matching note by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2281\r\n* [2.4] Fixed the client_executor improper lock use. by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2288\r\n* [2.4] vdr issues [skip ci] by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2286\r\n* [2.4] Add notebook to GNN examples by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2290\r\n* [2.4] Fix FLModelUtil by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2292\r\n* [2.4] Nemo examples fix by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2293\r\n* [2.4] Check invalid input directory in nvflare config by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2294\r\n* [2.4] Fix nemo peft notebook by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2296\r\n* [2.4] Update nemo instructions by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2298\r\n* [2.4] Update documentation and docstrings by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2300\r\n* [2.4] Update execution api type documentation  by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2304\r\n* [2.4] address vdr feedback by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2299\r\n* [2.4] Added debug headers for all message route in CoreCell for 2.4 Branch by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2302\r\n* [2.4] Rename to execution api type, update job command output by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2307\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.0rc7...2.4.0rc8",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.0rc8",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.0rc8",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.0rc8",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/138232852",
                "release_id": 138232852,
                "date_created": "2024-01-23T21:06:05Z",
                "date_published": "2024-01-23T21:10:28Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/136263039",
                "tag": "2.4.0rc7",
                "name": "2.4.0rc7: Improvements and bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Fix the missing separators in nvflare cli by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2246\r\n* Reduce CellPipe heartbeat error log by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2245\r\n* Enhance the cloud script on the SSH inbound rule by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2249\r\n* Fix p2p encrypt/decrypt by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2251\r\n* Fix integration tests by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2254\r\n* Fix POC HE mode, add HE step-by-step example by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2255\r\n* Enhanced the client job status by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2247\r\n* add Clara FL white paper [skip ci] by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2257\r\n* added back the API auto login after server restart by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2256\r\n* Fix CCWF with Client API, ParamsConverter supported_tasks by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2260\r\n* Changed the TASK_UNKNOWN to log debug by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2262\r\n* Fix simulator rc by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2263\r\n* add notes for ``tree``` commands by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2264\r\n* Add global round info for logging metrics global step by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2258\r\n* Address few misc. bugs by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2252\r\n* Fix launch_once=false connection error by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2269\r\n* Fixed a case the admin has no auth_tokens for keycloak integration by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2268\r\n* added handle for the empty return code file by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2261\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.0rc6...2.4.0rc7",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.0rc7",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.0rc7",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.0rc7",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/136263039",
                "release_id": 136263039,
                "date_created": "2024-01-09T01:19:42Z",
                "date_published": "2024-01-09T02:03:14Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/136253811",
                "tag": "2.3.10",
                "name": "2.3.10 Improvements and fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Fix werkzeug in 2.3 branch by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2202\r\n* support av ipc agent wo grpc by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2219\r\n* Support app-defined components by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2244\r\n* [2.3 Branch] Add setup scripts for flare light version  by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2225\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.3.9...2.3.10",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.3.10",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.3.10",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.3.10",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/136253811",
                "release_id": 136253811,
                "date_created": "2024-01-06T02:27:26Z",
                "date_published": "2024-01-08T23:15:11Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/134712383",
                "tag": "2.4.0rc6",
                "name": "2.4.0rc6: improvements, more examples, documentations and bug fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Fix RestoreState callback by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2115\r\n* Update gnn example by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2114\r\n* Update swarm learning example by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2064\r\n* Merge duplicate sag_pt_deploy_map/sag_pt_ddp job templates [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2116\r\n* Update the document on large model experiments. by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2118\r\n* Fixes readthedocs config and link in docs [skip ci] by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/2119\r\n* NeMo peft example by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2094\r\n* Changed default GPRC driver to sync version by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2117\r\n* Make client api pipe configurable by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2103\r\n* Enhance TF Client API examples by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2056\r\n* Fix docs build by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2123\r\n* Print logs and write to logfile at the same time by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2120\r\n* Job CLI Upgrade to support path notation by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2128\r\n* Update configurations of LauncherExecutor by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2126\r\n* Remove receive_global_model by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2129\r\n* CLI Job upgrade, convert string to number if possible by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2130\r\n* Update gnn template generation part  by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2131\r\n* Fix gnn job templates link [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2135\r\n* Updates for Client API examples, add cse and swarm by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2134\r\n* Update NeMo PEFT example inference by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2124\r\n* Fix doc format and docstring format [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2139\r\n* Add discussion Q&A template [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2136\r\n* enhance the rc handling for MPM. by @yhwen in https://github.com/NVIDIA/NVFlare/pull/1985\r\n* Update client api doc and docstrings by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2137\r\n* Add NumPy + Client API example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2031\r\n* Remove mlflow.utils.time_utils dependency. by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2146\r\n* Job Cli Upgrade: support custom configurations by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2143\r\n* Job CLI Upgrade: including configuration key removal  by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2147\r\n* Add Step by step fed stats tabular example by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2151\r\n* Update q-a.yml question rendering by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2154\r\n* Support sys vars for job config and support parameterized template in job config by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2145\r\n* Fix simulator by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2156\r\n* Add release notes by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2144\r\n* Added serialized size in the message header by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2150\r\n* Add TaskExchanger and FlareAgent by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2161\r\n* Support graceful end_run processing by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2158\r\n* Add Sklearn-linear step-to-step example  by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2163\r\n* Fix getting_started doc by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2169\r\n* Add variable doc build version for github links by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2162\r\n* Add experimental decorator and test by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2171\r\n* Remove gen2 restriction from ad-hoc policy by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2170\r\n* Fix Swarm learning README [skip ci] by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2172\r\n* Fix job cli issues by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2141\r\n* support getTask and submitResult timeout in job config by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2173\r\n* Fixed the SystemVarName.SECURE_MODE error in simulator by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2174\r\n* Experimental decorator for functions and classes by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2185\r\n* Add example for HuggingFace SFT/PEFT by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2092\r\n* Add step-by-step tutorial for tabular data on svm, kmeans, and xgboost  by @ZiyueXu77 in https://github.com/NVIDIA/NVFlare/pull/2168\r\n* Refactor LauncherExecutor and client api by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2164\r\n* Update job templates and README by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2187\r\n* Setup poc github rendering fix by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2188\r\n* Add migration guide, add/update various sections by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2160\r\n* Fix meta file processing in storage and improve schedule job retrieval by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2186\r\n* update pub list for 2023 by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2178\r\n* Fixed the missing simulator END_RUN event by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2182\r\n* Enable run cross-validation without training workflow and examples by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2035\r\n* Add overview, comm config, 3rd party integration docs [skip ci] by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2194\r\n* Add metrics exchange mechanism by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2189\r\n* change Fed Stats output format by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2199\r\n* Simple FedAvg workflow by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2157\r\n* Latest Werkzeug is not compatible with Flask by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2201\r\n* Update links, example section, various cleanup [skip ci] by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2207\r\n* Added PT Tensor decomposer registration on server side by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2192\r\n* KeyCloak authentication integration example by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2205\r\n* Disable link check for example links by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2216\r\n* POC bug fix by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2212\r\n* Lightning api: add strict option for load_state_dict by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2211\r\n* Check if fl model to be sent is empty by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2217\r\n* save_config() function: fix to_hocon() issue by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2220\r\n* Update xgboost example requirements [skip ci] by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2221\r\n* Fixed a few issues with streaming error logging by @nvidianz in https://github.com/NVIDIA/NVFlare/pull/2213\r\n* fixed the custom_authentication example readme by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2218\r\n* Add sag mlflow step by step example by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2208\r\n* MONAI integration and metrics refactoring by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2223\r\n* Don't run init() twice by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2224\r\n* Fix LauncherExecutor racing issue by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2209\r\n* misc doc enhancements, update monai metrics example readme by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2226\r\n* Fix stats global key bug by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2229\r\n* examples reformatting by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2228\r\n* Fix hello examples README file and prepare data section by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2231\r\n* Fix config read in lightning api by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2232\r\n* POC Tutorial add HE support documentation in the notebook by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2230\r\n* Add fl_ctx in convert method of ParamsConverter by @YuanTingHsieh in https://github.com/NVIDIA/NVFlare/pull/2233\r\n* Display messages to users when cloud scripts unable to find public ip\u2026 by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2234\r\n* Fix excepthook error by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2236\r\n* Fix typo in model locator by @holgerroth in https://github.com/NVIDIA/NVFlare/pull/2239\r\n* Update monai nvflare setup.py file by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2237\r\n* az vm run-command invoke does not take multi-line scripts by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2214\r\n* Fixed a race condition issue during the server start by @yhwen in https://github.com/NVIDIA/NVFlare/pull/2235\r\n* handle launcher failure condition in launch monitor by @chesterxgchen in https://github.com/NVIDIA/NVFlare/pull/2240\r\n* Add he support to pt params converter by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2238\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.4.0rc5...2.4.0rc6",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.4.0rc6",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.4.0rc6",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.4.0rc6",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/134712383",
                "release_id": 134712383,
                "date_created": "2023-12-21T00:46:48Z",
                "date_published": "2023-12-21T01:45:37Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/NVIDIA/NVFlare/releases/133352993",
                "tag": "2.2.6",
                "name": "2.2.6: Update and minor fixes",
                "author": {
                    "name": "IsaacYangSLA",
                    "type": "User"
                },
                "description": "## What's Changed\r\n* Patch docs requirements to fix issue with jquery not working by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/1511\r\n* Fix docs links for 2.2 by @nvkevlu in https://github.com/NVIDIA/NVFlare/pull/1735\r\n* Update Flask for Werkzeug by @SYangster in https://github.com/NVIDIA/NVFlare/pull/2198\r\n* Fix meta file processing in storage and improve schedule job retrieval by @yanchengnv in https://github.com/NVIDIA/NVFlare/pull/2196\r\n* Fix the version of Werkzeug to 2.2.2 by @IsaacYangSLA in https://github.com/NVIDIA/NVFlare/pull/2203\r\n\r\n\r\n**Full Changelog**: https://github.com/NVIDIA/NVFlare/compare/2.2.5...2.2.6",
                "tarball_url": "https://api.github.com/repos/NVIDIA/NVFlare/tarball/2.2.6",
                "zipball_url": "https://api.github.com/repos/NVIDIA/NVFlare/zipball/2.2.6",
                "html_url": "https://github.com/NVIDIA/NVFlare/releases/tag/2.2.6",
                "url": "https://api.github.com/repos/NVIDIA/NVFlare/releases/133352993",
                "release_id": 133352993,
                "date_created": "2023-12-08T20:22:11Z",
                "date_published": "2023-12-11T06:04:08Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Contributor Covenant Code of Conduct\n\n## Overview\n\nDefine the code of conduct followed and enforced by the NVIDIA FLARE project.\n\n### Intended audience\n\nCOMMUNITY | DEVELOPERS | PROJECT LEADS\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment include:\n\n-   Using welcoming and inclusive language\n-   Being respectful of differing viewpoints and experiences\n-   Gracefully accepting constructive criticism\n-   Focusing on what is best for the community\n-   Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n-   The use of sexualized language or imagery and unwelcome sexual attention or advances\n-   Trolling, insulting/derogatory comments, and personal or political attacks\n-   Public or private harassment\n-   Publishing others' private information, such as a physical or electronic address, without explicit permission\n-   Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at  [nvflare-conduct@nvidia.com](mailto:nvflare-conduct@nvidia.com)  All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct was taken from the [NVIDIA RAPIDS](https://docs.rapids.ai/resources/conduct/) project, which was adapted from the  [Contributor Covenant](https://www.contributor-covenant.org/), version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\nFor answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/CODE_OF_CONDUCT.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "# Metadata for citation of this software according to the CFF format (https://citation-file-format.github.io/)\n#\n---\ntitle: \"Nvidia FLARE\"\nabstract: \"Nvidia FLARE is an SDK designed to enable federated learning amongst different parties using\ntheir local secure protected data for client-side training, at the same time it includes capabilities to\ncoordinate and exchange progressing of results across all sites to achieve better global model while\npreserving data privacy.\"\nauthors:\n  - name: \"Nvidia Corporation\"\ndate-released: 2022-06-29\nversion: \"2.1.2\"\nidentifiers:\n  - description: \"This DOI represents all versions of Nvidia FLARE, and will always resolve to the latest one.\"\n    type: doi\n    value: \"10.5281/zenodo.6780567\"\nlicense: \"Apache-2.0\"\ndoi: 10.5281/zenodo.6780567\nrepository-code: \"https://github.com/NVIDIA/nvflare\"\nurl: \"https://nvflare.readthedocs.io\"\ncff-version: \"1.2.0\"\nmessage: \"If you use this software, please cite it using these metadata.\"\npreferred-citation:\n  type: article\n  authors:\n  - family-names: Roth\n    given-names: Holger R.\n  - family-names: Cheng\n    given-names:  Yan\n  - family-names: Wen\n    given-names:  Yuhong\n  - family-names: Yang\n    given-names:  Isaac\n  - family-names: Xu\n    given-names:  Ziyue\n  - family-names: Hsieh\n    given-names:  Yuan-Ting\n  - family-names: Kersten\n    given-names:  Kristopher\n  - family-names: Harouni\n    given-names:  Ahmed\n  - family-names: Zhao\n    given-names:  Can\n  - family-names: Lu\n    given-names:  Kevin\n  - family-names: Zhang\n    given-names:  Zhihong\n  - family-names: Li\n    given-names:  Wenqi\n  - family-names: Myronenko\n    given-names:  Andriy\n  - family-names: Yang\n    given-names:  Dong\n  - family-names: Yang\n    given-names:  Sean\n  - family-names: Rieke\n    given-names:  Nicola\n  - family-names: Quraini\n    given-names:  Abood\n  - family-names: Chen\n    given-names:  Chester\n  - family-names: Xu\n    given-names:  Daguang\n  - family-names: Ma\n    given-names:  Nic\n  - family-names: Dogra\n    given-names:  Prerna\n  - family-names: Flores\n    given-names:  Mona\n  - family-names: Feng\n    given-names:  Andrew\n  doi: \"https://doi.org/10.48550/arXiv.2210.13291\"\n  journal: \"IEEE Data Eng. Bull., Vol. 46, No. 1\"\n  month: 3\n  title: \"NVIDIA FLARE: Federated Learning from Simulation to Real-World\"\n  year: 2023\n",
                "type": "File_dump",
                "format": "cff"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/CITATION.cff"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/build_docker.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/runtest.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/build_doc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/quantifying-data-leakage/start_fl_sim.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/fed-bn/run_job.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/fed-bn/create_job.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/fed-bn/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/condist-fl/start_fl.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/auto-fed-rl/run_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/auto-fed-rl/set_alpha.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/ci/run_premerge.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/ci/run_integration.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/examples/spleen_ct_segmentation_local/start_fl_secure.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/set_env.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/vertical_xgboost/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-linear/run_experiment_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-linear/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-linear/prepare_job_config.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/prostate_2D/run_experiment_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/result_stat/testing_models_3d.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/result_stat/testing_models_2d.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/data_conversion_I2CVB.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/data_conversion_Promise12.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/merge_all_jsons_3d.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/merge_all_jsons_2d.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/data_conversion_NCI_ISBI.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/data_conversion_PROSTATEx.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/datalists_gen_3d.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/datalists_gen_2d.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/data_conversion_MSD.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/data_preparation/data_convert_3d_to_2d.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/prostate/prostate_3D/run_experiment_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/brats18/start_fl_poc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/brats18/create_poc_workspace.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/brats18/submit_job.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/brats18/result_stat/testing_models_3d_poc.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/brats18/result_stat/testing_models_3d.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/lr-newton-raphson/prepare_heart_disease_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/prepare_job_config.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/tree-based/run_experiment_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/tree-based/run_experiment_centralized.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/tree-based/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/histogram-based/run_experiment_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/histogram-based/run_experiment_centralized.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/histogram-based/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/random_forest/model_validation.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/random_forest/run_experiment_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/random_forest/data_split_gen.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/random_forest/jobs_gen.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-policies/setup.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-policies/stop.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-policies/start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost_secure/prepare_flare_job.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost_secure/run_training_standalone.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost_secure/run_training_flare.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost_secure/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/rag/embedding/train_single_session.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/rag/embedding/train_iterative.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/rag/embedding/eval_all.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/nlp-ner/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/nlp-ner/test_global_model.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/df_stats/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/hierarchical_stats/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/image_stats/download_and_unzip_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/image_stats/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/job-level-authorization/setup.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/swarm_learning/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/bionemo/start_bionemo.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/bionemo/start_jupyter.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-svm/run_experiment_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-svm/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-svm/prepare_job_config.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-kmeans/run_experiment_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-kmeans/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-kmeans/prepare_job_config.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/experiment-tracking/tensorboard/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance/run_testing.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance/run_training.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/psi/user_email_match/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/fl_hub/start_t2b.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/fl_hub/start_t1.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/fl_hub/start_t2a.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/fl_hub/shutdown_systems.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/custom_authentication/setup.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/job_api/tf/run_jobs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-real-world/run_experiments.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-real-world/submit_job.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-real-world/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-real-world/shutdown_fl_run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-real-world/start_fl_secure.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-sim/run_simulator.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-sim/run_experiments.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-sim/set_alpha.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/cifar10/cifar10-sim/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hw_pre_start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hw_notebook.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hw_post_cleanup.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/ml-to-fl/pt/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/ml-to-fl/tf/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-fedavg/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-cyclic/prepare_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/tf/run_jobs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/nvflare/fuel/f3/drivers/grpc/gen_proto.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/nvflare/app_opt/xgboost/histogram_based_v2/proto/gen_proto.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "- [Introduction](#introduction)\n- [The contribution process](#the-contribution-process)\n  * [Preparing pull requests](#preparing-pull-requests)\n    1. [Checking the coding style](#checking-the-coding-style)\n    1. [Unit testing](#unit-testing)\n    1. [Building the documentation](#building-the-documentation)\n    1. [Signing your work](#signing-your-work)\n    1. [Commit signature verification](#commit-signature-verification)\n  * [Submitting pull requests](#submitting-pull-requests)\n- [The code reviewing process (for the maintainers)](#the-code-reviewing-process)\n  * [Reviewing pull requests](#reviewing-pull-requests)\n\n## Introduction\n\n\nWelcome to NVIDIA FLARE! We're excited you're here and want to contribute.\nThis documentation is intended for individuals and institutions interested in contributing to NVIDIA FLARE.\nNVIDIA FLARE is an open-source project and, as such, its success relies on its community of contributors willing to keep improving it.\nYour contribution will be a valued addition to the code base;\nwe simply ask that you read this page and understand our contribution process, whether you are a seasoned open-source contributor or whether you are a first-time contributor.\n\n### Communicate with us\n\nWe are happy to talk with you about your needs for NVIDIA FLARE and your ideas for contributing to the project.\nOne way to do this is to create an issue discussing your thoughts. It might be that a very similar feature is under development or already exists, so an issue is a great starting point.\n\n## The contribution process\n\n_Pull request early_\n\nWe encourage you to create pull requests early.\nIt helps us track the contributions under development, whether they are ready to be merged or not. Change your pull request's title, to begin with `[WIP]` and/or [create a draft pull request](https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests#draft-pull-requests) until it is ready for formal review.\n\n\n### Preparing pull requests\nTo ensure the code quality, NVIDIA FLARE relies on several linting tools:\n([flake8 and its plugins](https://github.com/pycqa/flake8), [black](https://github.com/psf/black) and [isort](https://github.com/timothycrosley/isort))\n\nThis section highlights all the necessary preparation steps required before sending a pull request.\nTo collaborate efficiently, please read through this section and follow them.\n\n* [Checking the coding style](#checking-the-coding-style)\n* [Unit testing](#unit-testing)\n* [Building documentation](#building-the-documentation)\n* [Signing your work](#signing-your-work)\n\n#### Checking the coding style\nWe check code style using flake8 and isort.\nA bash script (`runtest.sh`) is provided to run all tests locally.\nYou can use `runtest.sh -f` to use black to fix your code style automatically as well.\n\nLicense information: all source code files should start with this paragraph:\n```\n# Copyright (c) 2024, NVIDIA CORPORATION.  All rights reserved.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n```\n\n#### Unit testing\nNVIDIA FLARE tests are located under test/.\nThe unit test file names follow the `[module_name]_test.py` pattern.\n\nThe bash script `runtest.sh` will run unit tests also.\n\n#### Building the documentation\nTo build the docs, first make sure you have all requirements\n\n```bash\npython3 -m pip install -U pip\npython3 -m pip install nvflare[dev]\n```\n\nTo build the docs, please run. \n\n```bash\n./build_doc.sh --html\n```\n\nOnce built, you can view the docs in `docs/_build folder`. To clean the docs, please run\n\n```bash\n./build_doc.sh --clean\n```\n\n#### Signing your work\nNVIDIA FLARE enforces the [Developer Certificate of Origin](https://developercertificate.org/) (DCO) on all pull requests.\n\nFor a detailed guide on signing commits, please see [Signing commits](https://docs.github.com/en/authentication/managing-commit-signature-verification/signing-commits) from GitHub.\n\n#### Commit signature verification\nNVIDIA FLARE enforces commit signature verification, a security feature provided by GitHub. Developers are required to setup GPG keys as described in [Commit Signature Verification](https://docs.github.com/en/authentication/managing-commit-signature-verification/about-commit-signature-verification#gpg-commit-signature-verification).\n\nFull text of the DCO:\n```\nDeveloper Certificate of Origin\nVersion 1.1\n\nCopyright (C) 2004, 2006 The Linux Foundation and its contributors.\n1 Letterman Drive\nSuite D4700\nSan Francisco, CA, 94129\n\nEveryone is permitted to copy and distribute verbatim copies of this\nlicense document, but changing it is not allowed.\n\n\nDeveloper's Certificate of Origin 1.1\n\nBy making a contribution to this project, I certify that:\n\n(a) The contribution was created in whole or in part by me and I\n    have the right to submit it under the open source license\n    indicated in the file; or\n\n(b) The contribution is based upon previous work that, to the best\n    of my knowledge, is covered under an appropriate open source\n    license and I have the right under that license to submit that\n    work with modifications, whether created in whole or in part\n    by me, under the same open source license (unless I am\n    permitted to submit under a different license), as indicated\n    in the file; or\n\n(c) The contribution was provided directly to me by some other\n    person who certified (a), (b) or (c) and I have not modified\n    it.\n\n(d) I understand and agree that this project and the contribution\n    are public and that a record of the contribution (including all\n    personal information I submit with it, including my sign-off) is\n    maintained indefinitely and may be redistributed consistent with\n    this project or the open source license(s) involved.\n```\n\n### Submitting pull requests\nAll code changes to the main branch must be done via [pull requests](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/proposing-changes-to-your-work-with-pull-requests).\n1. Create a new ticket or take a known ticket from [the issue list][NVIDIA FLARE issue list].\n2. Check if there's already a branch dedicated to the task.\n3. If the task has not been taken, [create a new branch in your fork](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request-from-a-fork)\nof the codebase.\nIdeally, the new branch should be based on the latest `main` branch.\n4. Make changes to the branch ([use detailed commit messages if possible](https://chris.beams.io/posts/git-commit/)).\n5. Make sure that new tests cover the changes and the changed codebase [passes all tests locally](#unit-testing).\n6. [Create a new pull request](https://help.github.com/en/desktop/contributing-to-projects/creating-a-pull-request) from the task branch to the main branch, with detailed descriptions of the purpose of this pull request.\n7. Check [the CI/CD status of the pull request][github ci], make sure all CI/CD tests passed.\n8. Assign 2 reviewers. One of the reviewers must be a code owner for this section of code.\n9. Wait for reviews; if there are reviews, make point-to-point responses, make further code changes if needed.\n10. If there are conflicts between the pull request branch and the main branch, pull the changes from the main and resolve the conflicts locally.\n11. Reviewer and contributor may have discussions back and forth until all comments addressed. All conversations must be resolved for PR to pass.\n12. Wait for the pull request to be merged.\n\n## The code reviewing process\n\n\n### Reviewing pull requests\nAll code review comments should be specific, constructive, and actionable.\n1. Check [the CI/CD status of the pull request][github ci], make sure all CI/CD tests passed before reviewing (contact the branch owner if needed).\n2. Read carefully the descriptions of the pull request and the files changed, write comments if needed.\n3. Make in-line comments to specific code segments, [request for changes](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-request-reviews) if needed.\n4. Review any further code changes until all comments addressed by the contributors.\n5. Merge the pull request to the main branch.\n6. Close the corresponding task ticket on [the issue list][NVIDIA FLARE issue list].\n\n[github ci]: https://github.com/NVIDIA/NVFlare/actions\n[NVIDIA FLARE issue list]: https://github.com/NVIDIA/NVFlare/issues\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/CONTRIBUTING.md"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/one-shot-vfl/cifar10_oneshot_vfl.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/research/one-shot-vfl/cifar10_oneshot_vfl.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/flare_monai_integration.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/flare_monai_integration.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/examples/spleen_ct_segmentation_sim/stats_demo/stats_demo.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/examples/spleen_ct_segmentation_sim/stats_demo/stats_demo.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/examples/mednist/monai_101.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/examples/mednist/monai_101.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/examples/mednist/monai_101_fl.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/monai/examples/mednist/monai_101_fl.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/nemo/examples/prompt_learning/prompt_learning.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/nemo/examples/prompt_learning/prompt_learning.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/nemo/examples/peft/peft.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/integration/nemo/examples/peft/peft.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-linear/sklearn_linear_higgs.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-linear/sklearn_linear_higgs.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/docker/nvflare_with_docker.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/docker/nvflare_with_docker.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/data_job_setup.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/data_job_setup.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/tree-based/xgboost_tree_higgs.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/tree-based/xgboost_tree_higgs.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/histogram-based/xgboost_histogram_higgs.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/xgboost/histogram-based/xgboost_histogram_higgs.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/random_forest/random_forest.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/random_forest/random_forest.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/gnn/gnn_examples.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/gnn/gnn_examples.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/image_stats.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/image_stats.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/df_stats.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/df_stats.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/df_stats/demo/visualization.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/df_stats/demo/visualization.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/hierarchical_stats/hierarchical_stats.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/hierarchical_stats/hierarchical_stats.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/hierarchical_stats/demo/visualization.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/hierarchical_stats/demo/visualization.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/image_stats/demo/visualization.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/federated-statistics/image_stats/demo/visualization.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/bionemo/task_fitting/task_fitting.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/bionemo/task_fitting/task_fitting.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-svm/sklearn_svm_cancer.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-svm/sklearn_svm_cancer.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-kmeans/sklearn_kmeans_iris.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/sklearn-kmeans/sklearn_kmeans_iris.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/experiment-tracking/mlflow/experiment_tracking.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/experiment-tracking/mlflow/experiment_tracking.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/vertical_federated_learning/cifar10-splitnn/cifar10_split_learning.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/vertical_federated_learning/cifar10-splitnn/cifar10_split_learning.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance-end-to-end/feature_enrichment.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance-end-to-end/feature_enrichment.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance-end-to-end/prepare_data.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance-end-to-end/prepare_data.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance-end-to-end/xgboost.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance-end-to-end/xgboost.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance-end-to-end/pre_process.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/finance-end-to-end/pre_process.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello_world.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello_world.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-fedavg-numpy/hello-fedavg-numpy_getting_started.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-fedavg-numpy/hello-fedavg-numpy_getting_started.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-fedavg-numpy/hello-fedavg-numpy_flare_api.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-fedavg-numpy/hello-fedavg-numpy_flare_api.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-numpy-sag/hello_numpy_sag.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-numpy-sag/hello_numpy_sag.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/prepare_data.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/prepare_data.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/sklearn-linear/sklearn_linear.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/sklearn-linear/sklearn_linear.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/xgboost/xgboost_horizontal.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/xgboost/xgboost_horizontal.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/sklearn-svm/sklearn_svm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/sklearn-svm/sklearn_svm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/sklearn-kmeans/sklearn_kmeans.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/sklearn-kmeans/sklearn_kmeans.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/stats/tabular_stats.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/higgs/stats/tabular_stats.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/cyclic/cyclic.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/cyclic/cyclic.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag_he/sag_he.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag_he/sag_he.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/swarm/swarm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/swarm/swarm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag_mlflow/sag_mlflow.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag_mlflow/sag_mlflow.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag_deploy_map/sag_deploy_map.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag_deploy_map/sag_deploy_map.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag_executor/sag_executor.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag_executor/sag_executor.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/cyclic_ccwf/cyclic_ccwf.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/cyclic_ccwf/cyclic_ccwf.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/cse/cse.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/cse/cse.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag/sag.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/sag/sag.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/stats/image_stats.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/step-by-step/cifar10/stats/image_stats.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-fedavg/hello-fedavg.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/hello-world/hello-fedavg/hello-fedavg.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/tutorials/setup_poc.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/tutorials/setup_poc.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/tutorials/flare_api.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/tutorials/flare_api.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/tutorials/flare_simulator.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/tutorials/flare_simulator.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/tutorials/job_cli.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/tutorials/job_cli.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/readme.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/readme.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/pt/nvflare_pt_getting_started.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/pt/nvflare_pt_getting_started.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/pt/nvflare_lightning_getting_started.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/pt/nvflare_lightning_getting_started.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/tf/nvflare_tf_getting_started.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/getting_started/tf/nvflare_tf_getting_started.ipynb"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/docker/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/docker/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/docs/resources/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/docs/resources/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/docker/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/examples/advanced/docker/Dockerfile"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "To install the [current release](https://pypi.org/project/nvflare/):\n```\n$ python3 -m pip install nvflare\n```",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "NVIDIA FLARE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "You can quickly get started using the [FL simulator](https://nvflare.readthedocs.io/en/main/getting_started.html#the-fl-simulator).\nA detailed [getting started](https://nvflare.readthedocs.io/en/main/getting_started.html) guide is available in the [documentation](https://nvflare.readthedocs.io/en/main/index.html).\n \nExamples and notebook tutorials are located at [NVFlare/examples](./examples).\n",
                "type": "Text_excerpt",
                "original_header": "Getting Started",
                "parent_header": [
                    "NVIDIA FLARE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "NVIDIA FLARE"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://nvflare.readthedocs.io/",
                "format": "readthedocs"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/NVIDIA/NVFlare/main/README.md"
        }
    ]
}