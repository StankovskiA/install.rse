{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 18:45:36"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/lin-tan/llm-vul",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "lin-tan",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-05-26T04:09:59Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-15T17:35:12Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": null,
                "type": "License",
                "name": "Other",
                "url": null,
                "spdx_id": "NOASSERTION"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "BSD 3-Clause License\n\nDeveloped by:\nThe ASSET research group led by Lin Tan\nPurdue University\n\nCopyright (c) 2023\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n3. Neither the name of the copyright holder nor the names of its\n   contributors may be used to endorse or promote products derived from\n   this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "For our ISSTA23 paper \"How Effective are Neural Networks for Fixing Security Vulnerabilities?\" by Yi Wu, Nan Jiang, Hung Viet Pham, Thibaud Lutellier, Jordan Davis, Lin Tan, Petr Babkin, and Sameena Shah.",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "llm-vul",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "lin-tan/llm-vul",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/lin-tan/llm-vul/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/lin-tan/llm-vul/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 23,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 3,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/lin-tan/llm-vul/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 383950
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 302493
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 1300
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/Dockerfile"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "This repository contains the artifact of paper \"How Effective are Neural Networks for Fixing Security Vulnerabilities?\" published in ISSTA 2023 by Yi Wu, Nan Jiang, Hung Viet Pham, Thibaud Lutellier, Jordan Davis, Lin Tan, Petr Babkin, and Sameena Shah. \n\n",
                "type": "Text_excerpt",
                "original_header": "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "Please modifying the following paths in [`scripts/util.py`](scripts/util.py) to your own path.\n\n```python\n\nVUL4J_DIR = \"/path/to/Vul4J_projects/\" # the absolute path to the folder that will contain all the Vul4J projects\n\nVJBENCH_DIR = \"/path/to/VJBench_projects/\" # the absolute path to the folder that will contain all the VJBench projects\n\n```\n",
                "type": "Text_excerpt",
                "original_header": "Setup",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "To reproduce the results for Vul4J, please refer to the [Vul4J repository](https://github.com/tuhh-softsec/vul4j) for how to set up.\nA script to help checkout Vul4J vulnerabilities is available at [`./scripts/VUL4J/vul4j_projects.py`](scripts/VUL4J/vul4j_projects.py). These 35 Vul4J vulnerabilities are used in our study: VUL4J-1, 3, 4, 5, 6, 7, 8, 10, 12, 18, 19, 20, 22, 23, 25, 26, 30, 39, 40, 41, 43, 44, 46, 47, 50, 53, 55, 57, 59, 61, 64, 65, 66, 73, 74.\n\n",
                "type": "Text_excerpt",
                "original_header": "Vul4J",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "VJBench consists of 42 reproducible vulnerabilities, which are listed in [`VJBench_dataset.csv`](./VJBench_dataset.csv). More details are provided in [`VJBench_data.json`](./scripts/VJBench_data.json) including the compile and test commands for reproducing each vulnerability. The first 15 vulnerabilities listed in [`VJBench_dataset.csv`](./VJBench_dataset.csv) have single hunk fixes, and thus are used in our study: Netty-1, Netty-2, Jenkins-1, Jenkins-2, Jenkins-3, Jinjava-1, Halo-1, Retrofit-1, Quartz-1, Flow-1, Flow-2, BC-Java-1, Json-sanitizer-1, Ratpack-1, Pulsar-1. \n",
                "type": "Text_excerpt",
                "original_header": "VJBench",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "For example, if we want to checkout Halo-1\n```bash\npython3 ./scripts/build_vjbench.py checkout Halo-1\n```",
                "type": "Text_excerpt",
                "original_header": "Checkout a vulnerability:",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "VJBench",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "```bash\npython3 ./scripts/build_vjbench.py compile Halo-1\n```",
                "type": "Text_excerpt",
                "original_header": "Compile:",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "VJBench",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "```bash\npython3 ./scripts/build_vjbench.py test Halo-1\n```",
                "type": "Text_excerpt",
                "original_header": "Test:",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "VJBench",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "The dataset VJBench-trans, consists of three transformed versions for each of the 50 single-hunk vulnerabilities (15 from VJBench and 35 from Vul4J). The transformed vulnerabilities are obtained by applying : (1) Identifier renaming only (2) Code structure change only (3) Both identifier renaming and code structure change at the same time. In total, there are 3x50 = 150 transformed vulnerabilities in VJBench-trans. The transformed and original vulnerabilities and are available in the folder [`VJBench-trans`](./VJBench-trans/).\n\nFor each vulnerability, we provide seven files with the following suffixes:\n\n- original_method.java: the original buggy method.\n- rename_only.java: the transformed buggy method with identifier renaming only.\n- code_structure_change_only.java: the transformed buggy method with code structure change only.\n- full_transformation.java: the transformed buggy method with both identifier renaming and code structure change.\n- identifier_rename_dict.json: the identifier renaming mapping dictionary.\n- patch_for_code_structure_change_only.java: the fixed transformed buggy method with code structure change only\n- buggyline_location.json: the buggy line location for the buggy method [buggy_line_start, buggy_line_end]\n\n",
                "type": "Text_excerpt",
                "original_header": "Transformed Vulnerabilities",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "Patches generated by the models and the validation results are under folder [`./Model_patches/model_output/`](./Model_patches/model_output).\n\nFor validation results, \"test_success\" means the patch passes the test cases,  \"compile_success\" means that the patch fails to pass the test cases but is compilable, \"uncompilable\" means the patch is uncompilable, and \"test_timeout\" is the patch validtion exceeds the time limit.\n",
                "type": "Text_excerpt",
                "original_header": "Model Patches",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "```bash\ncd models\n\n# download plbart-large\ngit clone https://huggingface.co/uclanlp/plbart-large\n\n# download codet5-large\ngit clone https://huggingface.co/Salesforce/codet5-large\n\n# download codegen-6B-multi\ngit clone https://huggingface.co/Salesforce/codegen-6B-multi \n\n# download incoder-6B\ngit clone https://huggingface.co/facebook/incoder-6B\n```\n",
                "type": "Text_excerpt",
                "original_header": "LLMs as is",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage",
                    "Model download"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "We use LLMs fine-tuned by prior work [\"Impact of Code Language Models on Automated Program Repair\"](https://github.com/lin-tan/clm)\n\nThe fine-tuned LLMs can be downloaded from here https://doi.org/10.5281/zenodo.7559244, https://doi.org/10.5281/zenodo.7559277.\n\nThe fine-tuned LLMs we use in our work are:\n- plbart-large-finetuned\n- codet5-large-finetuned\n- codegen-6B-finetuned\n- incoder-6B-finetuned\n",
                "type": "Text_excerpt",
                "original_header": "Fine-tuned LLMs",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage",
                    "Model download"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "The inputs to the models are under folder [`./Model_patches/model_input/`](./Model_patches/model_input).\n\nWe utilize a java parser [Jasper](https://github.com/lin-tan/clm/tree/main/jasper) to parse the buggy code to generate input. First, we need to install jasper. \n```bash\ncd jasper\n\njavac -cp \".:lib/*\" -d target src/main/java/clm/jasper/*.java src/main/java/clm/codet5/*.java src/main/java/clm/codegen/*.java src/main/java/clm/plbart/*.java src/main/java/clm/incoder/*.java src/main/java/clm/finetuning/*.java\n```\n\nNext, for example, we will run fine-tuned InCoder. \n```bash\npython3 ./scripts/fine-tuned_InCoder/fine_tuned_incoder_prepare_input.py\n```\n",
                "type": "Text_excerpt",
                "original_header": "Prepare input",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "Assume the path to the model is `/path/to/models_dir/incoder-6B-finetuned`\n```bash\npython3 ./scripts/fine-tuned_InCoder/fine_tuned_incoder_generate_output.py /path/to/models_dir/\n```\n",
                "type": "Text_excerpt",
                "original_header": "Patch generation",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "validate VJBench vulnerabilities\n```bash\npython3 ./scripts/fine-tuned_InCoder/fine_tuned_incoder_vjbench_validation.py\n```\nvalidate Vul4J vulnerabilities\n```bash\npython3 ./scripts/fine-tuned_InCoder/fine_tuned_incoder_vul4j_validation.py\n```\n",
                "type": "Text_excerpt",
                "original_header": "Patch validation",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "Please refer to each APR tool's repo (link provided below) for usage guidance. Some scripts for using APR tools are available in the folder `.scripts/APR`.\n\n- [RewardRepair](https://github.com/ASSERT-KTH/RewardRepair)\n- [KNOD](https://github.com/lin-tan/knod)\n- [Recoder](https://github.com/pkuzqh/Recoder)\n- [CURE](https://github.com/lin-tan/CURE)\n\n",
                "type": "Text_excerpt",
                "original_header": "Automated Program Repair",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "- Apache Maven 3.8.6\n- Java 8\n- Gradle 3.1\n- git\n\n(We are building a docker image for VJBench. It will be coming out soon.)\n",
                "type": "Text_excerpt",
                "original_header": "Dependency",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "For example, if we want to checkout Halo-1\n```bash\npython3 ./scripts/build_vjbench.py checkout Halo-1\n```",
                "type": "Text_excerpt",
                "original_header": "Checkout a vulnerability:",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "VJBench",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "```bash\npython3 ./scripts/build_vjbench.py compile Halo-1\n```",
                "type": "Text_excerpt",
                "original_header": "Compile:",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "VJBench",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "```bash\npython3 ./scripts/build_vjbench.py test Halo-1\n```",
                "type": "Text_excerpt",
                "original_header": "Test:",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "VJBench",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "```bash\ncd models\n\n# download plbart-large\ngit clone https://huggingface.co/uclanlp/plbart-large\n\n# download codet5-large\ngit clone https://huggingface.co/Salesforce/codet5-large\n\n# download codegen-6B-multi\ngit clone https://huggingface.co/Salesforce/codegen-6B-multi \n\n# download incoder-6B\ngit clone https://huggingface.co/facebook/incoder-6B\n```\n",
                "type": "Text_excerpt",
                "original_header": "LLMs as is",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage",
                    "Model download"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "We use LLMs fine-tuned by prior work [\"Impact of Code Language Models on Automated Program Repair\"](https://github.com/lin-tan/clm)\n\nThe fine-tuned LLMs can be downloaded from here https://doi.org/10.5281/zenodo.7559244, https://doi.org/10.5281/zenodo.7559277.\n\nThe fine-tuned LLMs we use in our work are:\n- plbart-large-finetuned\n- codet5-large-finetuned\n- codegen-6B-finetuned\n- incoder-6B-finetuned\n",
                "type": "Text_excerpt",
                "original_header": "Fine-tuned LLMs",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage",
                    "Model download"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "Assume the path to the model is `/path/to/models_dir/incoder-6B-finetuned`\n```bash\npython3 ./scripts/fine-tuned_InCoder/fine_tuned_incoder_generate_output.py /path/to/models_dir/\n```\n",
                "type": "Text_excerpt",
                "original_header": "Patch generation",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "validate VJBench vulnerabilities\n```bash\npython3 ./scripts/fine-tuned_InCoder/fine_tuned_incoder_vjbench_validation.py\n```\nvalidate Vul4J vulnerabilities\n```bash\npython3 ./scripts/fine-tuned_InCoder/fine_tuned_incoder_vul4j_validation.py\n```\n",
                "type": "Text_excerpt",
                "original_header": "Patch validation",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        }
    ],
    "download": [
        {
            "result": {
                "value": "```bash\ncd models\n\n# download plbart-large\ngit clone https://huggingface.co/uclanlp/plbart-large\n\n# download codet5-large\ngit clone https://huggingface.co/Salesforce/codet5-large\n\n# download codegen-6B-multi\ngit clone https://huggingface.co/Salesforce/codegen-6B-multi \n\n# download incoder-6B\ngit clone https://huggingface.co/facebook/incoder-6B\n```\n",
                "type": "Text_excerpt",
                "original_header": "LLMs as is",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage",
                    "Model download"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "We use LLMs fine-tuned by prior work [\"Impact of Code Language Models on Automated Program Repair\"](https://github.com/lin-tan/clm)\n\nThe fine-tuned LLMs can be downloaded from here https://doi.org/10.5281/zenodo.7559244, https://doi.org/10.5281/zenodo.7559277.\n\nThe fine-tuned LLMs we use in our work are:\n- plbart-large-finetuned\n- codet5-large-finetuned\n- codegen-6B-finetuned\n- incoder-6B-finetuned\n",
                "type": "Text_excerpt",
                "original_header": "Fine-tuned LLMs",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?",
                    "Large Language Models",
                    "Usage",
                    "Model download"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "```\n@inproceedings{10.1145/3597926.3598135,\nauthor = {Wu, Yi and Jiang, Nan and Pham, Hung Viet and Lutellier, Thibaud and Davis, Jordan and Tan, Lin and Babkin, Petr and Shah, Sameena},\ntitle = {How Effective Are Neural Networks for Fixing Security Vulnerabilities},\nyear = {2023},\nisbn = {9798400702211},\npublisher = {Association for Computing Machinery},\naddress = {New York, NY, USA},\nurl = {https://doi.org/10.1145/3597926.3598135},\ndoi = {10.1145/3597926.3598135},\nbooktitle = {Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis},\npages = {1282\u20131294},\nnumpages = {13},\nkeywords = {Automated Program Repair, Vulnerability, AI and Software Engineering, Language Model},\nlocation = {Seattle, WA, USA},\nseries = {ISSTA 2023}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{10.1145/3597926.3598135,\n    series = {ISSTA 2023},\n    location = {Seattle, WA, USA},\n    keywords = {Automated Program Repair, Vulnerability, AI and Software Engineering, Language Model},\n    numpages = {13},\n    pages = {1282\u20131294},\n    booktitle = {Proceedings of the 32nd ACM SIGSOFT International Symposium on Software Testing and Analysis},\n    doi = {10.1145/3597926.3598135},\n    url = {https://doi.org/10.1145/3597926.3598135},\n    address = {New York, NY, USA},\n    publisher = {Association for Computing Machinery},\n    isbn = {9798400702211},\n    year = {2023},\n    title = {How Effective Are Neural Networks for Fixing Security Vulnerabilities},\n    author = {Wu, Yi and Jiang, Nan and Pham, Hung Viet and Lutellier, Thibaud and Davis, Jordan and Tan, Lin and Babkin, Petr and Shah, Sameena},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1145/3597926.3598135",
                "title": "How Effective Are Neural Networks for Fixing Security Vulnerabilities",
                "author": "Wu, Yi and Jiang, Nan and Pham, Hung Viet and Lutellier, Thibaud and Davis, Jordan and Tan, Lin and Babkin, Petr and Shah, Sameena",
                "url": "https://doi.org/10.1145/3597926.3598135"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "ISSTA 2023 paper How Effective are Neural Networks for Fixing Security Vulnerabilities?"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/lin-tan/llm-vul/main/README.md"
        }
    ]
}