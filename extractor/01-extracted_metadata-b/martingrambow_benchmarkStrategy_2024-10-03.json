{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:40:17"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/martingrambow/benchmarkStrategy",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "martingrambow",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-09-08T08:30:54Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-11-14T08:12:54Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2021 Martin Grambow\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/LICENSE"
        },
        {
            "result": {
                "value": "The code in this repository is licensed under the terms of the [MIT](./LICENSE) license.\n\n",
                "type": "Text_excerpt",
                "original_header": "License"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "benchmarkStrategy",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "martingrambow/benchmarkStrategy",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/martingrambow/benchmarkStrategy/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/martingrambow/benchmarkStrategy/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/martingrambow/benchmarkStrategy/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 3014191
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 79966
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "TeX",
                "name": "TeX",
                "type": "Programming_language",
                "size": 326
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_vm/micro_regression_bootstrap_analyze_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_vm/micro_regression_bootstrap_analyze_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_vm/micro_regression_bootstrap_draw_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_vm/micro_regression_bootstrap_draw_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_vm/micro_regression_bootstrap_prepare_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_vm/micro_regression_bootstrap_prepare_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_influxdb/micro_regression_bootstrap_draw_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_influxdb/micro_regression_bootstrap_draw_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_influxdb/micro_regression_bootstrap_analyze_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_influxdb/micro_regression_bootstrap_analyze_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_influxdb/micro_regression_bootstrap_prepare_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/microbenchmarks_influxdb/micro_regression_bootstrap_prepare_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/app_and_micro_history_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/app_and_micro_history_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/app_history_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/app_history_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/app_history_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/app_history_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/app_and_micro_history_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/app_and_micro_history_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/micro_stability.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/paperPlots/micro_stability.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_regression_aggregate_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_regression_aggregate_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_AATests_bootstrap_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_AATests_bootstrap_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_regression_draw_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_regression_draw_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_AATests_prepare_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_AATests_prepare_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_regression_bootstrap_vm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_vm/app_regression_bootstrap_vm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_AATests_prepare_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_AATests_prepare_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_regression_bootstrap_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_regression_bootstrap_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_regression_draw_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_regression_draw_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_AATests_bootstrap_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_AATests_bootstrap_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_regression_aggregate_influx.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/analysis/appBenchmarks_influxdb/app_regression_aggregate_influx.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/createCommitTable/vm/createCommitTable.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/createCommitTable/vm/createCommitTable.ipynb"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/influxdb/3_runBenchmark.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/influxdb/1_initInflux.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/influxdb/duetBenchmark.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/influxdb/4_extractAppBenchmarkGraph.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/influxdb/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/influxdb/2_initTsbs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/influxdb/4_getResults.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/createDataImage/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/createDataImage/utils/waitForInstance.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/createDataImage/scripts/1_initTsbs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/utils/waitForInstance.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/scripts/4_runQueries.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/scripts/3_runInserts.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/scripts/2_initTsbs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/appBenchmarks/vm/scripts/1_initVictoriaMetrics.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/influxdb/3_runBenchmark.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/influxdb/2_initTool.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/influxdb/1_initSUT.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/influxdb/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/influxdb/runAsyncBenchmark.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/influxdb/4_getResults.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/vm/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/vm/utils/waitForInstance.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/microbenchmarks/vm/scripts/1_initSUT.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgMicro_vm/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgMicro_vm/utils/waitForInstance.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgMicro_vm/scripts/1_initSUT.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_influxdb/3_runBenchmark.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_influxdb/1_initInflux.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_influxdb/4_extractAppBenchmarkGraph.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_influxdb/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_influxdb/2_initTsbs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgMicro_influxdb/3_runBenchmark.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgMicro_influxdb/2_initTool.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgMicro_influxdb/1_initSUT.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgMicro_influxdb/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgMicro_influxdb/4_getResults.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_vm/0_main.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_vm/utils/waitForInstance.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_vm/scripts/3_runBenchmark.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_vm/scripts/2_initTsbs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/optimizingMB-Suite/cgApp_vm/scripts/1_initVictoriaMetrics.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "1. Clone this project\n\n``` git clone https://github.com/martingrambow/benchmarkStrategy ```\n\n\n2. Install google cloud sdk\n\n```\necho \"deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main\" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list\n\nsudo apt-get install apt-transport-https ca-certificates gnupg\n\ncurl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key --keyring /usr/share/keyrings/cloud.google.gpg add -\n\nsudo apt-get update && sudo apt-get install google-cloud-sdk\n\ngcloud auth activate-service-account --key-file=microbenchmarkevaluation-275929759504.json\n```\n\n3. Install golang and graphviz\n\n```\nsudo apt-get install golang\n\nsudo apt-get install graphviz\n```\n\n4. Create a google cloud project\n\n- Create Service Account and download json key \n\n- activate compute engine\n\n\n5 Open Firewall (e.g., InfluxDB traffic) \n\n- (e.g., Open ports 8086, 8087, 80, and 81 in the firewall)\n\n",
                "type": "Text_excerpt",
                "original_header": "General setup",
                "parent_header": [
                    "Howto run the experiments and reproduce the results (e.g., for InfluxDB):"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "1. Navigate to the application benchmark folder of the respective system, i.e., \"appBenchmarks/influxdb\" or \"appBenchmarks/vm\" \n2. Check the commitTable.csv \n3. Start the application benchmark using the main.sh script and three arguments:\n\t1. Start commit number\n\t2. End commit cumber\n\t3. Run number\n\nE.g., the script runs an application benchmark for every commit from 1 to 120 and saves the results in a folder named `run1`.\n\n```\ncd appBenchmarks/influxdb\n\nscreen -d -m -L -Logfile experiment1.log ./main.sh 1 120 1\n\n```\n\nTo run AA-test, replace the commit table name in the main.sh script with a file which refers to the AA-test commit table and run the script.\n",
                "type": "Text_excerpt",
                "original_header": "Run application benchmarks",
                "parent_header": [
                    "Howto run the experiments and reproduce the results (e.g., for InfluxDB):"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        },
        {
            "result": {
                "value": "1. Navigate to the microbenchmarks folder of the respective system\n2. Check the commitTable.csv \n3. Rename the file abs_config_all.json to abs_config.json\n4. Start the application benchmark using the main.sh script and three arguments:\n\t1. Start commit number\n\t2. End commit cumber\n\t3. Run number\n\nE.g., the script runs an application benchmark for every commit from 1 to 120 and saves the results in a folder named `run1`.\n\n```\ncd microbenchmarks/influxdb\n\nscreen -d -m -L -Logfile experiment1.log ./main.sh 1 120 1\n\n```\n",
                "type": "Text_excerpt",
                "original_header": "Run complete microbenchmark suite",
                "parent_header": [
                    "Howto run the experiments and reproduce the results (e.g., for InfluxDB):"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        },
        {
            "result": {
                "value": "\n1.  Generate application benchmark call graph\n\t1. Move to the respective folder\n\t`cd optimizingMB-Suite/cgApp_influxdb`\n\t2. Adjust the 0_main.sh and enter the base commit\n\t3. Run `./0_main.sh` and save the generated .pprof and .dot file\n2. Generate call graphs for all microbenchmarks \n\t1. Move to the respective folder\n\t`cd optimizingMB-Suite/cgMicro_influxdb`\n\t2. Adjust the 0_main.sh and enter the base commit\n\t3. Review the abs_config.json configuration\n\t4. run `./0_main.sh` and save the generated .pprof and .dot files (copy the result folder)\n3. Transform pprof profiles to dot files\n\t1. Clone the gocg tool: https://bitbucket.org/sealuzh/gocg/src/master/ (this tool is also part of our replication package)\n\t2. Run `gocg/cmd/transform_profiles` with 3 positional arguments:\n\t\t1. Folder with generated .pprof files of microbenchmarks \n\t\t2. Folder to which the .dot files will be written\n\t\t3. Configuration parameters: type:maximumNumberOfNodes:minmalNodeFraction:MinimalEdgeFraction\n\t\t\t- will generate dot files\n\t\t\t- all nodes (not only the most important ones) should be included\n\t\t\t- all nodes and edge should be included, even if their fraction is very small\n\t\t\t\n\t```\n\tgocg/cmd/transform_profiles \\\n\t\t../benchmarkStrategy/results_all/optimizing_influx/micro/profiles \\\n\t\t../benchmarkStrategy/results_all/optimizing_influx/micro/dots\n\t\tdot:100000:0.000:0.000\n\t\n\t```\n4. Determine practical relevance (optional)\n\t1. Clone the gocg tool: https://bitbucket.org/sealuzh/gocg/src/master/\n\t2. Run `/gocg/cmd/overlap` with 4 arguments\n\t\t1. project name to differ between project and library nodes\n\t\t2. folder with application benchmark call graph \n\t\t3. folder with microbenchmark call graphs \n\t\t4. output folder\n\t\t\n\t```\n\t/gocg/cmd/overlap \\\n\t\tgithub.com/influxdata/influxdb \\\n\t\t../benchmarkStrategy/results_all/optimizing_influx/app \\\n\t\t../benchmarkStrategy/results_all/optimizing_influx/micro/dots \\\n\t\t../benchmarkStrategy/results_all/optimizing_influx/overlap\n\t```\n\t\n\t3. View the file struct_node_overlap.csv in the output folder \n\t\t- The file lists the number of every microbenchmark and the respective overlap with the application benchmark call graph \n\t\t- There are two metrics for every microbenchmark: one considering project-only nodes, another considering all nodes\n\t\t- There is an aggreated \"ALL\" row which states the practical relevance\n4. Remove redundancies\n\t1. Run `gocg/cmd/minimization` with 4 arguments \n\t\t1. project name to differ between project and library nodes\n\t\t2. folder with application benchmark call graph \n\t\t3. folder with microbenchmark call graphs \n\t\t4. output folder\n\t\t\n\t```\n\t/gocg/cmd/minimization \\\n\t\tgithub.com/influxdata/influxdb \\\n\t\t../benchmarkStrategy/results_all/optimizing_influx/app \\\n\t\t../benchmarkStrategy/results_all/optimizing_influx/micro/dots \\\n\t\t../benchmarkStrategy/results_all/optimizing_influx/overlap\n\t```\n\t\n\t2. Review the 4 additional files in the output folder \t\n\t\t- The file app_minFile_GreedySystem.csv shows the optimized suite without redundancies \n\t\t\n5. Recommend functions\n",
                "type": "Text_excerpt",
                "original_header": "Find optimized microbenchmark suite",
                "parent_header": [
                    "Howto run the experiments and reproduce the results (e.g., for InfluxDB):"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        },
        {
            "result": {
                "value": "1. Navigate to the microbenchmarks folder of the respective system\n2. Check the commitTable.csv \n3. Rename the file abs_config_opti.json to abs_config.json (and/or adjust the microbenchmark names in the file)\n4. Start the application benchmark using the main.sh script and three arguments:\n\t1. Start commit number\n\t2. End commit cumber\n\t3. Run number\n\nE.g., the script runs an application benchmark for every commit from 1 to 120 and saves the results in a folder named `run1`.\n\n```\ncd microbenchmarks/influxdb\n\nscreen -d -m -L -Logfile experiment1.log ./main.sh 1 120 1\n\n```\n",
                "type": "Text_excerpt",
                "original_header": "Run optimized microbenchmark suite",
                "parent_header": [
                    "Howto run the experiments and reproduce the results (e.g., for InfluxDB):"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Software performance changes are costly and often hard to detect pre-release. \nSimilar to software testing frameworks, either application benchmarks or microbenchmarks can be integrated into quality assurance pipelines to detect performance changes before releasing a new application version. Unfortunately, extensive benchmarking studies usually take several hours which is problematic when examining dozens of daily code changes in detail; hence, trade-offs have to be made. Optimized microbenchmark suites, which only include a small subset of the microbenchmarks, could solve this problem, but should still reliably detect (almost) all application performance changes such as an increased request latency. It is, however, unclear whether microbenchmarks and application benchmarks detect the same performance problems and whether one can be a proxy for the other. \nIn our paper, we explore whether microbenchmark suites can detect the same application performance changes as an application benchmark. For this, we run extensive benchmark experiments with both the complete and the optimized microbenchmark suites of [InfluxDB](https://github.com/influxdata/influxdb/tree/2.0) and [VictoriaMetrics](https://github.com/VictoriaMetrics/VictoriaMetrics) and compare their results to the respective results of an application benchmark. We do this for 70 and 110 commits respectively. Our results show that it is indeed possible to detect application performance changes using an optimized microbenchmark suite. This detection, however, (i) is only possible when the optimized microbenchmark suite covers all application-relevant code sections, (ii) is prone to false alarms, and (iii) cannot precisely quantify the impact on application performance. Overall, an optimized microbenchmark suite can, thus, provide fast performance feedback to developers (e.g., as part of a local build process), help to estimate the impact of code changes on application performance, and support a detailed analysis while a daily application benchmark detects major performance problems. Thus, although a regular application benchmark cannot be substituted, our results motivate further studies to validate and optimize microbenchmark suites. \n",
                "original_header": "Using Microbenchmark Suites to Detect Application Performance Changes"
            },
            "confidence": 0.9401290461685636,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you use (parts of) this software in a publication, please cite it as:\n \n",
                "original_header": "Research"
            },
            "confidence": 0.9691464704170126,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@article{grambow_using_2022,\n    year = {2022},\n    author = {Grambow, Martin and Kovalev, Denis and Laaber, Christoph Laaber and Leitner, Philipp and Bermbach, David},\n    volume = {Early Access},\n    journal = {{IEEE} Transactions on Cloud Computing},\n    title = {{Using Microbenchmark Suites to Detect Application Performance Changes}},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "{Using Microbenchmark Suites to Detect Application Performance Changes}",
                "author": "Grambow, Martin and Kovalev, Denis and Laaber, Christoph Laaber and Leitner, Philipp and Bermbach, David"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Using Microbenchmark Suites to Detect Application Performance Changes"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/martingrambow/benchmarkStrategy/main/README.md"
        }
    ]
}