{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 22:40:42"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/ojrlopez27/nl-service-composition",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "ojrlopez27",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2018-08-11T03:59:23Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-02-29T04:51:20Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "NLSC Unrestricted Natural Language-based Service Composition Middleware that uses Sentence Embeddings. Named-Entity Recognition and other NLP models.",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This project is composed of multiple sub-projects, but for a minimal execution you only need to run sub-projects 1 and 2:\n1. **sent2vec** (server): this sub-project uses sentence embeddings based on an unsupervised version of Facebook FastText, and an extension of word2vec (CBOW) to sentences. It is written in C++ code and provides some Python wrappers.\n2. **composition** (client): this is a Java sub-project (further portable to Android) that defines:\n    - Annotated abstract services (APIS) \n    - Annotated concrete services\n    - Compositional Mechanisms (pipeline syle, for now)\n    - Name Entity Recognition (based on Stanford NER Libraries) - it recognizes places, names, organizations, numbers, dates, and money\n    - A Working Memory module for storing temporary results (from inferences, current state, etc.)\n    - ZMQ communication with sent2vec server\n    - easy-rule engine and MVEL rules for composition\n    - POJOs\n    - Utils\n3. **experiments/performance** (server): this is a Java server that is listening to multiple clients which tell the server how long they took to perform the composition task. This server, once has collected all the time logs from all the clients, stores on a file both each single time entry and the average time for all clients.\n4. **experiments/mechanical-turk** (client-server): this is a web application written in tornado python. Basically, this is a chat interface that allows human users to interact with an agent in the background who performs service composition\n5. **experiments/android** (client): this is an android client app that allows a human user to communicate with an agent running in the server who performs service composition\n6. **osgi** (server): this is the migration of composition project to OSG-i (experimental)\n7. **sent2vec-client** (client): this is a test client that communicates with sent2vec server (only for testing pruposes)\n     \n",
                "original_header": "Overview"
            },
            "confidence": 0.9973676877883076,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- There are specific TODO tags in the Java code that you can reference, however, the current state can allow us do some experiments and present it as a demo.\n- Port the Java code to Android\n- Move the Stanford NER code to the server side (not sure if we can do this in Android)\n- Replace SemanticController by a proper semantic mechanism for getting word relatedness and synonyms (e.g., Word2Vec, WordNet, etc.)\n- Create and train our own models? why not... maybe using what users say during the user study, however, we would need to collect a big dataset\n- Not sure if a cost fucntion based on similarity and QoS features should be included, or just keep using the similarity thresholds and delta\n- Currently composition is linear (pipeline style) but we need to introduce control structures (e.g., loops, conditionals, etc.). It would be interesting to convert natural language commands into rules using MVEL rules (or maybe LIA/Sugilite)\n- Mechanism for mapping entity extraction with parameters is pretty basic, we should improve it\n- Running multiple times the same experiment produces different similarities (sent2vec) so sometimes the service grounding cannot be performed since similarities are really low.... not sure why this happens (it occurs randomly and rarely)\n- etc.\n \n",
                "original_header": "TO-DO"
            },
            "confidence": 0.9507645181085912,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "nl-service-composition",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "ojrlopez27/nl-service-composition",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/ojrlopez27/nl-service-composition/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/ojrlopez27/nl-service-composition/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 7,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "middleware, natural-language-processing, sent2vec, sentence-embeddings, service-composition, service-discovery, service-mapper, service-orchestration",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/ojrlopez27/nl-service-composition/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 627393
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 106184
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 39453
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 11912
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 11074
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 9100
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 4032
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CSS",
                "name": "CSS",
                "type": "Programming_language",
                "size": 3180
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 1635
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Batchfile",
                "name": "Batchfile",
                "type": "Programming_language",
                "size": 404
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "license": [
        {
            "result": {
                "value": "BSD License\n\nFor fastText software\n\nCopyright (c) 2016-present, Facebook, Inc. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n * Redistributions of source code must retain the above copyright notice, this\n   list of conditions and the following disclaimer.\n\n * Redistributions in binary form must reproduce the above copyright notice,\n   this list of conditions and the following disclaimer in the documentation\n   and/or other materials provided with the distribution.\n\n * Neither the name Facebook nor the names of its contributors may be used to\n   endorse or promote products derived from this software without specific\n   prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/sent2vec/LICENSE"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/sent2vec/cleanExitProcesses.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/sent2vec/pre-run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/sent2vec/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/sent2vec/stanford-postagger/stanford-postagger-gui.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/sent2vec/stanford-postagger/stanford-postagger.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/experiments/android/inmind-messenger/uninstall.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/experiments/performance/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/experiments/mechanical-turk/chat/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-commons/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-commons/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-commons/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/java-binder/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/java-binder/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/java-binder/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-core/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-core/sweepPorts.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-core/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-core/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-core/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-middleware/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-middleware/sweepPorts.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-middleware/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-middleware/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-middleware/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-deployer/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-deployer/sweepPorts.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-deployer/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-deployer/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-deployer/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-sent2vec/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-sent2vec/sweepPorts.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-sent2vec/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-sent2vec/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-sent2vec/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-composition/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-composition/sweepPorts.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-composition/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-composition/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-composition/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-launchpad/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-launchpad/sweepPorts.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-launchpad/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-launchpad/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-osgi-launchpad/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-ner/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-ner/sweepPorts.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-ner/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-ner/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/components/muf-ner/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-muf-commons/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-muf-commons/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-muf-commons/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-java-client/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-java-client/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-java-client/clean.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/osgi/smw-java-client/remake.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/composition/start_parallel-clients.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/composition/client.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/sent2vec/get_sentence_embeddings_from_pre-trained_models.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/sent2vec/get_sentence_embeddings_from_pre-trained_models.ipynb"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "1. **sent2vec** server: follow the instructions on the README file under the sent2vec folder, and:\n    - Download Cython. If using mac, 'pip install Cython'\n    - Install module globally:\n\t      - /usr/local/bin/python2.7 setup.py build_ext\n\t      - sudo -H pip install .\n\t      - pip3 install nltk\n    - Download pre-trained models from https://github.com/epfml/sent2vec, more specifically, wiki bigrams (16GB) and toronto unigrams (2GB) -- though you can try different models, particularly, we should try twitter model since it is bigger in size and precision may be improved. Put the models under the folder sent2vec\n    - Modify run.sh bash script. If you want more precision (though it will be slower) then use wiki model, otherwise use toronto model which is faster\n2. **composition** client:\n    - Modify config.properties and point the path variables to your local folders\n    - Modify task-def-script to reflect the high level description of a task or plan (e.g., plan a trip to a place on a range of dates)\n    - Modify task-exec-script to reflect a contextualization of the high-level description (e.g., plan a trip to Boston from August 29 to September 11)\n    - If you are **NOT** doing performance tests, then you should disable the corresponding option on the confi.properties file (performance.test.enable = false)\n3. **experiments/performance** server:\n\t- Install GNU parallel: (brew install parallel, or port install parallel)\n\t- Modify build.gradle to create a jar\n\t- Write a script for running the jar\n\t- Modify config.properties so the upper threshold is very low (0.1) andlower (0.01)\n\t- Modify task-exec-script file in such a way that all the params are provided in each sentence (date, location, etc).\n\t- Write a script using GNU parallel (https://stackoverflow.com/a/21197038) that loads the scripts that runs the jar\n\t- Run the performance Java server\n\t- Run the parallel script for 10, 100, 1000, 10,000 processes (clients)\n4. Mechanical Turk Experiments:\n\t- Make sure you are using wiki pre-trained model (it is more accurate). Modify sent2vec/run.sh script.\n\t- If you have added new services or api's (**only**) then:\n\t\t- add words to the blacklist (if needed) in composiiton/.../DatasetCleaner\n\t- Configure the Chat Web App (experiments/mechanical-turk/chat):\n\t\t- brew install python\n\t\t- brew upgrade python\n\t\t- check version (should be minimum 3.6): /usr/local/bin/python3.6-32 --version\n\t\t- install tornado globally:\n\t\t\t- /usr/local/bin/python3.6-32 -m pip install tornado\n\t\t- if you are using DDNS (noip.com):\n\t\t\t- make sure every time you move to another network (e.g., from home to campus) you will have to update the ip address in noip.com (user inmind.yahoo.2015@gmail)\n\t\t\t- if working from home, you hill have to open (forward) TCP and UPP ports 5555, 5556 and 8888 (using your admin web console of your router) otherwise, while testing locally, you can just test using localhost (though, during tests with turkers, you will need to make sure app.composer.ddns.net is available)\n\t- run sent2vec\n\t- change config.properties (variable paths) on java composition project\n\t- run Java composition project (MUF_MKTLauncher.java)\n\t- open a web browser and type either app.composer.ddns.net:8888 or localhost:8888\n  ",
                "type": "Text_excerpt",
                "original_header": "Setup",
                "parent_header": [
                    "<NLSC> Unrestricted Natural Language-based Service Composition through Sentence Embeddings"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "[//]: # (this is a comment: see this link for badges using travis-CI, codecov, etc: https://github.com/mlindauer/SMAC3/blob/warmstarting_multi_model/README.md) \n![build](https://img.shields.io/badge/build-passing-green.svg?cacheSeconds=2592000) \n![test](https://img.shields.io/badge/test-passing-green.svg?cacheSeconds=2592000) \n![coverage](https://img.shields.io/badge/coverage-90%25-yellowgreen.svg?cacheSeconds=2592000) \n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/e3935f15c7fe495191910e9ab92d9143)](https://www.codacy.com/app/ojrlopez27/semantic-middleware?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=ojrlopez27/nl-service-composition&amp;utm_campaign=Badge_Grade) \n",
                "original_header": "<NLSC> Unrestricted Natural Language-based Service Composition through Sentence Embeddings"
            },
            "confidence": 0.999998498662852,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "[SCC 2019 paper](https://arxiv.org/abs/1901.07910):\n\n```\n@inproceedings{nlsc:2019,\n  title = {Unrestricted Natural Language-based Service Composition through Sentence Embeddings},\n  author = {{Romero}, {Oscar} J. and {Dangi}, {Ankit and} {Akoju}, {Sushma}},\n  booktitle = {Services Computing Conference},\n  year          = \"2019\",\n  pages         = \"00--00\"\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "How to cite our work",
                "parent_header": [
                    "<NLSC> Unrestricted Natural Language-based Service Composition through Sentence Embeddings"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{nlsc:2019,\n    pages = {00--00},\n    year = {2019},\n    booktitle = {Services Computing Conference},\n    author = {{Romero}, {Oscar} J. and {Dangi}, {Ankit and} {Akoju}, {Sushma}},\n    title = {Unrestricted Natural Language-based Service Composition through Sentence Embeddings},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Unrestricted Natural Language-based Service Composition through Sentence Embeddings",
                "author": "{Romero}, {Oscar} J. and {Dangi}, {Ankit and} {Akoju}, {Sushma}"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": " Unrestricted Natural Language-based Service Composition through Sentence Embeddings"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1901.07910"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ojrlopez27/nl-service-composition/master/README.md"
        }
    ]
}