{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:13:42"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/CMU-SAFARI/SimplePIM",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "CMU-SAFARI",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-08-16T07:15:59Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-06-14T12:55:03Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2023 SAFARI Research Group at ETH Z\u00fcrich\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "SimplePIM is the first high-level programming framework for real-world processing-in-memory (PIM) architectures. Described in the PACT 2023 paper by Chen et al. (https://arxiv.org/pdf/2310.01893.pdf).",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This project implements SimplePIM, a software framework for easy and efficient in-memory-hardware programming. The code is implemented on UPMEM, an actual, commercially available PIM hardware that combines traditional DRAM memory with general-purpose in-order cores inside the same chip. SimplePIM processes arrays of arbitrary elements on a PIM device by calling iterator functions from the host and provides primitives for communication among PIM cores and between PIM and the host system.  \nPrevious manual UPMEM implementations of the same applications can be found in [PrIM Benchmark](https://github.com/CMU-SAFARI/prim-benchmarks), [dpu_kmeans](https://github.com/upmem/dpu_kmeans) and [prim-ml](https://github.com/CMU-SAFARI/pim-ml). These previous implementations can serve as baseline for measuring SimplePIM's performance as well as productivity improvements.\n \n",
                "original_header": "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing"
            },
            "confidence": 0.9349524565520259,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "SimplePIM provides three APIs to the users. The management interface is under SimplePIM/lib/management/. The management interface code sets up the UPMEM hardware, records and manages information about the PIM arrays. The communication interface under SimplePIM/lib/communication/ contains code for PIM-to-PIM and host-PIM communication operators (gather, scatter, broadcast, allreduce, and allgather). Finally, the processing interface under SimplePIM/lib/processing/ contains the UPMEM implementation of array map, array zip and array reduction. Many workloads like histogram, kmeans and vector addition can be abstracted as a combination of the communication and processing operators. \n",
                "original_header": "APIs"
            },
            "confidence": 0.9434798620008601,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "SimplePIM",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "CMU-SAFARI/SimplePIM",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/CMU-SAFARI/SimplePIM/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/CMU-SAFARI/SimplePIM/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 18,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 4,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/CMU-SAFARI/SimplePIM/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 155438
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 31313
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 2084
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "Please cite the following papers if you find this repository useful.\nJinfan Chen, Juan G\u00f3mez-Luna, Izzat El Hajj, Yuxin Guo and Onur Mutlu, \"[SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing](https://arxiv.org/abs/2310.01893)\" , International Conference on Parallel Architectures and Compilation Techniques (PACT), 2023.\n\nBibtex entries for citation:\n```\n@article{Chen2023SimplePIMPACT,\n  title={SimplePIM: A Software Framework for Productive and Efficient Processing-in-Memory},\n  author={Jinfan Chen and Juan G'omez-Luna and Izzat El Hajj and Yu-Yin Guo and Onur Mutlu},\n  year={2023},\n  booktitle = {PACT}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        },
        {
            "result": {
                "value": "@article{Chen2023SimplePIMPACT,\n    booktitle = {PACT},\n    year = {2023},\n    author = {Jinfan Chen and Juan G'omez-Luna and Izzat El Hajj and Yu-Yin Guo and Onur Mutlu},\n    title = {SimplePIM: A Software Framework for Productive and Efficient Processing-in-Memory},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "SimplePIM: A Software Framework for Productive and Efficient Processing-in-Memory",
                "author": "Jinfan Chen and Juan G'omez-Luna and Izzat El Hajj and Yu-Yin Guo and Onur Mutlu"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "Running PIM-ML requires installing the [UPMEM SDK](https://sdk.upmem.com). This benchmark designed to run on a server with real UPMEM modules, but they are also able to be run by the functional simulator in the UPMEM SDK.\n",
                "type": "Text_excerpt",
                "original_header": "Prerequisites",
                "parent_header": [
                    "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Clone the repository:\n```\n$ git clone https://github.com/CMU-SAFARI/SimplePIM.git\n$ cd SimplePIM\n```\n",
                "type": "Text_excerpt",
                "original_header": "Getting Started",
                "parent_header": [
                    "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        },
        {
            "result": {
                "value": "If you have any suggestions for improvement, please contact georgcjf at gmail dot com. If you find any bugs or have further questions or requests, please post an issue at the [issue page](https://github.com/CMU-SAFARI/SimplePIM/issues).\n",
                "type": "Text_excerpt",
                "original_header": "Getting Help",
                "parent_header": [
                    "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "Each benchmark folder includes Makefiles to run the experiments:\nTo run vector addition, redcution and histogram, one could simply go to each benchmark folder and run make. For example, to run vector addition, one could run \n```\n$ cd benchmarks/va\n$ make\n$ ./bin/host\n```\nOne can observe that SimplePIM produces the exact same result as the CPU code. One can change the parameters (number of elements, number of DPU used) in the Param.h file.\n\nTo run Linear Regresion, Logitic Regression, and KMeans, one needs to generate the input data with a python script under each benchmark folder. For example, to run linear regression, one firstly needs to run \n```\n$ cd benchmarks/linear_reg\n$ python linear_reg.py\n```\nAnd then one can build and run the actual SimplePIM code as before with \n```\n$ make\n$ ./bin/host\n```\n",
                "type": "Text_excerpt",
                "original_header": "Running SimplePIM",
                "parent_header": [
                    "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ],
    "support": [
        {
            "result": {
                "value": "If you have any suggestions for improvement, please contact georgcjf at gmail dot com. If you find any bugs or have further questions or requests, please post an issue at the [issue page](https://github.com/CMU-SAFARI/SimplePIM/issues).\n",
                "type": "Text_excerpt",
                "original_header": "Getting Help",
                "parent_header": [
                    "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ],
    "acknowledgement": [
        {
            "result": {
                "value": "We acknowledge support from the SAFARI Research Group\u2019s industrial partners, especially Google, Huawei, Intel, Microsoft, VMware, and the Semiconductor Research Corporation. This research was partially supported by the ETH Future Computing Laboratory and the European Union\u2019s Horizon programme for research and innovation under grant agreement No. 101047160, project BioPIM (Processing-in-memory architectures and pro- gramming libraries for bioinformatics algorithms). This research was also partially supported by ACCESS \u2013 AI Chip Center for Emerging Smart Systems, sponsored by InnoHK funding, Hong Kong SAR.\n",
                "type": "Text_excerpt",
                "original_header": "Acknowledgement",
                "parent_header": [
                    "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "SimplePIM: A Software Framework for Productive and Efficient In-Memory Processing"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2310.01893"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/CMU-SAFARI/SimplePIM/main/README.md"
        }
    ]
}