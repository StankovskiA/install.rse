{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:46:09"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/hrishikeshrt/sangrahaka",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "hrishikeshrt",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-05-07T03:17:46Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-01T13:22:44Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "An easy and robust web-based distributed annotation and querying framework using technologies such as Flask, Neo4j Bootstrap, Vis.js",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "An easy and robust web-based distributed **Annotation and Querying Framework**. \n",
                "original_header": "Sa\u1e45gr\u0101haka"
            },
            "confidence": 0.9558797413631904,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "sangrahaka",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "hrishikeshrt/sangrahaka",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/hrishikeshrt/sangrahaka/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/hrishikeshrt/sangrahaka/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "annotation, cypher, esecfse21, flask, framework, knowledge-graph, neo4j, python, query, query-builder",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/hrishikeshrt/sangrahaka/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 305828
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 200018
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 101206
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CSS",
                "name": "CSS",
                "type": "Programming_language",
                "size": 20198
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "# Installation Instructions\n\nSa\u1e45gr\u0101haka is presented as a full-stack application that you can install on your\nown server. Installing it is fairly straightforward if you have the necessary\ncomponents.\n\n## Requirements\n\nSa\u1e45gr\u0101haka makes use of cross-platform technologies, and in theory should\nrun on all operating systems. It has been tested and is known to work on Ubuntu\n18.04 and Windows.\n\n### Primary Requirements\n\n* [Python3](https://www.python.org/downloads/): First and foremost, being powered by [Flask](https://flask.palletsprojects.com/en/2.2.x/), Sa\u1e45gr\u0101haka requires Python 3.\n  - Tested on Python 3.8.\n  - You may want to use [Anaconda](https://docs.anaconda.com/free/anaconda/install/).\n* Several features of Sa\u1e45gr\u0101haka are made possible through use of numerous Python packages available on the [Python Package Index (PyPI)](https://pypi.org/).\n  - Install them using `pip install -r requirements.txt`\n\n### Secondary Requirements\n\n*  [Neo4j](https://neo4j.com/download-center/#community) is a graph database management system (Think MySQL but for graphs!). Sa\u1e45gr\u0101haka uses Neo4j as its graph database to store and query knowledge graphs.\n  - Check the installation instructions for your platform.\n  - **Note**: Annotation process does not require Neo4j. Therefore, if you want to quickly get started with annotation without worrying about knowledge graphs, you can skip installing Neo4j.\n  - **Caution**: The interfaces under `Graph` tab will not function if a graph database is not connected.\n\n## Core Setup\n\n### Start Web (Flask) Server\n\n* Configure the application.\n  - Copy `settings.sample.py` to `settings.py`\n  - Open `settings.py` in a text editor and make appropriate changes.\n* Run application server.\n  - Open a terminal.\n  - Run `python3 server.py`\n  - **Note**: If you want to run it on a production environment, it is recommended to use a Web Server Gateway Interface (WSGI) such as [Gunicorn](https://gunicorn.org/)\n* Access the frontend to start using\n  - Copy the URL displayed on the terminal and load it in the browser of your choice.\n\nYour Sa\u1e45gr\u0101haka instance is now running!\n\n## Annotation Setup\n\n### Setup Annotation Task\n\n* Login using the administrator username and password set by you in `settings.py`\n* Go to `Admin` tab.\n* Upload Corpus\n  - Create a corpus entry by providing a name and an optional description.\n  - Prepare chapter files. (Check [examples](examples/) directory for the format of chapter files.)\n  - Upload chapter files.\n* Create Ontology\n  - Prepare a list of node types relevant to your corpus.\n  - Prepare a list of relationships that you want to capture among these node types.\n  - Upload the ontology in one of the two ways:\n    - Use GUI to `Add` relations one by one.\n    - Use `CSV` or `JSON` files to upload `Ontology` in bulk. (Check to [data/tables](data/tables) for file format and sample data.)\n\nYour Sa\u1e45gr\u0101haka instance is now ready for annotation!\n\n### Start Annotation\n\n* Ask your annotators to create accounts on your system.\n* Go to `Admin` tab to add `Annotator` role to the desired users.\n\n## Querying Setup\n\n### Build Knowledge Graph\n\nThe knowledge graph needs to be constructed using the collected annotations.\nThe `PropertyGraph()` class provided in [`utils/property_graph.py`](utils/property_graph.py) can be used for this purpose.\n\n**Disclaimer**: This step requires a certain level of familiarity with Python,\nproperty graph data model and computational aspects.\n\n**Note**: [`examples`](examples/) directory contains sample files for building the knowledge graph.\n\n### Prepare Query Templates\n\nQuery templates should be prepared at `data/query.json`. The format of query templates as well as sample\nfiles highlighting the query template preparation are available in [`examples`](examples/).\n\n**Disclaimer**: Creating query templates requires a certain level of familiarity\nwith [Cypher](https://neo4j.com/docs/getting-started/cypher-intro/) query\nlanguage and computational aspects.\n\n### Start Graph Database (Neo4j) Server *(optional)*\n\nIf you have installed Neo4j and want to use graph related features, you should\nstart a graph database server. It need not be on the same machine as the web\nserver, but it needs to be accessible via network to the machine hosting your\nweb server.\n\n* Start Neo4j graph server\n  - Open a terminal.\n  - Navigate to the `Neo4j` installation directory. (`cd <your-neo4j-installation-path>`)\n  - Run `./bin/neo4j console`\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/INSTALL.md"
        },
        {
            "result": {
                "value": "Sa\u1e45gr\u0101haka is presented as a full-stack application that you can install on your own server.\n\nThe detailed installation instructions are available at [INSTALL.md](INSTALL.md).\n",
                "type": "Text_excerpt",
                "original_header": "Install",
                "parent_header": [
                    "Sa\u1e45gr\u0101haka"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        },
        {
            "result": {
                "value": "* Clone (or Download) this repository.\n* `pip install -r requirements.txt`\n* Copy `settings.sample.py` to `settings.py` and make appropriate changes.\n* Run application server using `python3 server.py`\n* Load the URL displayed on the terminal in the browser of your choice.\n* Login using the administrator username and password set by you in `settings.py`\n* Go to `Admin` tab to create a corpus and upload chapter files.\n* Create `Ontology` in one of the two ways.\n  - Use GUI to `Add` single relations.\n  - Use `CSV` or `JSON` files to upload `Ontology` in bulk. (Check to [data/tables](data/tables) for file format and sample data)\n\nYour Sangrahaka instance is now ready for annotation!\n\n* Ask your annotators to create accounts on your system.\n* Go to `Admin` tab to add `Annotator` role to the desired users.\n",
                "type": "Text_excerpt",
                "original_header": "Basic Setup",
                "parent_header": [
                    "Sa\u1e45gr\u0101haka",
                    "Install"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        },
        {
            "result": {
                "value": "*  Install [Neo4j](https://neo4j.com/download-center/#community) (Required for querying)\n  - Navigate to the `Neo4j` installation directory\n  - Start the graph server: `./bin/neo4j console`\n* Construct the knowledge graph.\n* Load the knowledge graph into Neo4j.\n* Prepare the query templates file and place it in the `data/` folder.\n* Restart web server.\n\n**Disclaimer**: Steps such as preparing corpus files, query templates building knowledge graph requires\na certain level of familiarity with programming and the computational aspects.\n\n**Note**: `examples` directory contains sample files for corpus creation, query template and graph building.\n",
                "type": "Text_excerpt",
                "original_header": "Graph Setup",
                "parent_header": [
                    "Sa\u1e45gr\u0101haka",
                    "Install"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "```\n.\n\u251c\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 settings.sample.py\n\u251c\u2500\u2500 models_admin.py\n\u251c\u2500\u2500 models_sqla.py\n\u251c\u2500\u2500 server.py -> server_sqla.py\n\u251c\u2500\u2500 server_sqla.py\n\u251c\u2500\u2500 constants.py\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 query.json\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tables\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 sample\n\u251c\u2500\u2500 db\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 main.db\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 README.md\n\u251c\u2500\u2500 templates [*.html]\n\u251c\u2500\u2500 utils\n\u2502   \u251c\u2500\u2500 configuration.py\n\u2502   \u251c\u2500\u2500 cypher_utils.py\n\u2502   \u251c\u2500\u2500 database.py\n\u2502   \u251c\u2500\u2500 graph.py\n\u2502   \u251c\u2500\u2500 plaintext.py\n\u2502   \u251c\u2500\u2500 property_graph.py\n\u2502   \u251c\u2500\u2500 query.py\n\u2502   \u2514\u2500\u2500 reverseproxied.py\n\u251c\u2500\u2500 static\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 audio [...]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 bootstrap [...]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 css [...]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 custom\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 css\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 builder\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 builder.css\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 [...]\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 sticky-footer.css\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 admin\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 admin.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 browse\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 browse.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 builder\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 builder.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u251c\u2500\u2500 corpus\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 annotation.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 curation.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 elements.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u251c\u2500\u2500 events.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2502\u00a0\u00a0 \u2514\u2500\u2500 functions.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0     \u2514\u2500\u2500 query\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u251c\u2500\u2500 network.js\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0         \u2514\u2500\u2500 query.js\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 fontawesome [...]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 images [...]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 js [...]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 plugins [...]\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 themes [...]\n\u251c\u2500\u2500 examples\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ayurveda [...]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 epics [...]\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 README.md\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 requirements.txt\n\u251c\u2500\u2500 output [...]\n\u251c\u2500\u2500 explore_database.py\n\u251c\u2500\u2500 setup.cfg\n\u251c\u2500\u2500 INSTALL.md\n\u2514\u2500\u2500 README.md\n```\n \n",
                "original_header": "Structure"
            },
            "confidence": 1.0,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "* Presentation: https://hrishikeshrt.github.io/publication/fse2021/presentation.mp4\n",
                "type": "Text_excerpt",
                "original_header": "Demo",
                "parent_header": [
                    "Sa\u1e45gr\u0101haka"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "```\n@inproceedings{terdalkar2021sangrahaka,\nauthor = {Terdalkar, Hrishikesh and Bhattacharya, Arnab},\ntitle = {Sangrahaka: A Tool for Annotating and Querying Knowledge Graphs},\nyear = {2021},\nisbn = {9781450385626},\npublisher = {Association for Computing Machinery},\naddress = {New York, NY, USA},\nurl = {https://doi.org/10.1145/3468264.3473113},\ndoi = {10.1145/3468264.3473113},\nbooktitle = {Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},\npages = {1520\u20131524},\nnumpages = {5},\nkeywords = {Querying Tool, Knowledge Graph, Annotation Tool},\nlocation = {Athens, Greece},\nseries = {ESEC/FSE 2021}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Cite",
                "parent_header": [
                    "Sa\u1e45gr\u0101haka"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{terdalkar2021sangrahaka,\n    series = {ESEC/FSE 2021},\n    location = {Athens, Greece},\n    keywords = {Querying Tool, Knowledge Graph, Annotation Tool},\n    numpages = {5},\n    pages = {1520\u20131524},\n    booktitle = {Proceedings of the 29th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering},\n    doi = {10.1145/3468264.3473113},\n    url = {https://doi.org/10.1145/3468264.3473113},\n    address = {New York, NY, USA},\n    publisher = {Association for Computing Machinery},\n    isbn = {9781450385626},\n    year = {2021},\n    title = {Sangrahaka: A Tool for Annotating and Querying Knowledge Graphs},\n    author = {Terdalkar, Hrishikesh and Bhattacharya, Arnab},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1145/3468264.3473113",
                "title": "Sangrahaka: A Tool for Annotating and Querying Knowledge Graphs",
                "author": "Terdalkar, Hrishikesh and Bhattacharya, Arnab",
                "url": "https://doi.org/10.1145/3468264.3473113"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        }
    ],
    "application_domain": [
        {
            "result": {
                "type": "String",
                "value": "Semantic web"
            },
            "confidence": 0.9984118317303116,
            "technique": "supervised_classification"
        },
        {
            "result": {
                "type": "String",
                "value": "Graphs"
            },
            "confidence": 0.9296320438101401,
            "technique": "supervised_classification"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Sa\u1e45gr\u0101haka"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/hrishikeshrt/sangrahaka/main/README.md"
        }
    ]
}