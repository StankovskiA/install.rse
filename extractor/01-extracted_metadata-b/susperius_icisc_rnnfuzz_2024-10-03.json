{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:52:14"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/susperius/icisc_rnnfuzz",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "susperius",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2018-10-29T11:08:12Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-08-24T02:03:06Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "The tools used to train the models used for the ICISC paper \"Recurrent neural networks for fuzz testing web browsers\"",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "icisc_rnnfuzz",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "susperius/icisc_rnnfuzz",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/susperius/icisc_rnnfuzz/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/susperius/icisc_rnnfuzz/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 28,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 7,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/susperius/icisc_rnnfuzz/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 37328596
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 22196
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/susperius/icisc_rnnfuzz/master/readme.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "```bash\nusage: stacked_rnn.py [-h] [--batch_size BATCH_SIZE] [--epochs EPOCHS]\n                      [--learning_rate LEARNING_RATE] [--layers LAYERS]\n                      [--internal_size INTERNAL_SIZE] [--seq_len SEQ_LEN]\n                      [--training_set TRAINING_SET] [--load_size LOAD_SIZE]\n                      [--out_folder OUT_FOLDER] [--split SPLIT]\n                      [--cells {1,2}]\n\nThis script trains a stacked RNN model\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --batch_size BATCH_SIZE\n                        size of the batch\n  --epochs EPOCHS       number of training epochs\n  --learning_rate LEARNING_RATE\n                        learning rate\n  --layers LAYERS       number of RNN layers\n  --internal_size INTERNAL_SIZE\n                        number of nodes inside a RNN cell\n  --seq_len SEQ_LEN     sequence length used for training\n  --training_set TRAINING_SET\n                        path to the used training set\n  --load_size LOAD_SIZE\n                        defines how much data is loaded from the file in bytes\n  --out_folder OUT_FOLDER\n                        defines an output folder\n  --split SPLIT         defines which split to use\n  --cells {1,2}         sets the cell type to use: 1=LSTM, 2=GRU\n```\n\nThis script trains the specified model. It creates tensorboard log events for validation loss, batch loss and accuracy. \nA checkpoint is generated for each epoch of training and each time a new lowest validation loss is achieved. In addition,\na small sample is generated after each epoch of training.\n\n ### Sampling ###\n\n```bash\nusage: sampling.py [-h] --chkpt_meta_file CHKPT_FN --cell {1,2} --cell_units\n                   CELL_UNITS --layers LAYERS [--translation_dict TRANS_DICT]\n\nrequired arguments:\n  --chkpt_meta_file CHKPT_FN\n                        the checkpoints meta file\n  --cell {1,2}          cell type: 1=LSTM, 2=GRU\n  --cell_units CELL_UNITS\n                        number of hidden units in the RNN cells\n  --layers LAYERS       number of layers\n  --translation_dict TRANS_DICT\n                        path to the saved translation dictionary\noptional arguments:\n  -h, --help            show this help message and exit\n```\nThis script demonstrates how a trained model can be used to generate new HTML-tags. It uses the provided model to sample\n20 lines from it and prints the results.\n",
                "type": "Text_excerpt",
                "original_header": "Training",
                "parent_header": [
                    "Recurrent neural networks for fuzz testing web browsers",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/susperius/icisc_rnnfuzz/master/readme.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "* Numpy\n* Tensorflow\n* tqdm\n```bash\npip install numpy tensorflow tqdm\n```\n \n",
                "original_header": "Required Packages"
            },
            "confidence": 0.9999999983160421,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/susperius/icisc_rnnfuzz/master/readme.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Recurrent neural networks for fuzz testing web browsers"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/susperius/icisc_rnnfuzz/master/readme.md"
        }
    ]
}