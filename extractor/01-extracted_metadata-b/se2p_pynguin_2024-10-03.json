{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:20:46"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/se2p/pynguin",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "se2p",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2020-07-27T15:50:19Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-01T09:10:36Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "This project is licensed under the terms of the [MIT License](LICENSE.rst).\nPynguin was using the GNU Lesser General Public License (LGPL) until version 0.29.0,\nits licence was changed with version 0.30.0.\n",
                "type": "Text_excerpt",
                "original_header": "License",
                "parent_header": [
                    "Pynguin"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "The PYthoN General UnIt Test geNerator is a test-generation tool for Python",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "**Pynguin is only a research prototype!**\nIt is not tailored towards production use whatsoever.\nHowever, we would love to see Pynguin in a production-ready stage at some point;\nplease report your experiences in using Pynguin to us. \n",
                "original_header": "Attention"
            },
            "confidence": 0.9388252644094109,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "pynguin",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "se2p/pynguin",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/se2p/pynguin/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/se2p/pynguin/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 1237,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "python, search-based-software-testing, test-generation, test-generator, testing-tools",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 75,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/se2p/pynguin/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 1943012
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 2984
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 2645
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 2471
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 2246
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/161630481",
                "tag": "0.39.0",
                "name": "Pynguin 0.39.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix a bug in the handling of infinite loops in global scope (thanks to @BergLucas in #65)\r\n",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.39.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.39.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.39.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/161630481",
                "release_id": 161630481,
                "date_created": "2024-06-21T09:28:25Z",
                "date_published": "2024-06-21T09:30:52Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/161628822",
                "tag": "0.38.0",
                "name": "Pynguin 0.38.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Remove the dependency to our custom [MutPy fork](https://github.com/se2p/MutPy-Pynguin) by integrating the relevant code into Pynguin directly (thanks to @BergLucas in #64)",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.38.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.38.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.38.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/161628822",
                "release_id": 161628822,
                "date_created": "2024-06-21T09:17:19Z",
                "date_published": "2024-06-21T09:20:47Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/160545274",
                "tag": "0.37.0",
                "name": "Pynguin 0.37.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Add possibility to control number of mutations in MOSA.\r\n- Compute the area under curve if Pynguin traces the overage over time; area under curve can be interpreted as the integral over the coverage function, which is computed via trapezoidal approximation.\r\n- Fix the assertion generation for `float`s (thanks to @BergLucas in #70)\r\n- Fix assertion and invalid function call (thanks to @BergLucas in #72)\r\n",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.37.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.37.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.37.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/160545274",
                "release_id": 160545274,
                "date_created": "2024-06-14T17:56:06Z",
                "date_published": "2024-06-14T18:00:20Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/149394495",
                "tag": "0.36.0",
                "name": "Pynguin 0.36.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Remove unused code\r\n- Fix `ruff` warnings\r\n- Add sequence variable for type-evolution tracking\r\n- Add CLI options to ignore methods and modules from analysis (see https://github.com/se2p/pynguin/issues/62)",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.36.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.36.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.36.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/149394495",
                "release_id": 149394495,
                "date_created": "2024-04-02T12:34:18Z",
                "date_published": "2024-04-02T13:19:44Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/143148111",
                "tag": "0.35.0",
                "name": "Pynguin 0.35.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix `TypeError` bug in instrumentation of bytecode (see GitHub PR #51)\r\n- Add a dump method for type-information statistics\r\n- Fix handling of aliased modules (see GitHub issue #57)\r\n- Fix method-signature handling for C extensions (see GitHub issue #59)\r\n",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.35.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.35.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.35.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/143148111",
                "release_id": 143148111,
                "date_created": "2024-02-22T10:18:05Z",
                "date_published": "2024-02-22T10:23:55Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/117766612",
                "tag": "0.34.0",
                "name": "Pynguin 0.34.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Activate a larger selection of checkers for [ruff](https://github.com/astral-sh/ruff)\r\n- Implement various stopping conditions",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.34.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.34.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.34.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/117766612",
                "release_id": 117766612,
                "date_created": "2023-08-18T13:10:58Z",
                "date_published": "2023-08-18T13:14:09Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/107461644",
                "tag": "0.33.0",
                "name": "Pynguin 0.33.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix an issue with type-information retrieval (see #35 )",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.33.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.33.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.33.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/107461644",
                "release_id": 107461644,
                "date_created": "2023-06-06T06:49:55Z",
                "date_published": "2023-06-06T06:51:50Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/103166986",
                "tag": "0.32.0",
                "name": "Pynguin 0.32.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- *Breaking:* Restructure the code\r\n  Most of the code related to the generation algorithms has been moved.  The code now resides in the `ga` package, where it fits much better.  All accompanying modules have also been moved to different places.  This might cause breakage if you have developed extensions for Pynguin that rely on the structure of the modules.\r\n- Update the [`bytecode`](https://github.com/MatthieuDartiailh/bytecode) library to its latest GitHub version.\r\n  Necessary to include a fix for a regression in that library, which was pointed out to us in GitHub issue #42 (hopefully fixed by this library upgrade).\r\n- Adjust the header of generated test files; we now refer to Pynguin's [website](https://www.pynguin.eu).\r\n- Extend the usage of the `ruff` tool for code analysis.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.32.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.32.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.32.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/103166986",
                "release_id": 103166986,
                "date_created": "2023-05-16T13:51:51Z",
                "date_published": "2023-05-16T13:56:41Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/90955142",
                "tag": "0.31.0",
                "name": "Pynguin 0.31.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Update literature references in documentation\r\n- Add issue templates for GitHub",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.31.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.31.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.31.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/90955142",
                "release_id": 90955142,
                "date_created": "2023-02-01T09:26:48Z",
                "date_published": "2023-02-01T09:35:32Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/88928826",
                "tag": "0.30.0",
                "name": "Pynguin 0.30.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Re-license Pynguin to MIT License",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.30.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.30.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.30.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/88928826",
                "release_id": 88928826,
                "date_created": "2023-01-13T20:51:01Z",
                "date_published": "2023-01-13T20:52:39Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/88555696",
                "tag": "0.29.0",
                "name": "Pynguin 0.29.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Move code to `src`-based layout\r\n- Make configuration of `mypy` more strict\r\n- Remove an accidentally committed file",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.29.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.29.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.29.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/88555696",
                "release_id": 88555696,
                "date_created": "2023-01-11T09:56:42Z",
                "date_published": "2023-01-11T09:59:37Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/88539169",
                "tag": "0.28.0",
                "name": "Pynguin 0.28.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix distance computations for `<=` and always convert values to `float`.\r\n- Improve method blacklist for module analysis.\r\n- Improve type handling.\r\n- Allow Pynguin to run on itself.  This can be achieved by the `pynguin_self.py` script\r\n  from the `utils` package.\r\n- Improve warning in documentation that Pynguin actually executes the code under test.\r\n- Various refactorings and improvements.\r\n- Update copyright notices in all files.\r\n",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.28.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.28.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.28.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/88539169",
                "release_id": 88539169,
                "date_created": "2023-01-11T07:14:47Z",
                "date_published": "2023-01-11T07:15:55Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/77951498",
                "tag": "0.27.0",
                "name": "Pynguin 0.27.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Write Pynguin version number to Cobertura XML report\r\n- Fix the computation of coverage values\r\n\r\n  Pynguin 0.26.0 added the possibility to optimise for, e.g., branch coverage while yielding the line coverage of the resulting test suite in the end.  This had some unintentional implications, such as the value of the `Coverage` output variable having weird values.  We fix this by providing additional output variables `FinalBranchCoverage` and `FinalLineCoverage` that contain the final coverage values *after* all generation and postprocessing.  See the [runtimevariable.py](pynguin/utils/statistics/runtimevariable.py) module for details.\r\n- Rewrite the internal type handling in Pynguin\r\n\r\n  This is a huge internal change that improves the internal type system and adds the possibility to trace types during test execution.  Some highlights:\r\n  - we got rid of our internal abstraction of `type | None` to mark whether type \r\n    information exists\r\n  - we allow to retrieve additional or new type information from the test execution\r\n  - enhance our internal type representation to make it more flexible\r\n  - add the missing primitive type `complex`\r\n  - a more suitable subtyping check for `Union`s",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.27.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.27.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.27.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/77951498",
                "release_id": 77951498,
                "date_created": "2022-09-23T07:12:12Z",
                "date_published": "2022-09-23T07:14:48Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/77547533",
                "tag": "0.26.0",
                "name": "Pynguin 0.26.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Allow the calculation of coverage values regardless of optimisation.\r\n\r\n  Allows to yield, for example, the resulting line coverage of the test suite, while the optimisation during test generation was done for branch coverage.  Add the required coverage values to your `--output-variables` list to activate this feature.\r\n\r\n  *Note:* when doing this, the `Coverage` output variable will contain the average value of the incorporated coverage values!\r\n- Provide a Cobertura-like coverage report\r\n\r\n  Pynguin already provides an HTML report that can be activated by setting `--create-coverage-report True`.  This report is nice for human users but not very usable if one wants to automatically reason about the achieved coverage using tools.  We thus also emit an XML report in the style of the [Cobertura](https://cobertura.github.io/cobertura/) tool that can be used for further automated tools.\r\n- Fix typo on `test_parameterizedstatements.py` (see #27, thanks to @stavares843)\r\n- Fix typo on `testcase.py` (see #26, thanks to @stavares843)\r\n- Improve mutation-based assertion generation\r\n\r\n  The assertion generation now does not more compare the recorded assertion traces but actually executes the assertions to make the whole process more reliable.  Besides, we do not check for `is not None` as a fallback for object checks any more, but use an `isinstance` check on the object's type to have a more precise assertion.\r\n- Make statistics tests debuggable\r\n\r\n  Some accidental circular import made it impossible to run a debugger on tests in `pynguin.utils`.  We resolved this by moving tests to another package.\r\n- Partial rework of internal type system\r\n\r\n  We added an abstraction layer over the existing type hints from a module to make handling and reasoning with types easier.  This abstraction is based on the one used by [`mypy`](http://mypy-lang.org), however, we only cover a small part of what [PEP-484](https://peps.python.org/pep-0484/) actually defines.\r\n- Make assertion generation more strict\r\n",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.26.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.26.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.26.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/77547533",
                "release_id": 77547533,
                "date_created": "2022-09-19T13:17:23Z",
                "date_published": "2022-09-19T13:20:08Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/72045362",
                "tag": "0.25.2",
                "name": "Pynguin 0.25.2",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix bugs in mutation analysis and assertion generation",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.25.2",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.25.2",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.25.2",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/72045362",
                "release_id": 72045362,
                "date_created": "2022-07-14T22:40:15Z",
                "date_published": "2022-07-14T22:57:56Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/71347496",
                "tag": "0.25.1",
                "name": "Pynguin 0.25.1",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix documentation build on read the docs.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.25.1",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.25.1",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.25.1",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/71347496",
                "release_id": 71347496,
                "date_created": "2022-07-06T08:46:50Z",
                "date_published": "2022-07-06T08:48:29Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/71240914",
                "tag": "0.25.0",
                "name": "Pynguin 0.25.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix further issues with test-case isolation during execution.\r\n- Fix some bugs reegarding type information.\r\n- Use [astroid](https://github.com/PyCQA/astroid) instead of Python's [ast](https://docs.python.org/3/library/ast.html) module efor our module analysis due to its enhanced features.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.25.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.25.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.25.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/71240914",
                "release_id": 71240914,
                "date_created": "2022-07-05T04:42:09Z",
                "date_published": "2022-07-05T04:51:07Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/70850707",
                "tag": "0.24.1",
                "name": "Pynguin 0.24.1",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Update Pynguin's documentation to match fixes from Pynguin 0.24.0",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.24.1",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.24.1",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.24.1",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/70850707",
                "release_id": 70850707,
                "date_created": "2022-06-29T11:10:22Z",
                "date_published": "2022-06-29T11:12:17Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/70848496",
                "tag": "0.24.0",
                "name": "Pynguin 0.24.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix killing mutant reporting\r\n- Use [black](https://github.com/psf/black) to format the generated test cases.\r\n  Pynguin now requires `black` as a run-time dependency to use its code formatting.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.24.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.24.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.24.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/70848496",
                "release_id": 70848496,
                "date_created": "2022-06-29T10:41:45Z",
                "date_published": "2022-06-29T10:44:21Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/70474250",
                "tag": "0.23.0",
                "name": "Pynguin 0.23.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Provide a naive inheritance graph to improve input generation.\r\n- Improve killing of long-running test-case executions\r\n- Add computation of mutation scores for `MUTATION_ANALYSIS` assertion generation.\r\n\r\n  The output variables `NumberOfCreatedMutants`, `NumberOfKilledMutants`, `NumberOfTimedOutMutants`, and `MutationScore` allow to export those values.\r\n- Do not enable `typing.TYPE_CHECKING` for SUT analysis as this may cause circular imports.\r\n- Improve the black list of modules that shall not be incorporated into the test cluster.\r\n- Annotate failing tests with `@pytest.mark.xfail(strict=True)`.\r\n- Improve log output of mutation-based assertion generation.\r\n- Add instrumentation to mutated modules to easier kill them.\r\n\r\n  This change is relevant only to the `MUTATION_ANALYSIS` assertion-generation strategy.\r\n- Write errors in execution threads to the log instead of STDERR to avoid cluttering log output.\r\n- Add limits for amount and size of constants in the constant pool.\r\n\r\n  The configuration options `max_dynamic_length` and `max_dynamic_pool_size` allow to set sizes for the maximum length of strings/bytes that shall be stored in the dynamic constant pool and the maximum numbers of constants of a type, respectively. This prevents the constant pool from growing unreasonably large.\r\n- Improve handling of type annotations.\r\n- Fix computation of cyclomatic complexity.\r\n\r\n  Computing cyclomatic complexity does not work for functions that are not present in the AST, e.g., default constructors.  We now omit those from the computation of the cyclomatic-complexity output variables.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.23.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.23.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.23.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/70474250",
                "release_id": 70474250,
                "date_created": "2022-06-24T10:16:42Z",
                "date_published": "2022-06-24T10:19:08Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/68912007",
                "tag": "0.22.0",
                "name": "Pynguin 0.22.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix selection of type-inference strategy.\r\n- Fix a bug in the type inference regarding cases where not type information is present.\r\n- Add a PyLint checker for calls to `print()`.\r\n- Extend the blacklist of modules that shall not be analysed.\r\n- Raise `RuntimeError` from tracer when called from another thread.\r\n- Provide better exception messages for critical failures.\r\n- Apply a further limit to the execution time of a single generated test case to at \r\n  most 10 seconds.\r\n- Exclude empty enum classes from test cluster to fix test generation.\r\n\r\n  Parsing included modules raised an issue when the `enum` module is used: the test \r\n  cluster then had a reference to the `enum.Enum` class, which obviously does not \r\n  contain any fields.  In the following, generating tests failed, as soon as this \r\n  class was selected to fulfil parameter values because there was no field to select \r\n  from, e.g., `MyEnum.MY_FIELD`.  We now exclude empty enums from the test cluster.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.22.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.22.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.22.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/68912007",
                "release_id": 68912007,
                "date_created": "2022-06-08T06:19:02Z",
                "date_published": "2022-06-08T06:20:38Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/67794207",
                "tag": "0.21.0",
                "name": "Pynguin 0.21.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix a bug in the module analysis regarding nested functions\r\n\r\n  Nested functions/closures caused Pynguin's module analysis to crash with an \r\n  failing assertion.\r\n- Improve the branch-distance computation for `bool` values\r\n- Allow for more statistics variables regarding number of lines and cyclomatic \r\n  complexity",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.21.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.21.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.21.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/67794207",
                "release_id": 67794207,
                "date_created": "2022-05-25T12:41:09Z",
                "date_published": "2022-05-25T12:43:51Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/67669231",
                "tag": "0.20.1",
                "name": "Pynguin 0.20.1",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix a bug in terminating Pynguin due to threading",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.20.1",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.20.1",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.20.1",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/67669231",
                "release_id": 67669231,
                "date_created": "2022-05-24T14:11:08Z",
                "date_published": "2022-05-24T14:13:04Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/67669188",
                "tag": "0.20.0",
                "name": "Pynguin 0.20.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "### Breaking Changes\r\n\r\n- Remove splitting into passing and failing test suite.\r\n\r\n  Previously, we consider a test case passing if it did not raise any exception \r\n  during its execution; it was considered failing otherwise.  Pynguin did a split of \r\n  the test cases into two test suites before exporting them.  This was mainly an \r\n  artefact from implementing the random algorithm in the very beginning of the \r\n  project.  Due to the improved assertion export for exception assertions we can now \r\n  get rid of the split and export only one test module containing all generated test \r\n  cases.\r\n- Remove the option to use a log file (`--log_file` or `--log-file`).\r\n\r\n  Pynguin writes its output to STDOUT/STDERR now, if requested by the `-v`/`-vv` switch.\r\n  This output is formatted by @willmcgugan's amazing\r\n  [rich](https://github.com/Textualize/rich) library.  A user can disable the output\r\n  formatting by setting the `--no-rich` flag.  Of course, because we believe that `rich`\r\n  is such an awesome library, we also provide an alias for this flag, called `--poor`\ud83d\ude09\r\n\r\n### Further Changes\r\n\r\n- Distinguish between expected and unexpected exceptions.\r\n\r\n  We consider an exception to be expected if it is explicitly raised in the code \r\n  under test or is documented in the code's docstring.  For those exceptions we \r\n  build an `with pytest.raises` block around the exception-raising statement.  All \r\n  other exceptions are considered to be unexpected.  We decorate the test method \r\n  with the `@pytest.mark.xfail` decorator and let the exception happen.  It is up to \r\n  the user to decide whether such an exception is expected.  An exception here is \r\n  the `AssertionError`: it is considered to be expected as soon as there is an \r\n  `assert` statement in the code under test.\r\n- Improve installation description to explicitly point to using a virtual environment\r\n  (see GitHub issue #23, thanks to @tuckcodes).\r\n- Improve variable names and exception assertions\r\n\r\n  The assertion generation got an improved handling for asserting on exceptions, \r\n  which creates more meaningful and (hopefully) better understandable assertions for \r\n  exceptions.\r\n- Enhance the module analysis\r\n\r\n  This is basically a rewrite of our previously existing test cluster, which keeps \r\n  track of all the callables from the subject under test as well as the subject's \r\n  dependencies.  It also incorporates an analysis of the subject's AST (if present) \r\n  and allows for more and more precise information about the subject which can then \r\n  improve the quality of the generated tests.\r\n- To distinguish bytecode instructions during instrumentation we add an \r\n  `ArtificialInstr` for our own added instructions.\r\n- Fix a bug in the tracing of runtime types.\r\n  \r\n  During assertion generation Pynguin tracks the variable types to decide for which \r\n  values it actually is able to generate assertions.  Creating an assertion on a \r\n  generator function does not work, as the type is not exposed by Python but only \r\n  present during runtime\u2014thus generating an object of this type always fail.  We \r\n  mitigate this by ignoring objects of type `builtins.generator` from the assertion \r\n  generation.\r\n- Improve documentation regarding coverage measurement and the coverage report",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.20.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.20.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.20.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/67669188",
                "release_id": 67669188,
                "date_created": "2022-05-24T14:01:40Z",
                "date_published": "2022-05-24T14:12:37Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/61979705",
                "tag": "0.19.0",
                "name": "Pynguin 0.19.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "# Breaking Change\r\n\r\n- One can now use multiple stopping conditions at a time.\r\n\r\n  *This breaks the CLI in two ways:*\r\n  - The parameter `--stopping-condition` has been removed.\r\n  - The parameter `--budget` was renamed to `--maximum-search-time`.\r\n  \r\n  Users have to change their run configurations accordingly!\r\n\r\n  To specify stopping conditions, add one or many from `--maximum-search-time`, `--maximum-test-executions`, `--maximum-statement-executions`, and `--maximum-iterations` to your command line.\r\n\r\n# Further Changes\r\n\r\n- Clarify log output for search phases\r\n- Pynguin now uses the `ast.unparse` function from Python's AST library instead of the third-party `astor` library to generate the source code of the test cases.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.19.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.19.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.19.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/61979705",
                "release_id": 61979705,
                "date_created": "2022-03-16T09:57:25Z",
                "date_published": "2022-03-16T10:00:03Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/61861268",
                "tag": "0.18.0",
                "name": "Pynguin 0.18.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "# Breaking Change\r\n- *We drop the support for Python 3.8 and Python 3.9 with this version!*\r\n\r\n  You need Python 3.10 to run Pynguin!  We recommend using our Docker container,\r\n  which is already based on Python 3.10, to run Pynguin.\r\n\r\n# Further Changes\r\n- Add line coverage visualisation to the coverage report.\r\n- Add a citation reference to our freshly accepted ICSE'22 tool demo paper \u201cPynguin: \r\n  Automated Unit Test Generation for Python.\r\n- Unify the modules for the analysis of the module under test.\r\n",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/0.18.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/0.18.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/0.18.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/61861268",
                "release_id": 61861268,
                "date_created": "2022-03-15T09:13:44Z",
                "date_published": "2022-03-15T09:15:41Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/58680295",
                "tag": "v0.17.0",
                "name": "Pynguin v0.17.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Add line coverage as another coverage type (thanks to @labrenz).\r\n  The user can now choose between using either line or branch coverage or both by setting the parameter `--coverage-metrics` to `LINE`, `BRANCH`, or `LINE,BRANCH`.\r\n  Default value is `BRANCH`.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/v0.17.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/v0.17.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/v0.17.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/58680295",
                "release_id": 58680295,
                "date_created": "2022-02-04T11:32:26Z",
                "date_published": "2022-02-04T11:35:56Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/57271181",
                "tag": "v0.16.1",
                "name": "Pynguin v0.16.1",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Update `CITATION.cff` information",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/v0.16.1",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/v0.16.1",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/v0.16.1",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/57271181",
                "release_id": 57271181,
                "date_created": "2022-01-17T09:37:26Z",
                "date_published": "2022-01-17T09:39:18Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/57270364",
                "tag": "v0.16.0",
                "name": "Pynguin v0.16.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Refactor the assertion generation.  This unifies the `SIMPLE` and the \r\n  `MUTATION_ANALYSIS` approaches.  Furthermore, Pynguin now uses the \r\n  `MUTATION_ANALYSIS` approach again as the default.\r\n- Update the type annotations in Pynguin's code to the simplified, future versions \r\n  (e.g. instead of `Dict[str, Set[int]]` we can now write `dict[str, set[int]]`) and do\r\n  not need any imports from Python's `typing` module.\r\n- Fix a crash of the seeding when native modules are present.  Fixes #20.\r\n- Provide a hint in the documentation that PyCharm 2021.3 now integrates `poetry` \r\n  support, thus no plugin is required for this (and newer) versions (thanks to \r\n  @labrenz).",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/v0.16.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/v0.16.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/v0.16.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/57270364",
                "release_id": 57270364,
                "date_created": "2022-01-17T09:23:56Z",
                "date_published": "2022-01-17T09:26:40Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/se2p/pynguin/releases/55180495",
                "tag": "v0.15.0",
                "name": "Pynguin v0.15.0",
                "author": {
                    "name": "stephanlukasczyk",
                    "type": "User"
                },
                "description": "- Fix a bug for mutating a statement that is not in the current test case (see #17).\r\n- Set default assertion generation to `SIMPLE` due to issues with the experimental \r\n  new generation strategy.\r\n- Add GitHub Actions that also runs our CI chain on GitHub.",
                "tarball_url": "https://api.github.com/repos/se2p/pynguin/tarball/v0.15.0",
                "zipball_url": "https://api.github.com/repos/se2p/pynguin/zipball/v0.15.0",
                "html_url": "https://github.com/se2p/pynguin/releases/tag/v0.15.0",
                "url": "https://api.github.com/repos/se2p/pynguin/releases/55180495",
                "release_id": 55180495,
                "date_created": "2021-12-13T12:42:45Z",
                "date_published": "2021-12-13T12:46:44Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "<!--\nSPDX-FileCopyrightText: 2019\u20132024 Pynguin Contributors\n\nSPDX-License-Identifier: CC-BY-4.0\n-->\n\n# Contributor Code of Conduct\n\nThis project adheres to No Code of Conduct.  We are all adults.  We accept anyone's contributions.  Nothing else matters.\n\nFor more information please visit the [No Code of Conduct](https://nocodeofconduct.com) homepage.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/CODE_OF_CONDUCT.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "# vim: set ft=yaml ts=2 sts=2 sw=2 expandtab:\n# SPDX-FileCopyrightText: 2019\u20132024 Pynguin Contributors\n#\n# SPDX-License-Identifier: CC0-1.0\ncff-version: \"1.2.0\"\nauthors:\n  - family-names: Lukasczyk\n    given-names: Stephan\n    orcid: \"https://orcid.org/0000-0002-0092-3476\"\n  - family-names: Kroi\u00df\n    given-names: Florian\n  - family-names: Steffens\n    given-names: Lukas\n  - family-names: Straubinger\n    given-names: Florian\n  - family-names: Labrenz\n    given-names: Simon\n  - family-names: Fraser\n    given-names: Gordon\n    orcid: \"https://orcid.org/0000-0002-4364-6595\"\ndoi: \"10.5281/zenodo.3989840\"\nidentifiers:\n  - type: doi\n    value: 10.5281/zenodo.3989840\n    description: General DOI for Pynguin pointing to the latest version automatically.\nkeywords:\n  - python\n  - \"test generation\"\n  - \"unit test\"\nlicense: \"MIT\"\nreferences:\n  - authors:\n    - family-names: Lukasczyk\n      given-names: Stephan\n    - family-names: Fraser\n      given-names: Gordon\n    title: \"Pynguin: Automated Unit Test Generation for Python\"\n    doi: 10.1145/3510454.3516829\n    conference:\n      name: \"44th International Conference on Software Engineering Companion (ICSE '22 Companion)\"\n    type: conference-paper\n    year: 2022\n  - authors:\n    - family-names: Lukasczyk\n      given-names: Stephan\n    - family-names: Kroi\u00df\n      given-names: Florian\n    - family-names: Fraser\n      given-names: Gordon\n    title: An empirical study of automated unit test generation for python\n    type: article\n    journal: Empirical Software Engineering\n    doi: 10.1007/s10664-022-10248-w\n    volume: 28\n    number: 2\n    year: 2023\n  - authors:\n    - family-names: Lukasczyk\n      given-names: Stephan\n    - family-names: Kroi\u00df\n      given-names: Florian\n    - family-names: Fraser\n      given-names: Gordon\n    title: Automated Unit Test Generation for Python\n    doi: 10.1007/978-3-030-59762-7_2\n    conference:\n      name: \"12th International Symposium on Search-Based Software Engineering (SSBSE)\"\n    type: conference-paper\n    year: 2020\nmessage: \"If you use this software, please cite it using these metadata.\"\nrepository-code: \"https://github.com/se2p/pynguin\"\ntitle: \"Pynguin\"\npreferred-citation:\n  type: conference-paper\n  authors:\n  - family-names: Lukasczyk\n    given-names: Stephan\n    orcid: \"https://orcid.org/0000-0002-0092-3476\"\n  - family-names: Fraser\n    given-names: Gordon\n    orcid: \"https://orcid.org/0000-0002-4364-6595\"\n  doi: 10.1145/3510454.3516829\n  conference:\n    name: \"44th International Conference on Software Engineering Companion (ICSE '22 Companion)\"\n  title: \"Pynguin: Automated Unit Test Generation for Python\"\n  year: 2022\n",
                "type": "File_dump",
                "format": "cff"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/CITATION.cff"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "<!--\nSPDX-FileCopyrightText: 2019\u20132024 Pynguin Contributors\n\nSPDX-License-Identifier: CC-BY-4.0\n-->\n\n# How to contribute\n\n## Dependencies\n\nWe use `poetry` to manage the [dependencies](https://github.com/python-poetry/poetry).\nIf you do not have `poetry` installed, you should run the command below.\n\n```bash\nmake download-poetry\n```\n\nTo install dependencies and prepare [`pre-commit`](https://pre-commit.com/) hooks you would need to run `install` command:\n\n```bash\nmake install\n```\n\nTo activate your `virtualenv` run `poetry shell`.\n\n## Codestyle\n\nAfter you run `make install` you can execute the automatic code formatting.\n\n```bash\nmake codestyle\n```\n\nWe require the [black](https://github.com/psf/black) code style,\nwith 88 characters per line maximum width (exceptions are only permitted for imports\nand comments that disable, e.g., a `pylint` warning).\nImports are ordered using [isort](https://github.com/timothycrosley/isort).\nDocstrings shall conform to the\n[Google Python Style Guide](https://google.github.io/styleguide/pyguide.html).\nExcept for the above-mentioned differences,\nwe suggest to conform to the Google Python Style Guide as much as possible.\n\nIn particular, we want to point to Sec. 2.14 of Google's style guide,\nregarding `None` checks.\n\nImports from `__future__` are not permitted except for the `from __future__ import\n annotations` feature that allows more concise type hints.\nPynguin requires at least Python 3.8\u2014there is not need to support older versions!\n\n### Checks\n\nMany checks are configured for this project.\nCommand `make check-style` will run black diffs,\ndarglint docstring style and mypy.\nThe `make check-safety` command will look at the security of your code.\n\n*Note:* darglint on Windows only runs in `git bash` or the Linux subsystem.\n\nYou can also use `STRICT=1` flag to make the check be strict.\n\n### Before submitting\n\nBefore submitting your code please do the following steps:\n\n1. Add any changes you want\n1. Add tests for the new changes\n1. Edit documentation if you have changed something significant\n1. Run `make codestyle` to format your changes.\n1. Run `STRICT=1 make check-style` to ensure that types and docs are correct\n1. Run `STRICT=1 make check-safety` to ensure that security of your code is correct\n\n## Unit Tests\n\n`Pynguin` uses [`pytest`](https://pytest.org) to execute the tests.\nYou can find the tests in the `tests` folder.\nThe target `make test` executes `pytest` with the appropriate parameters.\n\nTo combine all analysis tools and the test execution\nwe provide the target `make check`,\nwhich executes all of them in a row.\n\nWe automatically deploy the coverage report (HTML version) from the CI chain\nto [an external server](https://pagedeploy.lukasczyk.me/pynguincoverage/) (only for\nthe `master` branch).\nIt is necessary to test code!\nUntested code cannot be accepted\u2014or only under rare conditions.\n\n## Other help\n\nYou can contribute by spreading a word about this library.\nIt would also be a huge contribution to write\na short article on how you are using this project.\nYou can also share your best practices with us.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/CONTRIBUTING.md"
        },
        {
            "result": {
                "value": "For the development of Pynguin you will need the [`poetry`](https://python-poetry.org)\ndependency management and packaging tool.\nTo start developing, follow these steps:\n1. Clone the repository\n2. Change to the `pynguin` folder: `cd pynguin`\n3. Create a virtual environment and install dependencies using `poetry`: `poetry install`\n4. Make your changes\n5. Run `make check` to verify that your changes pass all checks\n\n   Please see the [`poetry` documentation](https://python-poetry.org/docs/) for more information on this tool.\n",
                "type": "Text_excerpt",
                "original_header": "Contributing to Pynguin",
                "parent_header": [
                    "Pynguin"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/se2p/pynguin/main/pynguin-docker.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/se2p/pynguin/main/docker/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/docker/Dockerfile"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "Before you begin, ensure you have met the following requirements:\n- You have installed Python 3.10 (we have not yet tested with Python\n  3.11, there might be some problems due to changed internals regarding the byte-code\n  instrumentation).\n\n  **Attention:** Pynguin now requires Python 3.10!  Older versions are no longer \n  supported!\n- You have a recent Linux/macOS/Windows machine.\n\nPlease consider reading the [online documentation](https://pynguin.readthedocs.io)\nto start your Pynguin adventure.\n ",
                "type": "Text_excerpt",
                "original_header": "Prerequisites",
                "parent_header": [
                    "Pynguin"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "Pynguin can be easily installed using the `pip` tool by typing:\n```bash\npip install pynguin\n```\n\nMake sure that your version of `pip` is that of a supported Python version, as any \nolder version is not supported by Pynguin!\n",
                "type": "Text_excerpt",
                "original_header": "Installing Pynguin",
                "parent_header": [
                    "Pynguin"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Pynguin is a command-line application.\nOnce you installed it to a virtual environment, you can invoke the tool by typing\n`pynguin` inside this virtual environment.\nPynguin will then print a list of its command-line parameters. \nA minimal full command line to invoke Pynguin could be the following,\nwhere we assume that a project `foo` is located in `/tmp/foo`,\nwe want to store Pynguin's generated tests in `/tmp/testgen`,\nand we want to generate tests using a whole-suite approach for the module `foo.bar`\n(wrapped for better readability):\n```bash\npynguin \\\n  --project-path /tmp/foo \\\n  --output-path /tmp/testgen \\\n  --module-name foo.bar\n```\nPlease find a more detailed example in the [quick start guide](https://pynguin.readthedocs.io/en/latest/user/quickstart.html). \n",
                "original_header": "Using Pynguin"
            },
            "confidence": 0.9812892529172652,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "contributors": [
        {
            "result": {
                "value": "Pynguin is developed at the\n[Chair of Software Engineering II](https://www.fim.uni-passau.de/lehrstuhl-fuer-software-engineering-ii/) \nof the [University of Passau](https://www.uni-passau.de).\n\nMaintainer: [Stephan Lukasczyk](https://github.com/stephanlukasczyk)\n\nContributors:\n- [Juan Altmayer Pizzorno](https://github.com/jaltmayerpizzorno)\n- [Lucas Berg](https://github.com/BergLucas)\n- [Tucker Blue](https://github.com/tuckcodes)\n- [Gordon Fraser](https://github.com/gofraser)\n- [Abdur-Rahmaan Janhangeer](https://github.com/Abdur-rahmaanJ)\n- [Maximilian K\u00f6nigseder](https://github.com/mak1ng)\n- [Florian Kroi\u00df](https://github.com/Wooza)\n- [Simon Labrenz](https://github.com/labrenz)\n- [Roman Levin](https://github.com/romanlevin)\n- [Juan Juli\u00e1n Merelo Guerv\u00f3s](https://github.com/JJ)\n- [Lukas Steffens](https://github.com/Luki42)\n- [Florian Straubinger](https://github.com/f-str)\n- [Sara Tavares](https://github.com/stavares843)\n\n",
                "type": "Text_excerpt",
                "original_header": "Contributors",
                "parent_header": [
                    "Pynguin"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        },
        {
            "result": {
                "value": "If you want to use the PyCharm IDE you have to set up a few things:\n1. Import `pynguin` into PyCharm.\n2. Let PyCharm configure configure a virtual environment using `poetry`.\n3. Set the default test runner to `pytest`\n4. Set the DocString format to `Google`\n\n",
                "type": "Text_excerpt",
                "original_header": "Development using PyCharm.",
                "parent_header": [
                    "Pynguin",
                    "Contributors"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "identifier": [
        {
            "result": {
                "type": "Url",
                "value": "https://doi.org/10.5281/zenodo.3989840"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Pynguin"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "type": "Url",
                "value": "https://pynguin.readthedocs.io/",
                "format": "readthedocs"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/se2p/pynguin/master/docs/source/_static/pynguin-logo.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://api.star-history.com/svg?repos=se2p/pynguin&amp;type=Date"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/se2p/pynguin/main/README.md"
        }
    ]
}