{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:41:56"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/SNTSVV/SEDE",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "SNTSVV",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-09-20T07:40:16Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-09-26T08:19:26Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Implementation of the Simulator-based Explanations of DNN-Errors (SEDE) approach.",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "SEDE is a tool that is used to generate explanations for DNN errors on real-world datasets with any simulator.\nSEDE is a cluster-based approach that relies on the clusters generated by [HUDD](https://github.com/SNTSVV/HUDD-Toolset), but might be used with any generated clusters.\n\nThis package provides the images generated by our approach and competing approaches appearing in \"**Simulator-based explanation and debugging of hazard-triggering events in DNN-based safety-critical systems**\" by Hazem Fahmy, Fabrizio Pastore, Lionel Briand, and Thomas Stifter published in [ACM Transactions on Software Engineering](https://dl.acm.org/doi/10.1145/3569935); available for [download](https://arxiv.org/abs/2204.00480).\n",
                "type": "Text_excerpt",
                "original_header": "Introduction",
                "parent_header": [
                    "SEDE (Simulator-based Explanations of DNN-Errors)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        },
        {
            "result": {
                "value": "To support safety analysis practices, we propose SEDE, a technique that generates readable descriptions for commonalities in failure-inducing, real-world images and improves the DNN through effective retraining. SEDE leverages the availability of simulators, which are commonly used for cyber-physical systems. It relies on genetic algorithms to drive simulators towards the generation of images that are similar to failure-inducing, real-world images in the test set; it then employs rule learning algorithms to derive expressions that capture  commonalities in terms of  simulator parameter values. The derived expressions are then used to generate additional images to retrain and improve the DNN. With DNNs performing in-car sensing tasks, SEDE successfully characterized hazard-triggering events leading to a DNN accuracy drop. Also, SEDE enabled retraining leading to significant improvements in DNN accuracy, up to 18 percentage points.\n",
                "type": "Text_excerpt",
                "original_header": "Project Description",
                "parent_header": [
                    "SEDE (Simulator-based Explanations of DNN-Errors)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "It contains the following folders for evaluation:\n* 'SEDE Expressions' contains the PDF files with the expressions generated by SEDE for each case study DNN.\nFor each RCC, the expression contains the constraints for the rules generated by PART (in bold) and the constraints generated by SEDE for the simulator parameter values in common for both safe and unsafe images. \n* 'RQ1' contains a folder for each case study DNN ('HPD-F', 'HPD-H', 'FLD'). Inside, you can find a folder for each RCC; \nsuch folder contains the real-world images belonging to the cluster along with the images generated by SEDE, NSGA-II \nand DeepNSGA-II in four different experiments.\nE.g.: 'RQ1/HPD-F/RCC-1' contains 'SEDE' and 'NSGA-II' and \u2018HUDD', where \u2018HUDD\u2019 contains the real-world images in the cluster generated by HUDD. For \u2018FLD\u2019, the clusters are not included in the package due to copyrights purposes. \u2018SEDE\u2019, \u2018DeepNSGA-II\u2019 and \u2018NSGA-II\u2019 contains folders named \u2018Run-1\u2019, \u2018Run-2\u2019, \u2018Run-3\u2019, and \u2018Run-4\u2019, where each contains the images generated in each run reported for RQ1. Inside each folder, you can find \u2018diversity.npy\u2019 which reports the diversity observed over time (RQ1.1), \u2018indvidiuals.npy\u2019 which reports the percentage of individuals observed over time (RQ1.2), and \u2018clusters.npy\u2019 which reports the percentage of covered clusters observed over time (RQ1.3). \n* \u2018RQ2-3\u2019 contains a folder for each case study DNN (\u2018HPD-F\u2019, \u2018HPD-H\u2019, \u2018FLD\u2019) with a folder for each RCC containing the images generated and evaluated by SEDE for these RQs. Since both RQ2 and RQ3 evaluate the same images generated by SEDE in Step 2.1, they are combined in a single folder. \n* 'RQ4' contains a folder for each case study DNN ('HPD-F', 'HPD-H', 'FLD') with images generated according to SEDE expressions for each cluster and the obtained accuracy.\nE.g.: 'RQ4/HPD-F/RCC-1_500_10.2%.gif' where 500 is the number of images and 10.2% is the obtained accuracy. \n",
                "original_header": "Contents"
            },
            "confidence": 0.9470582535151161,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "SEDE",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "SNTSVV/SEDE",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/SNTSVV/SEDE/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/SNTSVV/SEDE/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "autonomous-driving, machine-learning, search-based-software-engineering, software-debugging, software-engineering, software-maintenance, software-testing",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/SNTSVV/SEDE/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 1006861
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "The package contains the python code implementation of the SEDE approach and the files used to evaluate RQ1-5 (SEDE_RQx.py) along with IEE simulators and DeepJanus adoption of our case studies. We modified the implementation of DeepJanus for their BeamNG case study with the following changes:\n* individual.py: we do not deal with a pair of images but only one image; distance computation is performed directly in the archive class, where we import \u201cdoParamDist()\u201d from \u201csearchModule.py\u201d \n* core.nsga2.py: \n  * the budget is provided as execution time, not number of generations \n  * ProblemClass.final_population is assigned with the population stored in the archive. The assignment occurs in \u201cArchive.archive_metrics()\u201d. This is slightly different from DeepJanus where the archive is stored inside BeamNGProblem. \n* core.archive_impl.py: the SmartArchive() function has been modified to add only individuals that are inside the cluster (F2 <=1); the distance function is replaced by ours (cosine parameters similarity) \n\nTo run the tool you need to have the case studies setup in a separated directory and then generate HUDD clusters using the command\n\n> python SEDE.py -o ./HPD -SEDE HUDD\n\nTo run SEDE, you need to specify the IEE-Face-Simulator version (options are 1 or 2) and the algorithm to use (options are SEDE or DeepJanus)\n\n> python SEDE.py -o ./HPD -iee 1 -SEDE SEDE\n> python SEDE.py -o ./HPD -iee 1 -SEDE DeepJanus\n\nTo run the evaluation you need to use the following command:\n\n> python SEDE.py -SEDE RQ1\n\nwhere RQx is the RQ to be evaluated (options are RQ1, RQ2, RQ3, RQ4, RQ5)\nN.B.: for RQ1 you need to have the RQ1 directory shared with the replicability package inside the parent directory of this file\n\n",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "SEDE (Simulator-based Explanations of DNN-Errors)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "SEDE is a toolset that might be used to generate explanations for DNN errors with any simulator.\nHowever, for our experiments we rely on the faces simulator developed by IEE S.A. (https://iee-sensing.com)\nWe refer to such simulator as IEE-Face-Simulator.\nThe released implementation of SEDE invokes the IEE-Face-Simulator through a program call (i.e., not through APIs).\nSEDE makes use of two versions of IEE-Face-Simulator, v0.5, which is in directory IEE_V1, and v1.0, which is in directory IEE_V2.\n\nBoth the two versions of the IEE-Face-Simulator are released with GPL v3 licence (see files 'gpl-3.0.txt' in both directories).\nThe directory IEEPackage is Copyright (C) 2018-2022 IEE S.A. (https://iee-sensing.com) released with GPL v3 licence.\n",
                "type": "Text_excerpt",
                "original_header": "NOTICE on dependencies and libraries",
                "parent_header": [
                    "SEDE (Simulator-based Explanations of DNN-Errors)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you use our work, please cite SEDE in your publications. Here is an example BibTeX entry:\n```\n@ARTICLE{Fahmy_SEDE,\n  doi = {10.1145/3569935},\n  url = {https://doi.org/10.1145/3569935},\n  author = {Fahmy, Hazem and Pastore, Fabrizio and Briand, Lionel and Stifter, Thomas},\n  keywords = {Software Engineering (cs.SE), Machine Learning (cs.LG), FOS: Computer and information sciences, FOS: Computer and information sciences},\n  title = {Simulator-based explanation and debugging of hazard-triggering events in DNN-based safety-critical systems},\n  publisher = {Association for Computing Machinery},\n  address = {New York, NY, USA},\n  journal = {ACM Trans. Softw. Eng. Methodol.},\n  issn = {1049-331X},\n  year = {2022},\n  month = {oct}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Reference:",
                "parent_header": [
                    "SEDE (Simulator-based Explanations of DNN-Errors)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        },
        {
            "result": {
                "value": "@article{Fahmy_SEDE,\n    month = {oct},\n    year = {2022},\n    issn = {1049-331X},\n    journal = {ACM Trans. Softw. Eng. Methodol.},\n    address = {New York, NY, USA},\n    publisher = {Association for Computing Machinery},\n    title = {Simulator-based explanation and debugging of hazard-triggering events in DNN-based safety-critical systems},\n    keywords = {Software Engineering (cs.SE), Machine Learning (cs.LG), FOS: Computer and information sciences, FOS: Computer and information sciences},\n    author = {Fahmy, Hazem and Pastore, Fabrizio and Briand, Lionel and Stifter, Thomas},\n    url = {https://doi.org/10.1145/3569935},\n    doi = {10.1145/3569935},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1145/3569935",
                "title": "Simulator-based explanation and debugging of hazard-triggering events in DNN-based safety-critical systems",
                "author": "Fahmy, Hazem and Pastore, Fabrizio and Briand, Lionel and Stifter, Thomas",
                "url": "https://doi.org/10.1145/3569935"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        }
    ],
    "acknowledgement": [
        {
            "result": {
                "value": "This project has received funding from IEE Luxembourg, Luxembourg\u2019s National Research Fund (FNR) under grant BRIDGES2020/IS/14711346/FUNTASY, the European Research Council (ERC) under the European Union\u2019s Horizon 2020 research and innovation programme (grant agreement No 694277), and NSERC of Canada under the Discovery and CRC programs. Authors would like to thank Jun Wang for his contribution to IEE simulators. The experiments presented in this paper were carried out using the HPC facilities of the University of Luxembourg (see http://hpc.uni.lu).\n",
                "type": "Text_excerpt",
                "original_header": "Acknowledgments:",
                "parent_header": [
                    "SEDE (Simulator-based Explanations of DNN-Errors)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "SEDE (Simulator-based Explanations of DNN-Errors)"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2204.00480"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/SNTSVV/SEDE/main/README.md"
        }
    ]
}