{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 21:20:55"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/JohnnyPeng18/HiTyper",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "JohnnyPeng18",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-02-04T17:47:43Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-07T08:32:55Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "This is the tool released in ICSE 2022 paper \"Static Inference Meets Deep Learning: A Hybrid Type Inference Approach for Python\"",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The general methdology of HiTyper is: \n",
                "original_header": "Methdology"
            },
            "confidence": 0.9116584066081873,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "For the definition of metrics used here, please also refer to the paper. These metrics can be regarded as a kind of \"recall\", which evaluates the coverage of HiTyper on a specific dataset. We do not show the \"precision\" here as HiTyper only outputs results when it does not observe any violations with current typing rules and TDG. \nIn any case, you must also prepare the source files for static analysis. \n",
                "original_header": "Experiment Results"
            },
            "confidence": 0.939054109305222,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- Add supports for inter-procedural analysis\n- Add supports for types from third-party modules\n- Add supports for external function calls\n- Add supports for stub files\n \n",
                "original_header": "Todo"
            },
            "confidence": 0.9110160993706196,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "HiTyper",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "JohnnyPeng18/HiTyper",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/JohnnyPeng18/HiTyper/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/JohnnyPeng18/HiTyper/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 40,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/JohnnyPeng18/HiTyper/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 528081
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "1. Install HiTyper from source\n\nTo use HiTyper on your own computer, you can build from source: (If you need to modify the source code of HiTyper, please use this method and re-run the `pip install .` after modification each time)\n\n```sh\ngit clone https://github.com/JohnnyPeng18/HiTyper.git && cd HiTyper\npip install .\n```\n\n2. Install HiTyper using `pip`\n\nYou can install the latest version of HiTyper by using the following command:\n\n```sh\npip install hityper\n```\n\n**Requirements:**\n\n- Python>=3.9\n- Linux\n\nHiTyper requires running under Python >= 3.9 because there are a lot of new nodes introduced on AST from Python 3.9. However, HiTyper can analyze most files written under Python 3 since Python's AST is backward compatible.\n\nYou are recommended to use `Anaconda` to create a clean Python 3.9 environment and avoid most dependency conflicts:\n\n````sh\nconda create -n hityper python=3.9\n````\n",
                "type": "Text_excerpt",
                "original_header": "Install",
                "parent_header": [
                    "HiTyper"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "You can use the following command to reproduce the above results:\n```sh\nhityper eval -g ManyTypes4Py_gts_test_verified.json -c ManyTypes4Py_gts_test_verified_detailed.json -u ManyTypes4Py_test_usertypes.json \n```\n \nIf you want to evaluate HiTyper on other datasets, please generate files with the same format with `ManyTypes4Py_gts_test_verified.json`, `ManyTypes4Py_gts_test_verified_detailed.json`, or you can modify the code in `__main__.py`. To check a type's category, you can use `hityper.typeobject.TypeObject.checkType()`. \nIn any case, you must also prepare the source files for static analysis. \n",
                "original_header": "Experiment Results"
            },
            "confidence": 0.9863543319437548,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- Add supports for inter-procedural analysis\n- Add supports for types from third-party modules\n- Add supports for external function calls\n- Add supports for stub files\n \n",
                "original_header": "Todo"
            },
            "confidence": 0.9613827113525354,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Currently HiTyper has the following command line options: (Some important settings are stored in file `config.py`, you may need to modify it before running HiTyper)\n",
                "type": "Text_excerpt",
                "original_header": "Usage",
                "parent_header": [
                    "HiTyper"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "value": "```sh\nusage: hityper findusertype [-h] [-s SOURCE] [-p REPO] [-g GROUNDTRUTH] [-c CORE] [-v] [-d OUTPUT_DIRECTORY]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        Path to a Python source file\n  -p REPO, --repo REPO  Path to a Python project\n  -g GROUNDTRUTH, --groundtruth GROUNDTRUTH\n                        Path to a ground truth file\n  -c CORE, --core CORE  Number of cores to use when collecting user-defined types\n  -v, --validate        Validate the imported user-defined types by finding their implementations\n  -d OUTPUT_DIRECTORY, --output_directory OUTPUT_DIRECTORY\n                        Path to the store the usertypes\n```\n\n**Example of collecting user-defined types in source files:**\n\n```sh\nhityper findusertype -s python_project_repo/test.py -p python_project_repo -v -d outputs\n```\n\n*This command generates the user-defined types collected by HiTyper and save them as `.json` files under `outputs/` folder.*\n\n`-p` option is required here, if you do not specify `-s`, the HiTyper will collect user-defined types in all files of repo specified by `-p`.\n\n**[Newly Added 6 Aug]**\n\nWe add a option to automatically generate all user-defined type files that a ground truth dataset needs to evaluate HiTyper.\n\n**Example of collecting user-defined types in groundtruth datasets:**\n\n```sh\nhityper findusertype -g groundtruth.json -p repo_prefix -c 60 -d outputs\n```\n\n*This command generates the user-defined types in files indicates by `groundtruth.json` collected by HiTyper and save them as `.json` files under `outputs/` folder.*\n\nFor the `groundtruth.json`, you need to use the same file in `hityper eval` command or generate it by using `hityper preprocess` command.\n\n`-p repo_prefix` is an optional argument here, if the filenames in `groundtruth.json` are the absolute paths then you do not need to specify `-p`, otherwise use `-p` to indicate which folder the source files are stored.\n\nThe collection of all user-defined types for a large dataset is quite slow, try to specify a large number of cores used to make this process faster.\n",
                "type": "Text_excerpt",
                "original_header": "findusertype",
                "parent_header": [
                    "HiTyper",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "value": "```sh\nhityper gentdg [-h] [-s SOURCE] -p REPO [-o] [-l LOCATION] [-a] [-c] [-d OUTPUT_DIRECTORY] [-f {json,pdf}]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        Path to a Python source file\n  -p REPO, --repo REPO  Path to a Python project\n  -o, --optimize        Remove redundant nodes in TDG\n  -l LOCATION, --location LOCATION\n                        Generate TDG for a specific function\n  -a, --alias_analysis  Generate alias graphs along with TDG\n  -c, --call_analysis   Generate call graphs along with TDG\n  -d OUTPUT_DIRECTORY, --output_directory OUTPUT_DIRECTORY\n                        Path to the generated TDGs\n  -f {json,pdf}, --output_format {json,pdf}\n                        Formats of output TDGs\n```\n\n**Example:**\n\n```\nhityper gentdg -s python_project_repo/test.py -p python_project_repo -d outputs -f json -o\n```\n\n*This command generates the TDG for all functions in file `python_project_repo/test.py` and save them into `outputs` folder.* \n\nNote that if you choose `json` format to save TDG, it will be only ONE `json` file that contains all TDGs in the source file. However, if you choose `pdf` format to save TDG, then there will be multiple `pdf` files and each one correspond to one function in the source file. This is because a pdf file can hardly contain a large TDG for every functions.\n\nFor the location indicated by `-l`, use the format `funcname@classname` and use `global` as the classname if the function is a global function.\n\nHiTyper uses [PyCG](https://github.com/vitsalis/PyCG) to build call graphs in call analysis. Alias analysis and call analysis are temporarily built-in but HiTyper does not use them in inference. Further updates about them will be involved in HiTyper. \n",
                "type": "Text_excerpt",
                "original_header": "gentdg",
                "parent_header": [
                    "HiTyper",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "value": "```sh\nhityper infer [-h] [-s SOURCE] -p REPO [-l LOCATION] [-d OUTPUT_DIRECTORY] [-m RECOMMENDATIONS] [-t] [-n TOPN]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -s SOURCE, --source SOURCE\n                        Path to a Python source file\n  -p REPO, --repo REPO  Path to a Python project\n  -l LOCATION, --location LOCATION\n                        Type inference for a specific function\n  -d OUTPUT_DIRECTORY, --output_directory OUTPUT_DIRECTORY\n                        Path to the generated TDGs\n  -m RECOMMENDATIONS, --recommendations RECOMMENDATIONS\n                        Path to the recommendations generated by a DL model\n  -t, --type4py         Use Type4Py as the recommendation model\n  -n TOPN, --topn TOPN  Indicate the top n predictions from DL models used by HiTyper\n```\n\n**Example:**\n\n```\nhityper infer -s python_project_repo/test.py -p python_project_repo -d outputs -n 1 -t \n```\n\n*This command generates the inferred types for all variables, arguments and return values in the source file and save them into `output` folder.*\n\nIf you do not specify `-m` or `-t` option, then HiTyper will only use the static inference part to infer types. Static inference generally takes several minutes.\n\nFor the location indicated by `-l`, use the format `funcname@classname` and use `global` as the classname if the function is a global function.\n\n**Recommendation Model:**\n\nNote that HiTyper natively supports the recommendations from Type4Py and it invokes the following API provided by Type4Py to get recommendations if you use option `-t`:\n\n```\nhttps://type4py.com/api/predict?tc=0\n```\n\n**This will upload your file to the Type4Py server!** If you do not want to upload your file, you can use the [docker](https://github.com/saltudelft/type4py/wiki/Using-Type4Py-Rest-API) provided by Type4Py and changes the API in `config.py` into:\n\n```\nhttp://localhost:PORT/api/predict?tc=0\n```\n\nAccording to our experiments, the Type4Py model has much lower performance by quering the API above, you are suggested to train the model locally and generate the recommendation file which can be passed to `-m`.\n\n**Note: HiTyper's performance deeply depends on the maximum performance of recommendation model (especially the performance to predict argument types). Type inference of HiTyper can fail if the recommendation model cannot give a valid prediction while static inference does not work!** \n\nIf you want to use another more powerful model, you write code like `__main__.py` to adapt HiTyper to your DL model.\n",
                "type": "Text_excerpt",
                "original_header": "infer",
                "parent_header": [
                    "HiTyper",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "value": "```sh\nhityper eval [-h] -g GROUNDTRUTH -c CLASSIFIED_GROUNDTRUTH -u USERTYPE [-m RECOMMENDATIONS] [-t] [-n TOPN]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -g GROUNDTRUTH, --groundtruth GROUNDTRUTH\n                        Path to a ground truth dataset\n  -c CLASSIFIED_GROUNDTRUTH, --classified_groundtruth CLASSIFIED_GROUNDTRUTH\n                        Path to a classified ground truth dataset\n  -u USERTYPE, --usertype USERTYPE\n                        Path to a previously collected user-defined type set\n  -m RECOMMENDATIONS, --recommendations RECOMMENDATIONS\n                        Path to the recommendations generated by a DL model\n  -t, --type4py         Use Type4Py as the recommendation model\n  -n TOPN, --topn TOPN  Indicate the top n predictions from DL models used by HiTyper\n```\n\n**Example:**\n\n```sh\nhityper eval -g groundtruth.json -c detailed_groundtruth.json -u usertypes.json -n 1 -t\n```\n\n*This command evaluates the performance of HiTyper on a pre-defined groundtruth dataset. It will output similar results like stated in `Experiment Results` part.*\n\nBefore evaluating Hityper using this command, please use `hityper findusertype` command to generate `usertypes.json`. This typically takes several hours, depending on the number of files.\n\nThis option is designed only for future research evaluation.\n",
                "type": "Text_excerpt",
                "original_header": "eval",
                "parent_header": [
                    "HiTyper",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "value": "```sh\nusage: hityper preprocess [-h] -p JSON_REPO [-d OUTPUT_DIRECTORY]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -p JSON_REPO, --json_repo JSON_REPO\n                        Path to the repo of JSON files\n  -d OUTPUT_DIRECTORY, --output_directory OUTPUT_DIRECTORY\n                        Path to the transformed datasets\n```\n\n**Example:**\n\n```sh\nhityper preprocess -p ManyTypes4PyDataset/processed_projects_complete -d outputs\n```\n\n*This command transforms the json files in ManyTypes4Py datasets into the `groundtruth.json` and `detailed_groundtruth.json` files that required by the `hityper eval` command.*\n\nThis command is to facilitate the researchers that use ManyTypes4Py dataset and want to evaluate HiTyper in it.\n\nIf you want to run HiTyper in other datasets, please follow the same logic in `transformDataset` function of  `HiTyper/hityper/utils.py` to write a script.\n",
                "type": "Text_excerpt",
                "original_header": "Preprocess",
                "parent_header": [
                    "HiTyper",
                    "Usage"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you use HiTyper in your research, please cite us:\n\n```latex\n@inproceedings{peng22hityper,\nauthor = {Peng, Yun and Gao, Cuiyun and Li, Zongjie and Gao, Bowei and Lo, David and Zhang, Qirun and Lyu, Michael},\ntitle = {Static Inference Meets Deep Learning: A Hybrid Type Inference Approach for Python},\nyear = {2022},\nisbn = {9781450392211},\npublisher = {Association for Computing Machinery},\naddress = {New York, NY, USA},\nurl = {https://doi.org/10.1145/3510003.3510038},\ndoi = {10.1145/3510003.3510038},\nbooktitle = {Proceedings of the 44th International Conference on Software Engineering},\npages = {2019\u20132030},\nnumpages = {12},\nlocation = {Pittsburgh, Pennsylvania},\nseries = {ICSE '22}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Cite Us",
                "parent_header": [
                    "HiTyper"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{peng22hityper,\n    series = {ICSE '22},\n    location = {Pittsburgh, Pennsylvania},\n    numpages = {12},\n    pages = {2019\u20132030},\n    booktitle = {Proceedings of the 44th International Conference on Software Engineering},\n    doi = {10.1145/3510003.3510038},\n    url = {https://doi.org/10.1145/3510003.3510038},\n    address = {New York, NY, USA},\n    publisher = {Association for Computing Machinery},\n    isbn = {9781450392211},\n    year = {2022},\n    title = {Static Inference Meets Deep Learning: A Hybrid Type Inference Approach for Python},\n    author = {Peng, Yun and Gao, Cuiyun and Li, Zongjie and Gao, Bowei and Lo, David and Zhang, Qirun and Lyu, Michael},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1145/3510003.3510038",
                "title": "Static Inference Meets Deep Learning: A Hybrid Type Inference Approach for Python",
                "author": "Peng, Yun and Gao, Cuiyun and Li, Zongjie and Gao, Bowei and Lo, David and Zhang, Qirun and Lyu, Michael",
                "url": "https://doi.org/10.1145/3510003.3510038"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        }
    ],
    "contact": [
        {
            "result": {
                "value": "We actively maintain this project and welcome contributions. \n\nIf you have any question, please contact research@yunpeng.work.\n\n",
                "type": "Text_excerpt",
                "original_header": "Contact",
                "parent_header": [
                    "HiTyper"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "HiTyper"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/imgs/workflow.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2105.03595"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JohnnyPeng18/HiTyper/main/README.md"
        }
    ]
}