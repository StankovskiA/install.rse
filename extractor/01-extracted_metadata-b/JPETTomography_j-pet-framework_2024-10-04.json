{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:48:27"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/JPETTomography/j-pet-framework",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "JPETTomography",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2016-06-17T17:17:42Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-05-13T10:20:11Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "J-PET Analysis Framework",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "**J-PET Analysis Framework** is a flexible data processing and analysis environment developed for cutting edge Positron Emmision Tomography experiment conducted at Jagiellonian University in Krak\u00f3w. The experiment is focused on prototyping a low-cost, full-body tomograph, allowing early stage cancer cells imaging, as well as scientific investigations focusing on decays of positronium atom.   \n**Framework** serves as a backbone system for the reconstruction algorithms and calibration procedures used during the data processing and standardizes the common operations, e.g: input/output process, access to the detector geometry parameters and more. It is written in C++ using the object-oriented approach. It is based on the ROOT libraries combined with some BOOST packages. The quality of the code is assured by the automatized set of unit tests. The documentation of the code is generated by Doxygen. \n",
                "original_header": "What is it?"
            },
            "confidence": 0.985835285616774,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "J-PET Analysis Framework is being developed by [Wojciech Krzemien](https://github.com/wkrzemien), [Aleksander Gajos](https://github.com/alekgajos), [Kamil Rakoczy](https://github.com/grey277), [Krzysztof Kacprzak](https://github.com/kkacprzak) and [Kamil Dulski](https://github.com/kdulski).  \nThe former developers are [Szymon Nied\u017awiecki](https://github.com/wictus), Karol Stola, Damian Trybek, Andrzej Gruntowski, Klara Muzalewska, Oleksandr Rundel, Daria Kisielewska and Tomasz Kisielewski.\n \n",
                "original_header": "Authors"
            },
            "confidence": 0.912279543646858,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "j-pet-framework",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "JPETTomography/j-pet-framework",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 22,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/JPETTomography/j-pet-framework/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 976591
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CMake",
                "name": "CMake",
                "type": "Programming_language",
                "size": 34854
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 25987
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 14686
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 4679
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/66781833",
                "tag": "v10.0",
                "name": "Version 10.0",
                "author": {
                    "name": "alekgajos",
                    "type": "User"
                },
                "description": "Changes and features introduced in version 10:\r\n=============================================\r\n\r\n## Building and compatibility:\r\n* Support and tests for Ubuntu 22.04, ROOT 6.26/02 and g++ 11.2\r\n\r\n## Direct processing without intermediate files\r\n* enabled with the `-d ` command line option\r\n* optional processing of data by subsequent modules without writing of data to intermediate ROOT files netween them\r\n* faster (up to 3x), requires less disk space and imposes less load on disks\r\n\r\n## New hit data classes\r\n* new hierarchy of classes representing hits (JPetBaseHit, JPetRawMCHit JPetMCRecoHit, JPetRecoHit, JPetPhysRecoHit)\r\n* __note__: these classes were introduced in version 10 but are not yet used; their usage will be enabled in the next version\r\n\r\n## Changes preparing for compatibility with the Modular J-PET data processing\r\n\r\n## New user analysis and calibration examples:\r\n1.  `TimeCalibration_lifetime` is an analysis producing J-PET time calibration using data taken for a single source inside the detector,\r\n2. `TOTAnalysis` is a set of modules for performing the study of a relationship between energy deposition by incident photon in interaction with plastic scintillator and the measured TOT value,\r\n3. The new `Downscaler` module in the `LargeBarrelAnalysis` example is a simple filtering module which randomly accepts events with certain number of hits at certain rates provided by the user.",
                "tarball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/tarball/v10.0",
                "zipball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/zipball/v10.0",
                "html_url": "https://github.com/JPETTomography/j-pet-framework/releases/tag/v10.0",
                "url": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/66781833",
                "release_id": 66781833,
                "date_created": "2022-05-13T10:20:02Z",
                "date_published": "2022-05-13T10:26:05Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/27826703",
                "tag": "v9.0",
                "name": "Version 9.0",
                "author": {
                    "name": "alekgajos",
                    "type": "User"
                },
                "description": "Changes and features introduced in version 9:\r\n=============================================\r\n\r\n## Building and compatibility:\r\n* Added support for ROOT version 6.20\r\n* Using the C++14 standard by default\r\n\r\n## Processing J-PET-Geant4 MC simulations:\r\n* Fixed incorrect generation of hit times (previously the order of hits in a time window was inverted)\r\n* Fixed initialization of random number generators used for distribution of hits in time and for adding experimental smearing; previously the generator was initialized identically for each simultaneously started process, resulting in the same random sequence; Now each process is initialized with a unique seed by default; Moreover, the user can provide their own seed through user options.\r\n* New user interface for controlling experimental smearing added to generated MC; arbitrary smearing functions and their parameters are now passed to the program through user options.\r\n\r\n## Improvements on image reconstruction algorithms:\r\n* Several corrections of stand-alone implementations of FBP, TOF-FBP, KDE image reconstruction algorithms\r\n* Improved and refactored filters e.g. Cosine, Hamming, Hanh, SheppLogan, Ridgelet\r\n* Options to add attenuation corrections\r\n* Saving sinograms to file\r\n\r\n##  ToT to energy conversion:\r\n* Add mechanism to convert energy to ToT  and vice versa based on the user-provided functions from user options.\r\n\r\n##  Improved handling of histograms in analysis modules:\r\n* New JPetStatistics interface for creating and filling histograms does not allow for program crashes in case a histogram is referenced which was not defined before; Now in such case a warning is issued and the action on the non-existent histogram is ignored.\r\n* JPetStatistics is now using the `TH*D` classes for histograms by default (but also accepts `TH*F` as before) allowing to avoid overflow of bins in most cases\r\n* Most examples now use the new JPetStatistics interface. See e.g. the LargeBarrelAnalysis modules for an example how to use it.\r\n\r\n## New scripts facilitating running multiple parallel jobs\r\n* The `scripts` subdirectory of the [examples repository](https://github.com/JPETTomography/j-pet-framework-examples) now contains new useful scripts for convenient processing of multiple data files in parallel with programs based on the framework.\r\n\r\n##  Tests improvement:\r\n* Rewritten unit tests configuration from Travis CI to  Github Actions CI\r\n\r\n",
                "tarball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/tarball/v9.0",
                "zipball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/zipball/v9.0",
                "html_url": "https://github.com/JPETTomography/j-pet-framework/releases/tag/v9.0",
                "url": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/27826703",
                "release_id": 27826703,
                "date_created": "2020-10-20T22:06:06Z",
                "date_published": "2020-10-21T10:02:18Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/21343088",
                "tag": "v8.1",
                "name": "Version 8.1",
                "author": {
                    "name": "alekgajos",
                    "type": "User"
                },
                "description": "Important notice: \r\n====================\r\n**this release contains a fix critical for MC processing.**\r\nIf you intend to analyze MC files and are using version 7.0 or 8.0, please update to this version first.\r\n\r\nBug fixes:\r\n=========\r\n* Fixed distribution of MC-simulated hits in time\r\n\r\nNew functionality:\r\n===================\r\n* Repetitive messages in the log are now counted and summarized to avoid huge log files\r\n* Warnings and errors from ROOT are redirected to the framework log files\r\n* MC hits can be tested for originating from the same simulated event\r\n\r\nDocumentation:\r\n============\r\n\r\n[A user guide for version 8 is available at PetWiki](http://koza.if.uj.edu.pl/petwiki/images/a/a9/J-PET_Framework_Guide_v8.pdf)\r\n\r\nThe updated reference manual for version 8 is available here:\r\nhttp://sphinx.if.uj.edu.pl/framework/doc/\r\n",
                "tarball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/tarball/v8.1",
                "zipball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/zipball/v8.1",
                "html_url": "https://github.com/JPETTomography/j-pet-framework/releases/tag/v8.1",
                "url": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/21343088",
                "release_id": 21343088,
                "date_created": "2019-11-09T10:44:57Z",
                "date_published": "2019-11-09T23:45:34Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/20539716",
                "tag": "v8.0",
                "name": "Version 8.0",
                "author": {
                    "name": "alekgajos",
                    "type": "User"
                },
                "description": "Changes and features introduced in version 8:\r\n=============================================\r\n\r\n## Building and compatibility:\r\n\r\n* New CMake configuration scheme allowing for a modular install of Unpacker, core Framework library and Examples suitable e.g. for installation at computing centers (e.g. CI\u015a)\r\n* Minimum CMake version at least 3.1 is required\r\n* Support for ROOT 5 is dropped\r\n* ROOT version at least 6.10 is required\r\n* g++ version at least 5 is required\r\n* Files generated with Framework version 7 should be compatible with version 8\r\n* Version 8 was tested on the \u015awierk Computing Center (CI\u015a) cluster\r\n\r\n## Event Display:\r\n\r\n* Event Display is updated and compatible with the data files produced with this Framework version\r\n\r\n## MC processing:\r\n\r\n* Improvements of MC files processing in the framework allowing to access generated MC information on events\r\n* Users can add custom smearing function to be applied to generated MC\r\n\r\n## Other core improvements:\r\n\r\n* Added a cached ROOT's TF1 implementation as a tool for fast application of Energy<->TOT calibration with an arbitrary relation\r\n* Adapted Clang-formatter for automatic code formatting\r\n* Various fixes and cleanups\r\n\r\n## Examples:\r\n\r\n* ToTConverter class was added to LargeBarrelAnalysis example, allowing for Energy<->TOT calibration\r\n* Iterative time calibration example was added\r\n* Time Walk Calibration example was added\r\n* Example of adding a user-provided custom data class was added\r\n\r\nDocumentation:\r\n============\r\n\r\n[A user guide for version 8 is available at PetWiki](http://koza.if.uj.edu.pl/petwiki/images/a/a9/J-PET_Framework_Guide_v8.pdf)\r\n\r\nThe updated reference manual for version 8 is available here:\r\nhttp://sphinx.if.uj.edu.pl/framework/doc/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                "tarball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/tarball/v8.0",
                "zipball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/zipball/v8.0",
                "html_url": "https://github.com/JPETTomography/j-pet-framework/releases/tag/v8.0",
                "url": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/20539716",
                "release_id": 20539716,
                "date_created": "2019-10-08T07:50:19Z",
                "date_published": "2019-10-08T08:22:38Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/14867494",
                "tag": "v7.0",
                "author": {
                    "name": "alekgajos",
                    "type": "User"
                },
                "description": "Changes and features introduced in version 7:\r\n=============================================\r\n\r\n## Building and compatibilty:\r\n\r\nThe framework can now be built on any of the following configurations:\r\n* g++ version older than 5, ROOT 5 (e.g. Ubuntu 14)\r\n* g++ version 5 and newer, ROOT 6 (e.g. Ubuntu 16, Ubuntu 18)\r\n\r\nNo manual compilation of library dependencies is required anymore.\r\nThe number of library dependencies was also reduced.\r\n\r\n## Unpacking of HLD files\r\n\r\n* The rough pairing of TDC signals from leading and trailing edges was removed from the unpacking level and replaced with more sophisticated analysis at a higher level (see further sections). \r\n* Unpacking speed was improved.\r\n* Paths to ROOT files with calibrations of TOT stretcher offsets and TDC non-linearity (calibrations applied at the unpacking level) are now consistently passed to the program in the same JSON file as any other user parameters. Thus all paths to calibration files are now defined in a single JSON file and there is no more need to put any paths in the XML config file or on the program command line. The relevant options to include in the JSON file are `Unpacker_TOToffsetCalib_std::string` and `Unpacker_TDCnonlinearityCalib_std::string` - see the `userParams.json` file bundled with the LargeBarrelAnalysis example.\r\n* Unpacking is now resistant to corrupted and truncated HLD files. Corrupted sections are ignored without interrupting the analysis of the whole file and in case of truncated files (created when the DAQ was stopped in the middle of a file), the files are unpacked until the last reasonable event without crashing the analysis program. \r\n* The date and time of the first event written to a HLD file is now extracted from that file and stored in the unpacked ROOT file as a TString object.\r\n\r\n## Filtering of incorrect lead-trail sequences of TDC times\r\n\r\nEvery data class was extended with a flag indicating whether is was classified as *Good* or *Corrupted*. Signal-Channel (SigCh) objects belonging to an incorrect sequence are now marked the following way:\r\n\r\n* in a sequence of more than 1 leading-edge signal in a row, all but the last one are marked as *Corrupted*\r\n* in a sequence of more than 1 trailing-edge signal in a row, all but the first one are marked as *Corrupted*\r\n\r\nThe *Corrupted* classification is inherited by higher-level data objects, i.e. a JPetRawSignal containing at least one corrupted JPetSigCh is also considered corrupted, a JPetHit with a corrupted JPetPhysSignal at at least one end is corrupted etc.\r\n\r\nThe user can decide at every stage of the analysis whether to use the objects marked as *Corrupted* or to reject them. This is controlled by the following user parameters for the standard analysis modules from the LargeBarrelAnalysis example:\r\n* SignalFinder_UseCorruptedSigCh_bool\r\n* SignalTransformer_UseCorruptedSignals_bool\r\n* HitFinder_UseCorruptedSignals_bool\r\n* EventFinder_UseCorruptedHits_bool\r\n\r\nSee the `userParams.json` bundled with the LargeBarrelAnalysis example for sample usage of these parameters.\r\n\r\n## Arbitrary threshold value order\r\n\r\nRather than assuming that threshold A corresponds to the lowest absolute voltage value, the framework now reads the set threshold values from the JSON file with detector setup. Therefore, any arbitrary order of thresholds may be set in the experiment and analyzed correctly.\r\n\r\nThe updated JSON files containing voltages for each threshold are available at PetWiki:\r\nhttp://koza.if.uj.edu.pl/petwiki/index.php/Default_settings_and_parameters_used_in_the_analyses\r\n\r\n## Integration with MC simulations\r\n\r\nThis is the first Framework version which allows to use MC-simulated hits as input to the analysis. Files obtained with the [J-PET Geant4 simulations](https://github.com/JPETTomography/j-pet-geant4) can be used with the `-t mcGeant` command line parameter. See the `MCGeantAnalysis` example in the [Examples repository](https://github.com/JPETTomography/j-pet-framework-examples) for details.\r\n\r\nCurrent status of MC including a list of already produced files which can be used with the Framework-based analyses can be found at the following PetWiki page:\r\nhttp://koza.if.uj.edu.pl/petwiki/index.php/GEANT4_-_current_status.\r\n\r\nProblems and feature requests related to MC simulations should be reported at the respective subproject at the J-PET Redmine:\r\nhttp://sphinx.if.uj.edu.pl/redmine/projects/gate-geant-mc-simulations.\r\n\r\n## Integrated MLEM reconstruction \r\n\r\nThe [MLEM image reconstruction](https://github.com/JPETTomography/j-pet-mlem) was made a submodule of the Framework and can be run transparently as the last stage of a Framework-based analysis.\r\n\r\n## Data streaming examples\r\n\r\n[The J-PET Framework examples repository](https://github.com/JPETTomography/j-pet-framework-examples) now contains examples of data preselection and analysis specific to three chosen classes of data which can be used for streaming of the data:\r\n* [Imaging](https://github.com/JPETTomography/j-pet-framework-examples/tree/master/Imaging)\r\n* [PhysicsAnalysis](https://github.com/JPETTomography/j-pet-framework-examples/tree/master/PhysicAnalysis)\r\n*  [CosmicAnalysis](https://github.com/JPETTomography/j-pet-framework-examples/tree/master/CosmicAnalysis)\r\n\r\n## Iterative tasks\r\n\r\nThe framework can run a single task more than once, either executing a number of iterations specified by the user or repeating until a user-defined logical condition is satisfied. This allows e.g. for creating iterative calibration tasks.\r\n\r\nDocumentation:\r\n============\r\n\r\n[A user guide for version 7 is available at PetWiki](http://koza.if.uj.edu.pl/petwiki/images/6/69/J-PET_Framework_Guide_v7.pdf)\r\n\r\nThe updated reference manual for version 7 is available here:\r\nhttp://sphinx.if.uj.edu.pl/framework/doc/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
                "tarball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/tarball/v7.0",
                "zipball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/zipball/v7.0",
                "html_url": "https://github.com/JPETTomography/j-pet-framework/releases/tag/v7.0",
                "url": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/14867494",
                "release_id": 14867494,
                "date_created": "2019-01-08T23:48:21Z",
                "date_published": "2019-01-10T12:14:34Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/16506406",
                "tag": "v6.0",
                "name": "v6.0",
                "author": {
                    "name": "wkrzemien",
                    "type": "User"
                },
                "description": "# Summary of changes with respect to v5:\r\n* Time Window data scheme \r\n* Improved user options and parameter handling  \r\n* Simplify class computing task hierarchy\r\n* Various fixes and cleanups\r\n* Standard time calibration module\r\n* Standard velocity calibration module\r\n* Event selection scheme\r\n\r\n# Details:\r\n* Time Window data scheme \r\n* Improved user options and parameter handling  \r\n* Simplify class computing task hierarchy\r\n* Remove libconfig++ dependencies\r\n* Updated unpacker module",
                "tarball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/tarball/v6.0",
                "zipball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/zipball/v6.0",
                "html_url": "https://github.com/JPETTomography/j-pet-framework/releases/tag/v6.0",
                "url": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/16506406",
                "release_id": 16506406,
                "date_created": "2017-11-25T22:05:34Z",
                "date_published": "2019-04-02T15:53:44Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/16506440",
                "tag": "v5.0",
                "name": "v5.0",
                "author": {
                    "name": "wkrzemien",
                    "type": "User"
                },
                "description": "# Summary of changes with respect to v4:\r\n* JPetGeomMapping\r\n* User options\r\n* Handling of Unpacker-related command line parameters\r\n* JPetRecoImageTools with sinogram and projection methods\r\n* Remove memory leaks from Unpacker\r\n* Extend zip option to handle xz format\r\n* Test data fetching with checksums \r\n* Changes in Barrel Extensions \r\n* Various fixes and cleanups\r\n\r\nRelated to j-pet-framework-example repository in LargeBarrelExtension case:\r\n* Time sinchronization loader\r\n* Velocity calibration loader\r\n* Signal, hit and event matching algorithms \r\n\r\n# Details:\r\n* JPetGeomMapping - the class that creates the number mapping between the barrel slot numbering and unique identifiers.\r\n* User options - The user can defined additional option from a json file. The user can add special flag to read in a json configuration file with a set of options (key:value) ,which are added to the options read from the command line and propagated to all the analysis modules. \r\n* Handling of Unpacker-related command line parameters. The correction for TOT offsets at trailng edge times can now be applied to data at the level of unpacking the HLD file. The ROOT file containing the corrections can be provided with the \"-c\" flag.\r\nMoreover, the TDC configuration used by the HLD unpacker can now be provided in a XML file with arbitrary path with the \"-p\" flag. (Previously the configuration file name was fixed to \"conf_trb3.xml\" in the current working directory.)\r\n* JPetRecoImageTools - Contains methods to generate sinogram from data matrix, filter sinogram and backproject sinogram back to data matrix (image). Also contains method that allows user to use his own filter in Filtered BackProjection Methods (beta version)\r\n* Remove memory leaks from Unpacker - Memory leaks causing the Framework to use more memory with increasing unpacking time of the HLD file have been fixed and memory usage of the HLD unpacker is now stable.\r\n* Test data fetching with checksums - The test data are now downloaded only once and then they are downloaded based on the checksum list, only if some file is missing or it was modified.\r\n* Extend zip option - input files in xz format can be unzipped. The command line argument was added\r\n* Changes in Barrel Extensions needed for last version of time synchronization software\r\n* Various fixes and cleanups:\r\n  * remove duplicated methods from JPetRawSignal and JPetHit\r\n  * add method .isNullObject() to check is returned reference is dummy in several data and param object classes\r\n  * improve the test summary reporting in Travis\r\n  * extended tests of JPetWriter\r\n  * fix ROOT dictionnary issues due to c++11 code\r\n  * fix JPetEvent bug",
                "tarball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/tarball/v5.0",
                "zipball_url": "https://api.github.com/repos/JPETTomography/j-pet-framework/zipball/v5.0",
                "html_url": "https://github.com/JPETTomography/j-pet-framework/releases/tag/v5.0",
                "url": "https://api.github.com/repos/JPETTomography/j-pet-framework/releases/16506440",
                "release_id": 16506440,
                "date_created": "2017-03-21T17:56:38Z",
                "date_published": "2019-04-02T15:54:56Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "# Installation\n\n## Basic steps\n\n1. Install the required libraries and tools.  \n   Refer to the `Requirements` section of this document for details.  \n   You can find ready commands for some systems in the `Requirements installation` section.\n\n2. Create a directory where the built programs will be placed, e.g. in the main directory:  \n   `mkdir build`  \n   `cd build`\n\n3. Invoke the CMake build tool and provide the path to the source directory as well as path to install.\n   If you created the build directory in the main one and entered `build` as in step 2. then do:  \n   `cmake -DCMAKE_INSTALL_PREFIX=<install_path> ..`\n   If you didn't install Unpacker2 globally on the system also provide path to Unpacker2_DIR:\n   `cmake -DCMAKE_INSTALL_PREFIX=<install_path> -DUnpacker2_DIR=<path_to_unpacker2> ..`\n\n4. To compile the J-PET Framework Library do:  \n   `make`\n\n5. Once the compilation is finished, you can run tests with:\n   `ctest`\n   or install libraries in <install_path> using:\n   `make install`\n\n**NOTE:** Full install procedure with tips and troubleshootung can be found on [PetWiki](http://koza.if.uj.edu.pl/petwiki/index.php/Installing_the_J-PET_Framework_on_Ubuntu)\n\n\n## Code documentation\n\nTo generate the code documentation of the J-PET Framework library, the Doxygen software must be installed.\nTo generate the documentation just go to the j-pet-framework build directory and do:\n```\nmake documentation\n```\nand the documentation will be generated and put in folders named latex and html inside the build directory.\n\n\n## Requirements\n1. gcc\n\n2. [cmake](https://cmake.org/)\n\n3. [ROOT](http://root.cern.ch)  \n   Works with ROOT 6 (tested 6.10/08)\n\n4. [BOOST](https://www.boost.org/)\n\n5. [Unpacker2](https://github.com/JPETTomography/Unpacker2)\n\n6. (Optional)To generate documentation: [Doxygen](www.doxygen.org)\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/INSTALL.md"
        },
        {
            "result": {
                "value": "Please see the file called [INSTALL](INSTALL.md).\n",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "J-PET Analysis Framework"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The latest stable version can be downloaded from the github repository. You must have git client installed and do:\n```\ngit clone https://github.com/JPETTomography/j-pet-framework.git myFramework\n```\n \n",
                "original_header": "Latest Version"
            },
            "confidence": 0.9999999999999716,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake315%2Cdefault_gcc%2Croot618/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake315%2Cdefault_gcc%2Croot618/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake315%2Cdefault_gcc%2Croot618/docker-compose.yml",
                "type": "Url",
                "format": "docker_compose"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake315%2Cdefault_gcc%2Croot618/docker-compose.yml"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake351%2Cdefault_gcc%2Croot612/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake351%2Cdefault_gcc%2Croot612/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake351%2Cdefault_gcc%2Croot612/docker-compose.yml",
                "type": "Url",
                "format": "docker_compose"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake351%2Cdefault_gcc%2Croot612/docker-compose.yml"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake315%2Cdefault_gcc%2Croot618/docker-entrypoint.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/jenkins/ubuntu16%2Ccmake351%2Cdefault_gcc%2Croot612/docker-entrypoint.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/src/thisframework.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "The code documentation can be generated with Doxygen package using:\n\n```\nmake documentation\n```\nin the build directory. The `index.html` file will be available in the `html/` directory located inside the build directory.\n",
                "type": "Text_excerpt",
                "original_header": "Documentation",
                "parent_header": [
                    "J-PET Analysis Framework"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/JPETTomography/j-pet-framework/wiki",
                "format": "wiki"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "In case you want to refer to J-PET Analysis Framework you can use this reference:\n\n> W. Krzemien, A. Gajos, K. Kacprzak, K. Rakoczy, G. Korcyl  \nJ-PET Framework: Software platform for PET tomography data reconstruction and analysis\nSoftwareX 11 (2020) 100487\nDOI:10.1016/j.softx.2020.100487  \ne-Print: arXiv:2002.10183\n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "J-PET Analysis Framework"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        }
    ],
    "contact": [
        {
            "result": {
                "value": "If you have any question or comment please write to:\n[wojciech.krzemien@ncbj.gov.pl](wojciech.krzemien@ncbj.gov.pl)\nor better post it to the [Redmine](http://sphinx.if.uj.edu.pl/redmine/)\n",
                "type": "Text_excerpt",
                "original_header": "Bug Reporting &amp; Contact",
                "parent_header": [
                    "J-PET Analysis Framework"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "J-PET Analysis Framework"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2002.10183\n\n## Bug Reporting & Contact\n\nIf you have any question or comment please write to:\n[wojciech.krzemien@ncbj.gov.pl](wojciech.krzemien@ncbj.gov.pl)\nor better post it to the [Redmine](http://sphinx.if.uj.edu.pl/redmine/)"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/JPETTomography/j-pet-framework/master/README.md"
        }
    ]
}