{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:53:35"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/nantiamak/sql4ml",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "nantiamak",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-07-19T13:32:05Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-09-12T20:40:14Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2019 nantiamak\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/nantiamak/sql4ml/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Translation of supervised machine learning models in SQL to TensorFlow code",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Sql4ml is a Haskell project that takes as input SQL code which defines the objective/cost/loss function of a\nsupervised machine learning model (ML), as well as a set of parameters, and generates TensorFlow (Python API) code\nthat trains this model. \nIt is the prototype that is used in the paper\n\"Nantia Makrynioti, Ruy Ley-Wild and Vasilis Vassalos. sql4ml: a declarative end-to-end workflow for machine learning.\"\n(https://arxiv.org/abs/1907.12415).\n \n",
                "original_header": "sql4ml"
            },
            "confidence": 0.9514382974544028,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/nantiamak/sql4ml/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "sql4ml",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "nantiamak/sql4ml",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/nantiamak/sql4ml/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/nantiamak/sql4ml/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/nantiamak/sql4ml/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Haskell",
                "name": "Haskell",
                "type": "Programming_language",
                "size": 31045
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "TSQL",
                "name": "TSQL",
                "type": "Programming_language",
                "size": 9974
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/nantiamak/sql4ml/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "The software has been tested on macOS High Sierra and Ubuntu 16.04.\n\nTo compile it you need to install the Haskell Platform (https://www.haskell.org/platform/).\nSee also the section on installation on how to build dependent projects.\n",
                "type": "Text_excerpt",
                "original_header": "Requirements",
                "parent_header": [
                    "sql4ml"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/nantiamak/sql4ml/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "Sql4ml uses the open source project queryparser (https://github.com/uber/queryparser), also in Haskell.\nTo build queryparser, follow the instructions on the Github page of the project.\n\nThe sql4ml module is in file sql4ml_translator.hs.\nYou can load the module via ghci.\n\nFile main.hs containts two examples on how to translate SQL to TensorFlow code end-to-end.\n\nTo compile main.hs, run in a terminal:\n\n    ghc -o main main.hs\n\nSql4ml uses the MySQL database (https://www.mysql.com/) for storing data.\nTo run the generated TensorFlow code, you need to install MySQL.\nTo install it follow the instructions in https://www.mysql.com/.\n\nAfter installing MySQL, you can run the SQL scripts in the directory /db_setups to create two toy databases, one based\non the Boston Housing dataset (https://www.cs.toronto.edu/~delve/data/boston/bostonDetail.html) and the other based\non the Iris dataset (https://archive.ics.uci.edu/ml/datasets/iris), which you can find in the directory /data.\n",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "sql4ml"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/nantiamak/sql4ml/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "In file main.hs you can find two examples on how to call function endToEndTranslate, which takes the following input parameters:\n\n* A list of SQL queries defining the objective function of a supervised ML model.\nYou can find two examples of SQL code defining Linear and Logistic Regression in directory working_examples.\n* A list of names of the tables storing the features of the model.\n* A list of columns in the aforementioned tables that store names of features.\n* A list of lists, each of which has the actual names of features stored in each table.\n* The name of the table storing the training observations.\n* The name of the table storing the labels/targets of training observations.\n* The name of the view computing the objective function of the ML model.\n* The username of a user to connect to the database where training data are stored.\n* The password of the same user.\n* The name of the database storing training data.\n* A list of names of the tables storing the weights of the model.\n* A map whose elements consist of the name of a weight table and its dimenions as a list.\n* The number of gradient descent iterations.\n* The learning rate used in gradient descent.\n\nCurrently sql4ml supports the translation of SQL create view queries of the following form,\n\n    CREATE VIEW $(name) AS\n    SELECT $(columns), $(numericExpr)\n    FROM $(tables)\n    WHERE $(joinElement)\n    GROUP BY $(groupingElement)\n\nand generate an equivalent TensorFlow expression as below:\n\n    $(name) = $(translateNumericExpr(numericExpr))\n\nFor examples, check SQL files in the directory /working_examples.\n\n\nTo run main, type in a terminal:\n\n    ./main linear //To generate TensorFlow code for the Linear Regression model in working_examples/linear_regression.sql\n    ./main logistic //To generate TensorFlow code for the Logistic Regression model in working_examples/logistic_regression.sql\n\nThe files with the generated TensorFlow/Python code can be executed like any other TensorFlow program.\n\nYou can also try to translate individual SQL queries by loading the sql4ml_translator module in ghci and type:\n\n    translateToTensorFlowCommand (L.pack \"CREATE VIEW squaredErrors AS SELECT POW(errors.errorValue, 2) AS squaredErrorValue, errors.observationID AS observationID FROM errors;\") [\"features\"] [\"weights\"] [[\"f1\", \"f2\"]]\n\nwhere\n\n    translateToTensorFlowCommand :: L.Text -> [String] -> [String] -> [[String]] -> String\n    translateToTensorFlowCommand sql_statement feature_tables variable_tables feature_names\n\nand\n* sql_statement: a SQL create view query in type Text\n* feature_tables: a list of names of the tables storing the features of the model.\n* variable_tables: a list of names of the tables storing the weights of the model.\n* feature_names: a list of lists, each of which has the actual names of features stored in each table.\n\n\n\n",
                "type": "Text_excerpt",
                "original_header": "Use",
                "parent_header": [
                    "sql4ml"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/nantiamak/sql4ml/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "sql4ml"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/nantiamak/sql4ml/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1907.12415"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/nantiamak/sql4ml/master/README.md"
        }
    ]
}