{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:04:57"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/squaresLab/MELT",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "squaresLab",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-08-25T03:45:46Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-08-23T16:46:31Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2023 squaresLab\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/squaresLab/melt/main/LICENSE"
        }
    ],
    "name": [
        {
            "result": {
                "value": "MELT",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "squaresLab/MELT",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/squaresLab/MELT/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/squaresLab/MELT/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 7,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 4,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/squaresLab/melt/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 95550
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/squaresLab/melt/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "1. Create a python env.\n```bash\npython -m venv melt_env\nsource melt_env/bin/activate\n```\n\n2. Go to MELT's directory and install dependencies \n\n```bash\ncd MELT\npip install -r requirements.txt\n```\n\n3. Add MELT to PYTHONPATH\n```bash\nexport PYTHONPATH=$PYTHONPATH:`pwd`\n```\n",
                "type": "Text_excerpt",
                "original_header": "Set up your environment:",
                "parent_header": [
                    "MELT"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/melt/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The github action for MELT is found here: https://github.com/squaresLab/melt_action\n \n",
                "original_header": "MELT"
            },
            "confidence": 0.9992912846892614,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/squaresLab/melt/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "MELT main file is under src/inference/main.py. The main file takes the following arguments:\n\nTo run the script, you need to provide the following input arguments:\n\n1. `--library`: The name of the library in the format \"user/repo\" (e.g., \"scikit-learn/scikit-learn\").\n2. `--pr`: The Pull Request (PR) number.\n3. `--gh_key`: A github access key (classic token) with only public permissions. This is used to extract data from the PR. Instructions on how to create a Token can be found [here](https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/managing-your-personal-access-tokens#creating-a-personal-access-token-classic)\n4. `api_keyword`: The name of the API being deprecated.\n5. `--out_dir` (optional): The output directory where the generated rules will be saved. The default is the current directory.\n6. `--version` (optional): The version of the library (e.g., 1.5). The default is \"1.5\".\n\nThe script will then mine the changes from the specified PR, filter deprecated APIs, and generate comby rules based on the changes. The generated rules will be saved as JSON files in the specified output directory.\nPlease make sure to provide the required arguments when running the script, and ensure that your GitHub API keys are correctly set up.\n",
                "type": "Text_excerpt",
                "original_header": "How to run",
                "parent_header": [
                    "MELT"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/melt/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "```python\npython3 src/inference/main.py --library pandas-dev/pandas --pr 44539 --gh_key ghp_********* --api_keyword append\n```\n\nCurrently, it is necessary to provide the name of the deprecated API for which we want to mine rules. The zenodo versions contains the heuristics, including an NLP-based approach for identifying the relevant API names. \n",
                "type": "Text_excerpt",
                "original_header": "Example:",
                "parent_header": [
                    "MELT",
                    "How to run"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/melt/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "```latex\n@inproceedings{ramos2023melt,\n  title={MELT: Mining Effective Lightweight Transformations from Pull Requests},\n  author={Ramos, Daniel and Mitchell, Hailie and Lynce, In\\\\^es and Manquinho, Vasco and Martins, Ruben and Le Goues, Claire},\n  booktitle={Proc. International Conference on Automated Software Engineering (ASE)},\n  year={2023}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "How to cite",
                "parent_header": [
                    "MELT"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/squaresLab/melt/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{ramos2023melt,\n    year = {2023},\n    booktitle = {Proc. International Conference on Automated Software Engineering (ASE)},\n    author = {Ramos, Daniel and Mitchell, Hailie and Lynce, In\\\\^es and Manquinho, Vasco and Martins, Ruben and Le Goues, Claire},\n    title = {MELT: Mining Effective Lightweight Transformations from Pull Requests},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "MELT: Mining Effective Lightweight Transformations from Pull Requests",
                "author": "Ramos, Daniel and Mitchell, Hailie and Lynce, In\\\\^es and Manquinho, Vasco and Martins, Ruben and Le Goues, Claire"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/squaresLab/melt/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "MELT"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/squaresLab/melt/main/README.md"
        }
    ]
}