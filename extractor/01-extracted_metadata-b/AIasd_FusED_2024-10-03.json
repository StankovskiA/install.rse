{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:00:06"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/AIasd/FusED",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "AIasd",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-04-28T14:06:34Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2023-10-28T10:20:36Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2022 Ziyuan Zhong\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/LICENSE.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "FusED",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "AIasd/FusED",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/AIasd/FusED/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/AIasd/FusED/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 11,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/AIasd/FusED/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 1078426
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/AIasd/FusED/releases/65973432",
                "tag": "v0.0.1",
                "name": "Initial Release",
                "author": {
                    "name": "AIasd",
                    "type": "User"
                },
                "tarball_url": "https://api.github.com/repos/AIasd/FusED/tarball/v0.0.1",
                "zipball_url": "https://api.github.com/repos/AIasd/FusED/zipball/v0.0.1",
                "html_url": "https://github.com/AIasd/FusED/releases/tag/v0.0.1",
                "url": "https://api.github.com/repos/AIasd/FusED/releases/65973432",
                "release_id": 65973432,
                "date_created": "2022-05-03T22:57:34Z",
                "date_published": "2022-05-03T23:37:24Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/make.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/getting_started.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/getting_started.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/contributions.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/contributions.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/versions.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/versions.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/video.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/video.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/pcp.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/pcp.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/scatter.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/scatter.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/star.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/star.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/radar.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/radar.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/petal.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/petal.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/radviz.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/radviz.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/index.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/index.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/heatmap.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/visualization/heatmap.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/kktpm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/kktpm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/decomposition.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/decomposition.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/performance_indicator.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/performance_indicator.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/convergence.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/convergence.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/constraint_handling.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/constraint_handling.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/reference_directions.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/reference_directions.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/index.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/misc/index.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/minimize.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/minimize.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/callback.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/callback.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/termination.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/termination.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/display.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/display.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/result.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/result.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/index.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/interface/index.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/selection.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/selection.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/sampling.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/sampling.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/crossover.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/crossover.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/mutation.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/mutation.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/repair.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/repair.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/index.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/operators/index.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/permutation.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/permutation.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/subset_selection.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/subset_selection.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/binary_problem.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/binary_problem.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/custom.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/custom.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/mixed_variable_problem.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/mixed_variable_problem.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/discrete_problem.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/discrete_problem.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/initialization.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/customization/initialization.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/pso.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/pso.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/cmaes.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/cmaes.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/genetic_algorithm.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/genetic_algorithm.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/moead.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/moead.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/ctaea.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/ctaea.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/pattern_search.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/pattern_search.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/differential_evolution.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/differential_evolution.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/unsga3.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/unsga3.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/nsga3.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/nsga3.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/rnsga2.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/rnsga2.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/nsga2.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/nsga2.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/brkga.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/brkga.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/nelder_mead.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/nelder_mead.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/rnsga3.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/rnsga3.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/index.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/algorithms/index.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/parallelization.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/parallelization.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/custom.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/custom.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/gradients.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/gradients.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/index.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/index.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/many/dtlz.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/many/dtlz.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/welded_beam.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/welded_beam.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/omni_test.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/omni_test.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/tnk.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/tnk.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/bnh.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/bnh.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/truss2d.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/truss2d.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/sym_part.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/sym_part.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/zdt.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/zdt.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/osy.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/multi/osy.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/ackley.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/ackley.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/rosenbrock.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/rosenbrock.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/rastrigin.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/rastrigin.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/griewank.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/griewank.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/zakharov.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/single/zakharov.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/constrained/mw.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/constrained/mw.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/constrained/dascmop.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/problems/constrained/dascmop.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/decision_making/index.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/pymoo/doc/source/decision_making/index.ipynb"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "faq": [
        {
            "result": {
                "value": "We show the following fusion error examples. The left window of each pair shows an accident caused by the fusion component and the right window shows the accident would be avoided if the fusion method is replaced to \"best-sensor fusion\"(defined in the paper) during the pre-crash period in a counter-factual world.\n\n\n1.OpenPilot (with DEFAULT - the default fusion method as the initial fusion method):\nThe ego car avoids its collision with the green vehicle ahead after the replacement.\n<img src=\"gif_demos/nsga2_op_446_merge.gif\" width=\"100%\" height=\"100%\"/>\n\n\n2.OpenPilot (with DEFAULT - the default fusion method as the initial fusion method):\nThe ego car avoids its collision with the green vehicle moving out after the replacement.\n<img src=\"gif_demos/random_op_44_merge.gif\" width=\"100%\" height=\"100%\"/>\n\n\n3.OpenPilot (with MATHWORKS - a kalman-filter based fusion method as the original fusion method):\nThe ego car avoids its collision with the police car cutting in from the right lane after the replacement.\n<img src=\"gif_demos/random_29_mathwork.gif\" width=\"100%\" height=\"100%\"/>\n\n\n4.OpenPilot (with MATHWORKS - a kalman-filter based fusion method as the original fusion method):\nThe ego car avoids its collision with the red vehicle cutting in from the right lane after the replacement.\n<img src=\"gif_demos/259_mathwork.gif\" width=\"100%\" height=\"100%\"/>\n\n",
                "type": "Text_excerpt",
                "original_header": "Fusion Error Examples",
                "parent_header": [
                    "FusED"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "Move all the subfolders in `~/Docuements/self-driving-cars/ADFuzz/run_results_op/<algorithm_name>/<route_type>/<route_type>/<m>/<folder_with_starting_time>/bugs` to `~/openpilot/tools/sim/op_script/rerun_folder`, then in `~/openpilot/tools/sim/op_script`,\n```\npython rerun_carla_op.py -p rerun_folder -m2 best_sensor -w 2.5\n```\n\nDepending on the CPU one uses and the number of collisions the fuzzing process has found, this process can take from 2 hours to 4 hours.\n",
                "type": "Text_excerpt",
                "original_header": "Rerun collision scenarios using the best sensor fusion to analyze if they are fusion errors",
                "parent_header": [
                    "FusED",
                    "Detailed Description"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "The rerun process of all the identified fusion errors during the rerun process can be found in `~/openpilot/tools/sim/op_script/rerun_op/<algorithm_name>/<route_type>/<route_type>/<m>/<folder_with_starting_time>/non_bugs`. They are considered fusion errors because after the replacement of the fusion method, they avoid the original collisions.\n",
                "type": "Text_excerpt",
                "original_header": "Inspect the found fusion errors",
                "parent_header": [
                    "FusED",
                    "Detailed Description",
                    "Rerun collision scenarios using the best sensor fusion to analyze if they are fusion errors"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "In `openpilot/tools/sim/op_script`,\n```\npython trajectory_analysis.py -p rerun_folder -f <fusion folder>\n```\nwhere `<fusion folder>` should be set to the folder contains the fusion errors identified during the rerun process, i.e., `~/openpilot/tools/sim/op_script/rerun_op/<algorithm_name>/<route_type>/<route_type>/<m>/<folder_with_starting_time>/non_bugs`.\n\nThe command line should show a line `cur X filtering: a -> b` where `a` represents the number of fusion errors found and `b` represents the number of distinct fusion errors found.\n\n",
                "type": "Text_excerpt",
                "original_header": "Check the number of (distinct) fusion errors",
                "parent_header": [
                    "FusED",
                    "Detailed Description",
                    "Rerun collision scenarios using the best sensor fusion to analyze if they are fusion errors"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "We show the following fusion error examples. The left window of each pair shows an accident caused by the fusion component and the right window shows the accident would be avoided if the fusion method is replaced to \"best-sensor fusion\"(defined in the paper) during the pre-crash period in a counter-factual world.\n\n\n1.OpenPilot (with DEFAULT - the default fusion method as the initial fusion method):\nThe ego car avoids its collision with the green vehicle ahead after the replacement.\n<img src=\"gif_demos/nsga2_op_446_merge.gif\" width=\"100%\" height=\"100%\"/>\n\n\n2.OpenPilot (with DEFAULT - the default fusion method as the initial fusion method):\nThe ego car avoids its collision with the green vehicle moving out after the replacement.\n<img src=\"gif_demos/random_op_44_merge.gif\" width=\"100%\" height=\"100%\"/>\n\n\n3.OpenPilot (with MATHWORKS - a kalman-filter based fusion method as the original fusion method):\nThe ego car avoids its collision with the police car cutting in from the right lane after the replacement.\n<img src=\"gif_demos/random_29_mathwork.gif\" width=\"100%\" height=\"100%\"/>\n\n\n4.OpenPilot (with MATHWORKS - a kalman-filter based fusion method as the original fusion method):\nThe ego car avoids its collision with the red vehicle cutting in from the right lane after the replacement.\n<img src=\"gif_demos/259_mathwork.gif\" width=\"100%\" height=\"100%\"/>\n\n",
                "type": "Text_excerpt",
                "original_header": "Fusion Error Examples",
                "parent_header": [
                    "FusED"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "~(home folder)\n```\n\u251c\u2500\u2500 openpilot\n\u251c\u2500\u2500 Documents\n\u2502   \u251c\u2500\u2500 self-driving-cars (created by the user manually)\n\u2502   \u2502   \u251c\u2500\u2500 FusED\n\u2502   \u2502   \u251c\u2500\u2500 carla_0911_rss\n```\nNote: one can create link for these folders at these paths if one cannot put them in these paths.\n",
                "type": "Text_excerpt",
                "original_header": "Directory Structure",
                "parent_header": [
                    "FusED",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "Make sure the python path is set up correctly through pyenv, in particular, run\n```\nwhich python\n```\nOne should see the following:\n```\n~/.pyenv/shims/python\n```\nOtherwise, one needs to follow the displayed instructions after running\n```\npyenv init\n```\n",
                "type": "Text_excerpt",
                "original_header": "Common Python Path Issue",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Install OpenPilot 0.8.5 (customized)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "clang 10 is needed. To install it, run\n```\nsudo apt install clang\n```\n",
                "type": "Text_excerpt",
                "original_header": "Common Compilation Issue",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Install OpenPilot 0.8.5 (customized)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "Your environment needs to support opencl 2.0+ in order to run `scons` successfully (when using `clinfo`, it must show something like  \"your OpenCL library only supports OpenCL <2.0+>\")\n\n\n",
                "type": "Text_excerpt",
                "original_header": "Common OpenCL Issue",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Install OpenPilot 0.8.5 (customized)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "To check everything is set up correctly and FusED can run successfully, we first run one scenario.\n\nIn `~/Docuements/self-driving-cars/FusED`,\n```\npython ga_fuzzing.py --simulator carla_op --n_gen 1 --pop_size 1 --algorithm_name nsga2 --has_run_num 1 --episode_max_time 200 --only_run_unique_cases 0 --objective_weights 1 0 0 0 -1 -2 0 -m op --route_type 'Town06_Opt_forward'\n```\n\nTwo windows should pop up with one showing the OpenPilot running in the CARLA simulator.\n\nIn the command line, the program should ends with `We have found (x) bugs in total.` before showing a series of \"kill server\" messages.\n\nNote since only one randomly sampled scenario is run here, it might not be a fusion error. To guarantee the finding of fusion errors, see the **Run Fuzzing** subsection next under **Detailed Description** where 500 scenarios have been run.\n",
                "type": "Text_excerpt",
                "original_header": "Check Fuzzing",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Run FusED"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "The default algorithm is `GA-Fusion`.\n\nFor `GA`,  replace `--objective_weights 1 0 0 0 -1 -2 0` with `--objective_weights 1 0 0 0 -1 0 0`.\n\nFor `Random`, replace `--algorithm_name nsga2` with `--algorithm_name random`.\n",
                "type": "Text_excerpt",
                "original_header": "Algorithm Usage",
                "parent_header": [
                    "FusED",
                    "Detailed Description",
                    "Run Fuzzing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "* Monitor (i.e., due to the limitation of OpenPilot, the simulation can only run on a machine with a monitor/virtual monitor)\n* OS: Ubuntu 20.04\n* CPU: at least 6 cores\n* GPU: at least 6GB memory\n* Openpilot 0.8.5 (customized)\n* Carla 0.9.11\n\n",
                "type": "Text_excerpt",
                "original_header": "Requirements",
                "parent_header": [
                    "FusED",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "In `~`,\n```\ngit clone https://github.com/AIasd/openpilot.git\n```\nIn `~/openpilot`,\n```\n./tools/ubuntu_setup.sh\n```\nIn `~/openpilot`, compile Openpilot\n```\nscons -j $(nproc)\n```\n",
                "type": "Text_excerpt",
                "original_header": "Install OpenPilot 0.8.5 (customized)",
                "parent_header": [
                    "FusED",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "Make sure the python path is set up correctly through pyenv, in particular, run\n```\nwhich python\n```\nOne should see the following:\n```\n~/.pyenv/shims/python\n```\nOtherwise, one needs to follow the displayed instructions after running\n```\npyenv init\n```\n",
                "type": "Text_excerpt",
                "original_header": "Common Python Path Issue",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Install OpenPilot 0.8.5 (customized)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "clang 10 is needed. To install it, run\n```\nsudo apt install clang\n```\n",
                "type": "Text_excerpt",
                "original_header": "Common Compilation Issue",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Install OpenPilot 0.8.5 (customized)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "Your environment needs to support opencl 2.0+ in order to run `scons` successfully (when using `clinfo`, it must show something like  \"your OpenCL library only supports OpenCL <2.0+>\")\n\n\n",
                "type": "Text_excerpt",
                "original_header": "Common OpenCL Issue",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Install OpenPilot 0.8.5 (customized)"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "In `~/Documents/self-driving-cars`,\n```\ncurl -O https://carla-releases.s3.eu-west-3.amazonaws.com/Linux/CARLA_0.9.11_RSS.tar.gz\nmkdir carla_0911_rss\ntar -xvzf CARLA_0.9.11_RSS.tar.gz -C carla_0911_rss\n```\n\nIn `~/Documents/self-driving-cars/carla_0911_rss/PythonAPI/carla/dist`,\n```\neasy_install carla-0.9.11-py3.7-linux-x86_64.egg\n```\n",
                "type": "Text_excerpt",
                "original_header": "Install Carla 0.9.11",
                "parent_header": [
                    "FusED",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "In `~/Documents/self-driving-cars/carla_0911_rss`,\n```\ncurl -O https://carla-releases.s3.eu-west-3.amazonaws.com/Linux/AdditionalMaps_0.9.11.tar.gz\nmv AdditionalMaps_0.9.11.tar.gz Import/\n\n```\nand then run\n```\n./ImportAssets.sh\n```\n",
                "type": "Text_excerpt",
                "original_header": "Install additional maps",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Install Carla 0.9.11"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "In `~/Docuements/self-driving-cars`,\n```\ngit clone https://github.com/FusionFuzz/FusED.git\n```\n\nIn `/Docuements/self-driving-cars/FusED`,\n```\npip3 install -r requirements.txt\n```\n\nInstall pytorch\n```\npip3 install torch==1.9.0+cu111 torchvision==0.10.0+cu111 torchaudio==0.9.0 -f https://download.pytorch.org/whl/torch_stable.html\n```\n\n",
                "type": "Text_excerpt",
                "original_header": "Install FusED",
                "parent_header": [
                    "FusED",
                    "Getting Started"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "To check everything is set up correctly and FusED can run successfully, we first run one scenario.\n\nIn `~/Docuements/self-driving-cars/FusED`,\n```\npython ga_fuzzing.py --simulator carla_op --n_gen 1 --pop_size 1 --algorithm_name nsga2 --has_run_num 1 --episode_max_time 200 --only_run_unique_cases 0 --objective_weights 1 0 0 0 -1 -2 0 -m op --route_type 'Town06_Opt_forward'\n```\n\nTwo windows should pop up with one showing the OpenPilot running in the CARLA simulator.\n\nIn the command line, the program should ends with `We have found (x) bugs in total.` before showing a series of \"kill server\" messages.\n\nNote since only one randomly sampled scenario is run here, it might not be a fusion error. To guarantee the finding of fusion errors, see the **Run Fuzzing** subsection next under **Detailed Description** where 500 scenarios have been run.\n",
                "type": "Text_excerpt",
                "original_header": "Check Fuzzing",
                "parent_header": [
                    "FusED",
                    "Getting Started",
                    "Run FusED"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "In `~/Docuements/self-driving-cars/FusED`,\n```\npython ga_fuzzing.py --simulator carla_op --n_gen 10 --pop_size 50 --algorithm_name nsga2 --has_run_num 500 --episode_max_time 200 --only_run_unique_cases 0 --objective_weights 1 0 0 0 -1 -2 0 -m op --route_type 'Town06_Opt_forward'\n```\n\nDepending on the CPU one uses, this process can take from 12 hours to 24 hours.\n",
                "type": "Text_excerpt",
                "original_header": "Run Fuzzing",
                "parent_header": [
                    "FusED",
                    "Detailed Description"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "The failure cases can be found in `~/Docuements/self-driving-cars/ADFuzz/run_results_op/<algorithm_name>/<route_type>/<route_type>/<m>/<folder_with_starting_time>/bugs`. In particular, under each subfolder, the folder `front` contains all the front camera images.\n\n",
                "type": "Text_excerpt",
                "original_header": "Inspect the found failures (i.e., collisions)",
                "parent_header": [
                    "FusED",
                    "Detailed Description",
                    "Run Fuzzing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "The main results are the numbers of (distinct) fusion errors found using FusED and the baseline methods. Since the fuzzing process has randomness, the numbers won't be exactly the same across runs but they should be similar to the paper's reported ranges for each setting.\n",
                "type": "Text_excerpt",
                "original_header": "Detailed Description",
                "parent_header": [
                    "FusED"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "The failure cases can be found in `~/Docuements/self-driving-cars/ADFuzz/run_results_op/<algorithm_name>/<route_type>/<route_type>/<m>/<folder_with_starting_time>/bugs`. In particular, under each subfolder, the folder `front` contains all the front camera images.\n\n",
                "type": "Text_excerpt",
                "original_header": "Inspect the found failures (i.e., collisions)",
                "parent_header": [
                    "FusED",
                    "Detailed Description",
                    "Run Fuzzing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you use the project in your work, please consider citing it with:\n```\n@misc{https://doi.org/10.48550/arxiv.2109.06404,\n  doi = {10.48550/ARXIV.2109.06404},\n\n  url = {https://arxiv.org/abs/2109.06404},\n\n  author = {Zhong, Ziyuan and Hu, Zhisheng and Guo, Shengjian and Zhang, Xinyang and Zhong, Zhenyu and Ray, Baishakhi},\n\n  keywords = {Robotics (cs.RO), Artificial Intelligence (cs.AI), Machine Learning (cs.LG), Software Engineering (cs.SE), FOS: Computer and information sciences, FOS: Computer and information sciences},\n\n  title = {Detecting Multi-Sensor Fusion Errors in Advanced Driver-Assistance Systems},\n\n  publisher = {arXiv},\n\n  year = {2021},\n\n  copyright = {arXiv.org perpetual, non-exclusive license}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citing",
                "parent_header": [
                    "FusED"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "This repo uses [pymoo](https://github.com/msu-coinlab/pymoo) as the underlying framework for Multi-objective Optimization.\n",
                "type": "Text_excerpt",
                "original_header": "Reference",
                "parent_header": [
                    "FusED"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "value": "@misc{https://doi.org/10.48550/arxiv.2109.06404,\n    copyright = {arXiv.org perpetual, non-exclusive license},\n    year = {2021},\n    publisher = {arXiv},\n    title = {Detecting Multi-Sensor Fusion Errors in Advanced Driver-Assistance Systems},\n    keywords = {Robotics (cs.RO), Artificial Intelligence (cs.AI), Machine Learning (cs.LG), Software Engineering (cs.SE), FOS: Computer and information sciences, FOS: Computer and information sciences},\n    author = {Zhong, Ziyuan and Hu, Zhisheng and Guo, Shengjian and Zhang, Xinyang and Zhong, Zhenyu and Ray, Baishakhi},\n    url = {https://arxiv.org/abs/2109.06404},\n    doi = {10.48550/ARXIV.2109.06404},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.48550/ARXIV.2109.06404",
                "title": "Detecting Multi-Sensor Fusion Errors in Advanced Driver-Assistance Systems",
                "author": "Zhong, Ziyuan and Hu, Zhisheng and Guo, Shengjian and Zhang, Xinyang and Zhong, Zhenyu and Ray, Baishakhi",
                "url": "https://arxiv.org/abs/2109.06404"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "FusED"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/gif_demos/nsga2_op_446_merge.gif"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/gif_demos/random_op_44_merge.gif"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/gif_demos/random_29_mathwork.gif"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/AIasd/FusED/main/gif_demos/259_mathwork.gif"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2109.06404},\n\n  author = {Zhong, Ziyuan and Hu, Zhisheng and Guo, Shengjian and Zhang, Xinyang and Zhong, Zhenyu and Ray, Baishakhi},\n\n  keywords = {Robotics (cs.RO"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/AIasd/FusED/main/README.md"
        }
    ]
}