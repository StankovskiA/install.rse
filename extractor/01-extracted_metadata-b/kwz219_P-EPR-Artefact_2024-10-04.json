{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 01:08:49"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/kwz219/P-EPR-Artefact",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "kwz219",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-03-30T09:04:13Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-08-12T07:56:03Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "P-EPR-Artefact",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "kwz219/P-EPR-Artefact",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/kwz219/P-EPR-Artefact/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/kwz219/P-EPR-Artefact/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 7,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/kwz219/P-EPR-Artefact/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 15059170
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 35780
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Requirements: Java version 11.0.13 (for executing Spoon)\n",
                "type": "Text_excerpt",
                "original_header": "Instructions for use P-EPR",
                "parent_header": [
                    "Practical Program Repair via Preference-based Ensemble Strategy"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "value": ">-mode: initialize or inference. Under the initialize mode, P-EPR initialize/update configured/new tools with given repair history; Under the inference mode, P-RPR receives a buggy class file, as well as the fault_location and test error type (if available) and predicts scores of each configured tools.\n\n>-tool_config_dir: where does P-EPR should load the configurations of tools (both for initialize or inference)\n\n>-save_dir: where to store the tool configurations after initialization\n\n>-repair_history_info: For initialization, a json file that contains the meta information of tools' repair history, including tool which requires initialization or update and a list of repair samples. Each repair sample should provide the fault file location, fault line location, and test_error_type.\n\n>-input_file: For inference, where the buggy file is\n\n>-fault_line_ids: For inference, the faulty line locations of the buggy file. Egs of Line or Lines: (1) for single-line fault: 175 (2) for multi_line faults: 175,176,178 or 175-176,178\n\n>-test_error_type:  For inference, the test error type of the fault. If this information is not available, set it to junit.framework.AssertionFailedError\n\n>-result_file: For inference, the position to store the predicts results. It is a json file that records the preference scores of each configured tools in P-EPR \n",
                "type": "Text_excerpt",
                "original_header": "Explanations of parameters",
                "parent_header": [
                    "Practical Program Repair via Preference-based Ensemble Strategy",
                    "Instructions for use P-EPR"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "value": "> java -jar ./ToolRanker.jar -mode initialize -save_dir ./P-EPR-egs/Initialize/tool_configs_initialized -tool_config_dir ./P-EPR-egs/Initialize/tool_configs_original -repair_history_info ./P-EPR-egs/Initialize/DatasetInfo.json -log_dir ./P-EPR-egs/Initialize",
                "type": "Text_excerpt",
                "original_header": "Initialize",
                "parent_header": [
                    "Practical Program Repair via Preference-based Ensemble Strategy",
                    "Instructions for use P-EPR"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "value": "> java -jar ./ToolRanker.jar -mode inference -tool_config_dir ./P-EPR-egs/Inference/D4j_trained_tools -result_file ./result.json -input_file ./P-EPR-egs/infer_rg.java -faulty_line_ids 175 -test_err_type junit.framework.AssertionFailedError",
                "type": "Text_excerpt",
                "original_header": "Inference",
                "parent_header": [
                    "Practical Program Repair via Preference-based Ensemble Strategy",
                    "Instructions for use P-EPR"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "value": "write a json file as the following format:\n\n>{\n\t\"tool_name\":\"tool_name\",\n\t\"explicit_preferences\":[\n\t\t\"Cast\",\n\t\t\"Operator\",\n\t\t\"Super\",\n\t\t\"Array\",\n\t\t\"Invocation\",\n\t\t\"Literal\",\n\t\t\"DataType\",\n\t\t\"Return\"\n\t],\n\t\"total_fixed_count\":1,\n\t\"total_failed_count\":0,\n\t\"history_preferences\":{\n\t\t\"type_history\":{\n\t\t},\n\t\t\"test_history\":{\n\t\t}\n\t}\n}\n\n\"explicit_preferences\" refs to the repair patterns of the tool, we have summarized patterns of 21 tools, please ref to ./P-EPR-egs/Inference/D4j_trained_tools.\nIf your new tool has implemented some of our patterns, just provide the pattern keywords.\nAnd the mapping of keywords and repair patterns are as following:\n\n| Keyword    | Repair Pattern     | Implemented Systems    |\n| -------- | -------- | -------- |\n| \"Cast\" | P1 Insert Cast Checker | Heuristic-based: HDRepair, SimFix, CapGen; Template-based: AVATAR, Genesis, kPAR, SketchFix, TBar, SOFix |\n| \"Operator\" |P11 Mutate Operators | Heuristic-based: CapGen, HDRepair, ssFix, SimFix; Template-based: AVATAR, Elixir, FixMiner, kPAR, jMutRepair, SOFix. SketchFix, TBar;Constraint-based: S3|\n| \"Super\" | P5 Mutate Class Instance Creation | Template-based: AVATAR, TBar |\n| \"Array\" | P3 Insert Range Checker | Template-based: AVATAR, Elixir, kPAR, SketchFix, TBar, SOFix |\n| \"Invocation\" | P10 Mutate Method Invocation Expression | Heuristic-based: CapGen, HDRepair, SOFix, ssFix, SimFix; Template-based: Elixir, FixMiner, kPAR, SketchFix, SOFix, TBar |\n| \"Literal\" | P9 Mutate Literal Expression | Heuristic-based: CapGen, HDRepair, SimFix, ssFix; Template-based: FixMiner, TBar ; Constraint-based: S3 |\n| \"DataType\" | P7 Mutate Data Type | Heuristic-based: CapGen, SimFix; Tempate-based: AVATAR,SOFix, Elixir, FixMiner, kPAR, TBar |\n| \"Return\" | P12 Mutate Return Statement | Template-based: Elixir, SketchFix, TBar; Heuristic-based: HDRepair |\n| \"Division\" | P8 Mutate Integer Division Operation |Template-based: TBar|\n| \"Exception\" | P4 Throw Exception|Constraint-based: ACS |\n| \"None\" | no preferred patterns | Tools that have no patterns, e.g., most of the learning-based systems |\n",
                "type": "Text_excerpt",
                "original_header": "Integrating New Tools",
                "parent_header": [
                    "Practical Program Repair via Preference-based Ensemble Strategy",
                    "Instructions for use P-EPR"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "value": "Modify the file BugFeaturer/src/main/java/Preference/TypePreference.java\n\nEasily add a new judgement of your new patterns through defining four objects:\n>element_check: need to check the type of the buggy statement\n\n>check_type: what the elements should contain\n\n>child_check: need to check all the child nodes of the buggy statement\n \n>child_check_types: what the childs of the buggy statment should contain\n\nFor example, the pattern \"Array\" should check whether the child nodes of the buggy statement involves with ArrayWrite or ArrayRead \n![pattern_add](./Figs/pattern_add.png)\n\nFor the complete meta code model used by spoon (the name of each code elements), please check https://spoon.gforge.inria.fr/code_elements.html.\n\n![spoon_model](./Figs/spoon_model.png)",
                "type": "Text_excerpt",
                "original_header": "Integrating New Repair Patterns",
                "parent_header": [
                    "Practical Program Repair via Preference-based Ensemble Strategy",
                    "Instructions for use P-EPR"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "value": "![configured_tools](./Figs/tool_configuration_example.PNG)\n",
                "type": "Text_excerpt",
                "original_header": "an example of a tool initialized in P-EPR",
                "parent_header": [
                    "Practical Program Repair via Preference-based Ensemble Strategy",
                    "Instructions for use P-EPR"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "```yaml\n\u251c\u2500\u2500 BugFeaturer\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 :   source codes of P-EPR framework \n\u251c\u2500\u2500 Configs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 :   information for configuring APR tools (i.e., manually summarized repair patterns of different tools and the repair history)\n\u251c\u2500\u2500 Figs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 :   figure of P-EPR framework\n\u251c\u2500\u2500 E-APR-Replication\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 :   our implementation of the E-APR strategy \n\u251c\u2500\u2500 Experiment_Log\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 P-EPR-log:       experiment results of P-EPR\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 E-APR-log:       patches generated by TranplantFix for Defects4J v2.0 bugs\n\u251c\u2500\u2500 Measurement_Code\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 :  source codes for computing experimental metrics\n\u251c\u2500\u2500 P-EPR-egs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 :  example of tool configuration and data formats\n\u251c\u2500\u2500 ToolRanker.jar\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 :  executable tool of P-EPR\n\u251c\u2500\u2500 README.md\n\n``` \n",
                "original_header": "Structure"
            },
            "confidence": 0.9223851195824602,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "We propose a Preference-based Ensemble Program Repair framework (**P-EPR**),\nwhich aims to efficiently assemble existing diverse APR tools. The term `preference' refers to the features of bugs that can be more readily addressed by a given tool than others, i.e., the tool has a higher probability to generate a correct fix for that kind of bug. \nFor a given bug, **P-EPR** ranks available tools by quantifying each tool's preference score based on computed mappings of tools' preferences. \n",
                "original_header": "The P-EPR Framework"
            },
            "confidence": 0.9178772236975337,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Practical Program Repair via Preference-based Ensemble Strategy"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/./Figs/P-EPR-Framework.PNG"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/./Figs/pattern_add.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/./Figs/spoon_model.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/./Figs/tool_configuration_example.PNG"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/kwz219/P-EPR-Artefact/master/README.md"
        }
    ]
}