{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:39:11"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/sulir/iostudy",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "sulir",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2023-03-14T03:03:26Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2023-03-14T03:04:33Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "A Study of Input/Output Methods in Java",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "iostudy",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "sulir/iostudy",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/sulir/iostudy/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/sulir/iostudy/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/sulir/iostudy/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 42177
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 7613
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 1097
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sulir/iostudy/master/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/sulir/iostudy/master/Dockerfile"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sulir/iostudy/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sulir/iostudy/master/scripts/iostudy.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sulir/iostudy/master/scripts/build-corpus.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/sulir/iostudy/master/scripts/jdk-source.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "support": [
        {
            "result": {
                "value": "This repository contains the source code of the programs for our paper \"Outside the Sandbox: A Study of Input/Output Methods in Java\" (under review).\n\nA complete dataset with the results is available at [OSF.io](https://doi.org/10.17605/OSF.IO/CNSRJ).\n",
                "type": "Text_excerpt",
                "original_header": "A Study of I/O Methods in Java"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/sulir/iostudy/master/README.md"
        },
        {
            "result": {
                "value": "Use with the following command to reproduce the complete analysis:\n```shell\ndocker run -itv ~/study:/opt/data sulir/iostudy\n```\nwhere `~/study` is a directory on the host that will be shared with the Docker container. The results will be then written to `~/study/results`.\n\nThe whole process can last a few days. For demonstration purposes, it is possible to statically analyze a small corpus of 5 projects only:\n```shell\ndocker run -itv ~/study:/opt/data sulir/iostudy download-few static results\n```\n",
                "type": "Text_excerpt",
                "original_header": "Reproducibility",
                "parent_header": [
                    "A Study of I/O Methods in Java"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/sulir/iostudy/master/README.md"
        },
        {
            "result": {
                "value": "The study contains multiple phases. A list of phases to run can be supplied as arguments to the Docker image's entry point, e.g.,\n```shell\ndocker run -itv ~/study:/opt/data sulir/iostudy build-all static\n```\nwill build all projects from source code and then perform static analysis on this corpus.\n\nAvailable phases are:\n- `natives` - Export a list of native methods in the bundled Java Runtime Environment (JRE) to file `natives.tsv`. It can be subsequently used for manual categorization.\n- `download-all` - Download and extract the pre-built corpus of 821 projects used in the original study to the directory named `corpus`.\n- `download-few` - Download a small pre-built corpus of 5 projects for a demonstration to the `corpus` directory.\n- `build-all` - Build the original 812 projects from source code using Maven. To overcome API rate limits, it is advised to create `ghtoken.txt` in the root directory of the container's data volume. This file should contain a generated GitHub personal access token (starting with `ghp_`) with public-only access (no scopes selected, i.e., without any additional permissions). The output is written to `corpus/`.\n- `build-custom` - Build a custom list of projects from source code using Maven. The list is a text file `projects.txt` in the root directory of the data volume. It consists of GitHub repository names (e.g., `apache/commons-cli`) separated by newlines. Similarly to `build-all`, creating `ghtoken.txt` is advised, and the output is saved to `corpus/`.\n- `static` - Perform static analysis on the corpus of projects prepared by the download/build phases. The output is written to the SQLite 3 database `results.db3`.\n- `dynamic` - Perform dynamic analysis on a custom-built DaCapo benchmark suite, compatible with the used JRE and supporting only small data sizes. The output is written to `results.db3`.\n- `results` - Perform SQL queries on the static analysis results. The output is written as text and TSV files to `results/`.\n\nIf no options are supplied, the default list of phases is `download-all static dynamic results`.\n",
                "type": "Text_excerpt",
                "original_header": "Arguments",
                "parent_header": [
                    "A Study of I/O Methods in Java"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/sulir/iostudy/master/README.md"
        },
        {
            "result": {
                "value": "The Docker image has one volume, `/opt/data`, which is used to exchange all input and output files with the host. Its structure, when considering all possible phases, is as follows:\n\n```\ncorpus/\n    user__repository/\n        deps/\n            *.jar\n        jars/\n            *.jar\nresults/\n    results.txt\n    *.tsv\nghtoken.txt\nnatives.tsv\nprojects.txt\nresults.db3\n```\n",
                "type": "Text_excerpt",
                "original_header": "Files",
                "parent_header": [
                    "A Study of I/O Methods in Java"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/sulir/iostudy/master/README.md"
        },
        {
            "result": {
                "value": "The Docker image can be built using the following command in the project's root directory:\n```shell\ndocker build -t sulir/iostudy .\n```\n\nTo build only the main Java application, e.g., for debugging, run:\n```\nmvn package\n```\n",
                "type": "Text_excerpt",
                "original_header": "Building from Source",
                "parent_header": [
                    "A Study of I/O Methods in Java"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/sulir/iostudy/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "A Study of I/O Methods in Java"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/sulir/iostudy/master/README.md"
        }
    ]
}