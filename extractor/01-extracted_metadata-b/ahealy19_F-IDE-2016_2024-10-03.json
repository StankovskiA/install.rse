{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 19:07:33"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/ahealy19/F-IDE-2016",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "ahealy19",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2016-08-22T10:15:41Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2018-01-23T04:03:19Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "data and code to complement the paper \"Predicting SMT Solver Performance for Software Verification\"",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "F-IDE-2016",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "ahealy19/F-IDE-2016",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/ahealy19/F-IDE-2016/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/ahealy19/F-IDE-2016/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/ahealy19/F-IDE-2016/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 1358065
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 636338
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "TeX",
                "name": "TeX",
                "type": "Programming_language",
                "size": 142584
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "support": [
        {
            "result": {
                "value": "This repository contains data measuring 8 SMT solvers' performance on the\n[Why3](http://why3.lri.fr/) examples dataset. We record the result returned by [Alt-Ergo](https://alt-ergo.ocamlpro.com/) (versions 0.95.2 and 1.01), [CVC3](http://www.cs.nyu.edu/acsys/cvc3/), [CVC4](http://cvc4.cs.nyu.edu/web/), [veriT](http://www.verit-solver.org/), [Yices](http://yices.csl.sri.com/), and [Z3](https://github.com/Z3Prover/z3) (versions 4.3.2 and 4.4.1). We also measure the time taken\nby the solver to return the result.\n\nPython libraries we use: [Pandas](http://pandas.pydata.org/), [Numpy](http://www.numpy.org/), [Sci-kit Learn](http://scikit-learn.org/dev/index.html), [Matplotlib](http://matplotlib.org/). All Python files can be run on the command line in the usual way: eg `python <filename.py>`\n",
                "type": "Text_excerpt",
                "original_header": "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Folder containing latex source files and images for the paper itself\n",
                "type": "Text_excerpt",
                "original_header": "`paper/`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "This folder contains a subfolder for each file in the examples repository. Each folder contains:\n - `<name>.mlw` the WhyML file sent to Why3\n - `<name>.json` a JSON dictionary containing timings and results for various timeout values\n - `stats.json` the syntacic features statically extracted from `<name>.mlw`  (used as independent variables for prediction)\n - `split/` folder containing the resultant goals after applying the Why3 transformation `split_goal_wp` to each file `.mlw`. file. Created by `split_goal.py`  \n",
                "type": "Text_excerpt",
                "original_header": "`data/`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Python interface to the [Benchexec](https://github.com/sosy-lab/benchexec) measurement framework. See `LICENCE_benchexec.txt` for licence.\n",
                "type": "Text_excerpt",
                "original_header": "`benchexec/`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "A collection of short, commonly-used constants and functions used by many of the other Python scripts.\n",
                "type": "Text_excerpt",
                "original_header": "`common.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Python script to collect data from the JSON files. Results printed for Table 1 and saved to `fig1_data.csv` to be read in by `make_fig1.py`\n",
                "type": "Text_excerpt",
                "original_header": "`collect_data_fig1_table1.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Make the first figure (stacked barcharts - 60 second timeout). Uses `fig1_data.csv`. Renders `barcharts.pdf` to `paper` folder\n",
                "type": "Text_excerpt",
                "original_header": "`make_fig1.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Collect data from the JSON files and combine it with the syntax metrics. Save the data as `whygoal_stats.csv`\n",
                "type": "Text_excerpt",
                "original_header": "`create_stats_df.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Use the entire dataset to plot the cumulative time taken for Valid/Invalid/Unknown answers to be returned. Renders `line_graph.pdf` to `paper` folder and prints values for the 99th percentile.\n",
                "type": "Text_excerpt",
                "original_header": "`make_fig3.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Disjoint partitions of `whygoal_stats.csv` for testing (25%) and training/validation (75%) respectively\n",
                "type": "Text_excerpt",
                "original_header": "`whygoal_test.csv`, `whygoal_valid_test.csv`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Perform KFold cross-validation on the training set to compare a number of regressor implementations from Sci-kit Learn. Renders `compare_regressors.pdf` which is the full version of Table 2 in the paper.\n",
                "type": "Text_excerpt",
                "original_header": "`compare_regressors.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Find values for the 'Random' strategy (either train or test) by averaging values for all possible rankings. Is slow because it has 8! rankings to get through.\n",
                "type": "Text_excerpt",
                "original_header": "`permute_rankings.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Outputs several data files used in the Evaluation section:\n- `forest.json`: a JSON representation of the trained random forest - suitable for use when compiling the OCaml binary\n- `data_for_second_barchart.csv`: results for each prover and strategy for the test goals\n- `data_for_second_linegraph.csv`: how long each strategy took to return a Valid/Invalid answer for the test set\n- `feature_importances.txt`: These relevance metrics are computed by Sci-kit Learn's Random Forest implementation: they describe the proportion of decisions based on each input variable across all decision trees in Where4's random forest.\n",
                "type": "Text_excerpt",
                "original_header": "`output_eval_files.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Renders `barcharts2.pdf` to the `paper` folder. Similar to `make_fig1.py` but reads from `data_for_second_barchart.csv` and includes theoretical strategies and Where4 results (result of choosing the __first__ solver in each ranking).\n",
                "type": "Text_excerpt",
                "original_header": "`barchart2.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "The cumulative time taken for the three theoretical strategies and Where\nto find an answer to the goals in the test dataset. Uses data stored in `data_for_second_linegraph.csv` - particularly important for the time-consuming 'Random' calculations. Renders `line_graph_eval_provers.pdf` to the `paper` folder. Also prints the average times File/Theory/Goal times used in Table 3.\n",
                "type": "Text_excerpt",
                "original_header": "`plot_second_linegraph.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "Parameterise Where4's performance by using a threshold, reading data from `data_for_second_linegraph.csv`. Renders `thresholds.pdf` to `paper` folder.\nThese plots show the effect of the threshold on the time taken for a response (top) and number of goals which can be proved (bottom).\n",
                "type": "Text_excerpt",
                "original_header": "`thresholds.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "An example of how the Benchexec framework is used to measure the CPU time consumed by each SMT solver.\n",
                "type": "Text_excerpt",
                "original_header": "`test_time.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        },
        {
            "result": {
                "value": "An application of the Why3 transformation `split_goal_wp` applied to every `.mlw` in order to count the number of simplified goals which could be created by this tactic. \n",
                "type": "Text_excerpt",
                "original_header": "`split_goal.py`",
                "parent_header": [
                    "Predicting SMT Solver Performance for Software Verification",
                    "Andrew Healy, Rosemary Monahan, James, F. Power",
                    "<a href=\"https://sites.google.com/site/fideworkshop2016/\">F-IDE 2016</a> support data"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Predicting SMT Solver Performance for Software Verification"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/ahealy19/F-IDE-2016/master/readme.md"
        }
    ]
}