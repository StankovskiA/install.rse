{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-03 20:05:49"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/Spirals-Team/test4repair-experiments",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "Spirals-Team",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2016-09-30T12:28:13Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-12-02T06:29:18Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Open-science repository about our experimental results on test generation for automatic program repair  ",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Test-suite based automated program repair \ntechniques are promising  yet suffer from the overfitting issue. We investigate the feasibility and effectiveness of \ntest case generation in alleviating the overfitting issue, and have proposed two approaches(MinImpact and UnsatGuided) for using test case generation\nto improve test suite based repair. The effectiveness of the proposed approaches is evaluated on 224 bugs of the Defects4J \nrepository. We use state-of-art test generation tool EvoSuite in this study. This repository contains the source code used \nto run the experiment, test cases generated by EvoSuite, patches generated by our approaches, and our analysis of the \ncorrectness of the generated patches. \nIf you use this data, please cite: \nWe recently have made a major revision of the above arxiv preprint and have submitted the new version to the Empirical Software Engineering journal (EMSE). The new version is titled \"Alleviating Patch Overfitting with Automatic Test Generation: A Study of Feasibility and Effectiveness for the Nopol Repair System\". In this new version, we deeply analyze the overfitting problem in program repair and give a classification of this problem. We also analyze and systematically evaluate the effectiveness of UnsatGuided in alleviating different kinds of overfitting behaviours. Experimetal data related with this new version are also put in this repository. \n \n",
                "original_header": "What is this repository?"
            },
            "confidence": 0.9437258900890394,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/Spirals-Team/test4repair-experiments/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "test4repair-experiments",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "Spirals-Team/test4repair-experiments",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/Spirals-Team/test4repair-experiments/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/Spirals-Team/test4repair-experiments/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 5,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 4,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/Spirals-Team/test4repair-experiments/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 137185443
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 200793
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 122234
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/Spirals-Team/test4repair-experiments/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/Spirals-Team/test4repair-experiments/master/results/jGenProg%2BMinImpact/scripts/runner_astor/src/python/lib/cobertura-report.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/Spirals-Team/test4repair-experiments/master/results/jGenProg%2BMinImpact/scripts/runner_astor/src/python/lib/cobertura-merge.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "The test generation tool used in this study is EvoSuite, and the EvoSuite version used corresponds to the commit ID 7a694a3aa2c5d4025c1ba0e1e9ef454398001a8b.\n\nIn particular, our experiment runs EvoSuite with the following setting:\n\n\" -Dassertion_timeout=1800 -Dminimization_timeout=1800 -Djunit_check_timeout=1800 -Dwrite_junit_timeout=300 \n-Dinitialization_timeout=300 -Dglobal_timeout=18000 -Dsearch_budget=100000 -Dstopping_condition=MaxStatements \n-Dno_runtime_dependency=true -Dsandbox=false -Dp_reflection_on_private=0.0 -Dreflection_start_percent=1.0   \n-Dp_functional_mocking=0.0 -Dfunctional_mocking_percent=1.0 -mem 2000 \"\n\nWe run EvoSuite 30 times with different seeds to account for the randomness of EvoSuite.\n",
                "type": "Text_excerpt",
                "original_header": "EvoSuite use",
                "parent_header": [
                    "The Test4Repair project"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/Spirals-Team/test4repair-experiments/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@article{yu:hal-01774223,\n    doi = {10.1007/s10664-018-9619-4},\n    year = {2018},\n    publisher = {{Springer Verlag}},\n    journal = {{Empirical Software Engineering}},\n    url = {https://hal.inria.fr/hal-01774223/file/alleviating_Overfitting.pdf},\n    author = {Yu, Zhongxing and Martinez, Matias and Danglot, Benjamin and Durieux, Thomas and Monperrus, Martin},\n    title = {Alleviating Patch Overfitting with Automatic Test Generation: A Study of Feasibility and Effectiveness for the Nopol Repair System},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.1007/s10664-018-9619-4",
                "title": "Alleviating Patch Overfitting with Automatic Test Generation: A Study of Feasibility and Effectiveness for the Nopol Repair System",
                "author": "Yu, Zhongxing and Martinez, Matias and Danglot, Benjamin and Durieux, Thomas and Monperrus, Martin",
                "url": "https://hal.inria.fr/hal-01774223/file/alleviating_Overfitting.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Spirals-Team/test4repair-experiments/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "The Test4Repair project"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/Spirals-Team/test4repair-experiments/master/README.md"
        }
    ]
}