{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:53:07"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/microsoft/ReACC",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "microsoft",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-03-03T02:50:09Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-08-29T11:48:03Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2022 Shuai Lu\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/LICENSE"
        },
        {
            "result": {
                "value": "Copyright (c) Microsoft Corporation. All rights reserved.\n\nLicensed under the [MIT](LICENSE) license.\n",
                "type": "Text_excerpt",
                "original_header": "License",
                "parent_header": [
                    "ReACC"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Source codes for paper \u201dReACC: A Retrieval-Augmented Code Completion Framework\u201c",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "You can modify the `InferDataset` in `infer.py` to fit your own dataset. Our dataset is formated as a jsonl file, where each line is like\n```json\n{\n        \"code\": \"def function()\",\n        \"id\": 0\n}\n```\nor a plain text file, in which each line is a code snippet.\n \n",
                "original_header": "2. Build an index for search"
            },
            "confidence": 0.9167082490401893,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "ReACC is a two-stage framework. The first stage is to retrieve the similar codes given a query. As the test set is fixed, we retrieve all the similar codes of the queries in test set in advance. **It would be better to merge step 3 into step 4.** \n",
                "original_header": "3. Retrieve step"
            },
            "confidence": 0.9280491996994898,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "In order to evaluate the effectiveness of the code-to-code retrieval module in ReACC, \nwe perform code clone detection task which aims to retrieve semantic equivalent programs. \n",
                "original_header": "Zero-shot code clone detection"
            },
            "confidence": 0.9596641559374215,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "ReACC",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "microsoft/ReACC",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/microsoft/ReACC/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/microsoft/ReACC/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 55,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 13,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/celbree/ReACC/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 143028
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 134
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/CODE_OF_CONDUCT.md"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/celbree/ReACC/main/parser/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "- pytorch >= 1.7.0\n- transformers >= 4.10.0\n- tree_sitter\n- faiss-gpu\n- beir (for BM25)\n  - elastic search\n",
                "type": "Text_excerpt",
                "original_header": "Dependency",
                "parent_header": [
                    "ReACC"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you use this code or ReACC, please consider citing us.\n<pre><code>@article{lu2022reacc,\n  title={ReACC: A Retrieval-Augmented Code Completion Framework},\n  author={Lu, Shuai and Duan, Nan and Han, Hojae and Guo, Daya and Hwang, Seung-won and Svyatkovskiy, Alexey},\n  journal={arXiv preprint arXiv:2203.07722},\n  year={2022}\n}</code></pre>\n",
                "type": "Text_excerpt",
                "original_header": "Reference",
                "parent_header": [
                    "ReACC"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Leverage [`microsoft/reacc-py-retriever`](https://huggingface.co/microsoft/reacc-py-retriever) as a code-to-code retriever for python source codes.\n \n",
                "original_header": "1. Pretrain a retriever"
            },
            "confidence": 0.9460853026493723,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "First, you have to prepare a codebase for retrieving. It is recommended to split each file/function into small chunks. (refer to `utils/split_codes.py`). Then run the command to get representations of all the codes in search corpus.\n```bash\npython -m torch.distributed.launch --nproc_per_node=${PER_NODE_GPU} infer.py \\\n        --data_path=data/train_split.txt \\\n        --save_name=save_vec \\\n        --lang=python \\\n        --pretrained_dir=microsoft/reacc-py-retriever \\\n        --num_vec=8 \\\n        --block_size=512 \\\n        --gpu_per_node ${PER_NODE_GPU} \\\n        --logging_steps=100 \n```\n \n",
                "original_header": "2. Build an index for search"
            },
            "confidence": 0.9115255349792656,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Navigate to the `gen` folder. We adapt the code completion scripts in [CodeXGLUE](https://github.com/microsoft/CodeXGLUE/tree/main/Code-Code/CodeCompletion-line). We modify the script `dataset.py` to include similar codes as input. Run `run_lm.py` to evaluate your fine-tuned model.\n```bash\nexport CUDA_VISIBLE_DEVICES=0\nLANG=python\nDATADIR=dataset/py150\nLITFILE=${DATADIR}/literals.json\nOUTPUTDIR=save/py150\nPRETRAINDIR=py150-ckpt\n\nLOADFILE=${DATADIR}/train_split\nRESFILE=search_res.pkl\nSAVEFILE=prediction.txt\n\npython -u run_lm.py \\\n        --data_dir=$DATADIR \\\n        --lit_file=$LITFILE \\\n        --langs=$LANG \\\n        --output_dir=$OUTPUTDIR \\\n        --pretrain_dir=$PRETRAINDIR \\\n        --load_file_name=$LOADFILE \\\n        --search_res=$RESFILE \\\n        --save_name=$SAVEFILE \\\n        --model_type=gpt2 \\\n        --block_size=1024 \\\n        --eval_line \\\n        --logging_steps=100 \\\n        --seed=42 \n```\n \n",
                "original_header": "4. Generation step"
            },
            "confidence": 0.9999971784131406,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Run the `codenet_test.py` to reproduce this experiment.\n```bash\nDATADIR=CodeNet\nPRETRAINDIR=microsoft/reacc-py-retriever\n \npython -u codenet_test.py \\\n        --data_dir=$DATADIR \\\n        --pretrained_dir=$PRETRAINDIR \\\n        --lang=python \\\n        --num_vec=8 \\\n        --cut \\\n        --block_size=512 \\\n        --per_gpu_eval_batch_size=64 \\\n        --logging_steps=100 \\\n        --seed=614 \n```\n \n",
                "original_header": "Zero-shot code clone detection"
            },
            "confidence": 0.9829929003796952,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Navigate to the `gen` folder. We adapt the code completion scripts in [CodeXGLUE](https://github.com/microsoft/CodeXGLUE/tree/main/Code-Code/CodeCompletion-line). We modify the script `dataset.py` to include similar codes as input. Run `run_lm.py` to evaluate your fine-tuned model.\n```bash\nexport CUDA_VISIBLE_DEVICES=0\nLANG=python\nDATADIR=dataset/py150\nLITFILE=${DATADIR}/literals.json\nOUTPUTDIR=save/py150\nPRETRAINDIR=py150-ckpt\n\nLOADFILE=${DATADIR}/train_split\nRESFILE=search_res.pkl\nSAVEFILE=prediction.txt\n\npython -u run_lm.py \\\n        --data_dir=$DATADIR \\\n        --lit_file=$LITFILE \\\n        --langs=$LANG \\\n        --output_dir=$OUTPUTDIR \\\n        --pretrain_dir=$PRETRAINDIR \\\n        --load_file_name=$LOADFILE \\\n        --search_res=$RESFILE \\\n        --save_name=$SAVEFILE \\\n        --model_type=gpt2 \\\n        --block_size=1024 \\\n        --eval_line \\\n        --logging_steps=100 \\\n        --seed=42 \n```\n \n",
                "original_header": "4. Generation step"
            },
            "confidence": 0.9503128513986078,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "ReACC"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2203.07722"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2203.03850"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/celbree/ReACC/main/README.md"
        }
    ]
}