{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 00:21:37"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/microsoft/neurips21-self-supervised-bug-detection-and-repair",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "microsoft",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-10-15T01:14:33Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-10-02T01:52:18Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "    MIT License\n\n    Copyright (c) Microsoft Corporation.\n\n    Permission is hereby granted, free of charge, to any person obtaining a copy\n    of this software and associated documentation files (the \"Software\"), to deal\n    in the Software without restriction, including without limitation the rights\n    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n    copies of the Software, and to permit persons to whom the Software is\n    furnished to do so, subject to the following conditions:\n\n    The above copyright notice and this permission notice shall be included in all\n    copies or substantial portions of the Software.\n\n    THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n    SOFTWARE\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Replication Code for \"Self-Supervised Bug Detection and Repair\" NeurIPS 2021",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This is the reference code to replicate the research in [Self-Supervised Bug Detection and Repair](https://arxiv.org/abs/2105.12787) in NeurIPS 2021.\nNote that due to internal dependencies, it is not possible to share the whole infrastructure. We provide\ninstructions to run the supervised learning parts. For the self-supervised, we provide the code as-is and some\ndocumentation below but it's not directly replicable without substantial work to setup the relevant infrastructure. \n",
                "original_header": "Self-Supervised Bug Detection and Repair"
            },
            "confidence": 0.9524719246027472,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Using this data, and as long as the original repository is\npresent online and its history is _not_ rewritten, the\ndataset can be extracted in a usable format. Please look at\n[`get_pypibugs.py`](/buglab/data/diffmining/get_pypibugs.py)\nfor a script scaffold that allows data re-extraction.\nThe code automatically, reads in the PyPiBugs dataset, clones\nthe repos and checkouts out the appropriate commits.\nThe `visit_buggy_code` and `visit_fixed_code` need to be implemented:\n* `visit_buggy_code` is called on the version of the code before fixing the bug.\n        The full repository and is accessible at the `repo_path` argument.\n* `visit_fixed_code` is called immediately after `visit_buggy_code` and the\n        repository is at the version after the bug is fixed. \n",
                "original_header": "PyPIBugs Dataset"
            },
            "confidence": 0.9913644658511023,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "1. Build the Docker container for extraction by navigating to the root directory and running2. Start:\n    ```commandline\n    docker build -f ./deployment/dockerfiles/baseimage.Dockerfile  -t buglab-extract .\n    ```\n2. Start a bug selector server. This is responsible for selecting bugs to introduce when generating data\n   for the bug detector. To use the random selector\n    BASH2*\n    Alternatively, this maybe a learned model,\n    BASH3*\n3. Start the data generating pipeline server\n    BASH4*\n   where the `package_list_path` is a list of packages (text file; one package per line). See the fixed data extraction\n   for more information about retrieving the `package_list_path`. This process is responsible for distributing work\n   across a number of workers, instantiates a deduplication server, and acts a proxy among workers and the training processes.\n4. Start one or more (usually around 400) processes for extracting the graph representations of source code. Each\n   process consults the `datageneratingpipeline_coordinator`, installs a package from PyPI and inserts bugs (rewrites\n   the code) and extract the graph representation. Each sample is then passed into the training process.\n   BASH5*\n   Please look at the command-line arguments for defining the addresses (IPs, ports) to the bug selector server,\n   deduplication server, pipeline coordinator, for more fine-grained control.\n5. Start the bug detector training process, the detector model server, and its data buffer\n   BASH6*\n   Again check the command line arguments for more fine-grained options.\n6. Start the bug selector training process, the bug selector model server, and the scoring pipeline which\n   scores the data with the detector probabilities used for the selector loss\n   BASH7*\n   Check the command line arguments for more fine-grained options. \n",
                "original_header": "Self-Supervised Learning Mode"
            },
            "confidence": 0.9590468709631103,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "* [`buglab.representations`](/buglab/representations) contains code to convert Python 3.x code into\n  its graph representation. Each pass (data flow, control flow, etc) can be found in the [`coderelations`](/buglab/representations/coderelations)\n  folder.\n* [`buglab.rewriting`](buglab/rewriting) contains code to perform rewrites (e.g. rewrites that [introduce bugs](buglab/rewriting/rewriteops.py)\n   or rewrites that commonly [preserve semantics](buglab/rewriting/semanticspreserving.py).)\n* [`buglab.data.deduplication`](buglab/data/deduplication) a client-server for streaming code deduplication.\n* [`buglab.models`](buglab/models) contains the high-level definitions of the models used. To define a new model,\n   add it to the [model registry](buglab/models/modelregistry.py). Entry points for supervised training, evaluation,\n   and visualization are provided here.\n* [`buglab.controllers`](buglab/controllers) that contains entry points for the various processes used\n  during self-supervised training. These can be invoked individually, and are also created by a Helm\n  deployment (defined in [`deployment`](deployment/buglab))\n \n",
                "original_header": "Repository Structure"
            },
            "confidence": 0.9792669427920321,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The BugLab compute infrastructure is managed through Terraform and Kubernetes.\n**This is provided as-is and no support will be provided by the maintainers to run the infrastructure**\nAll relevant code is found in the [`deployment/`](deployment) folder and is\nrelevant to running BugLab on Azure.\nNote that the [`variables.tf`](deployment/terraform/variables.tf) needs\nto be populated with user-specific variables.\nTerraform is responsible for creating the Azure infrastructure including an\nappropriately configured Kubernetes cluster. Helm is the templating language\nused to define Kubernetes deployments. \n",
                "original_header": "Infrastructure"
            },
            "confidence": 0.964499604248456,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft\ntrademarks or logos is subject to and must follow\n[Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).\nUse of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.\nAny use of third-party trademarks or logos are subject to those third-party's policies.\n \n",
                "original_header": "Trademarks"
            },
            "confidence": 0.9725227067402532,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "neurips21-self-supervised-bug-detection-and-repair",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "microsoft/neurips21-self-supervised-bug-detection-and-repair",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/microsoft/neurips21-self-supervised-bug-detection-and-repair/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/microsoft/neurips21-self-supervised-bug-detection-and-repair/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 108,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 24,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 464247
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HCL",
                "name": "HCL",
                "type": "Programming_language",
                "size": 8776
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Mustache",
                "name": "Mustache",
                "type": "Programming_language",
                "size": 3448
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 1837
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Smarty",
                "name": "Smarty",
                "type": "Programming_language",
                "size": 1772
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 217
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "code_of_conduct": [
        {
            "result": {
                "value": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/CODE_OF_CONDUCT.md"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/Dockerfile"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "# YAML 1.2\n---\nauthors:\n  -\n    family-names: Allamanis\n    given-names: Miltiadis\n    orcid: \"https://orcid.org/0000-0002-5819-9900\"\n  -\n    family-names: Jackson-Flux\n    given-names: Henry\n  -\n    family-names: Brockschmidt\n    given-names: Marc\ncff-version: \"1.1.0\"\nmessage: \"If you use parts of this repository, please cite it using these metadata.\"\nrepository-code: \"https://github.com/microsoft/neurips21-self-supervised-bug-detection-and-repair\"\nlicense: MIT\ntitle: \"Self-Supervised Bug Detection and Repair\"\n...\n",
                "type": "File_dump",
                "format": "cff"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/CITATION.cff"
        },
        {
            "result": {
                "value": "@inproceedings{allamanis2021self,\n    year = {2021},\n    booktitle = {NeurIPS},\n    author = {Allamanis, Miltiadis and Jackson-Flux, Henry and Brockschmidt, Marc},\n    title = {Self-Supervised Bug Detection and Repair},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Self-Supervised Bug Detection and Repair",
                "author": "Allamanis, Miltiadis and Jackson-Flux, Henry and Brockschmidt, Marc"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/deployment/dockerfiles/build-containers.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "To connect your `kubectl` command with the Kubernetes cluster that Terraform is now managing for you,\ndump the output of `terraform output kube_config` into a file somewhere. In powershell:\n```commandline\nterraform output -raw kube_config | Out-File -FilePath azurek8s\n```\nor bash:\n```commandline\nterraform output -raw kube_config > azurek8s\n```\nwill put it in a file called `azurek8s` within the `terraform` directory.\n\nThen set your `KUBECONFIG` environment variable to point towards this file. In powershell:\n```commandline\n$Env:KUBECONFIG = \"C:\\path\\to\\azurek8s\"\n```\nand bash:\n```commandline\nexport KUBECONFIG=\"/path/to/azurek8s\"\n```\n\nNow, running the command `kubectl get nodes` _should_ give you a list of all of the compute nodes\nwhich are defined in the `kube.tf` file.\n",
                "type": "Text_excerpt",
                "original_header": "Get the Kubernetes Credentials and Connect to K8s",
                "parent_header": [
                    "Self-Supervised Bug Detection and Repair",
                    "Infrastructure",
                    "Spawning the BugLab infrastructure"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "value": "Kubernetes is a useful tool with a steep learning curve. We should keep some of the more useful\ncommands here for reference. It will not be an exhaustive list at all.\n\nTo see what pods are running, run\n```commandline\nkubectl get pods\n```\nThe output will look something like:\n```commandline\nNAME                             READY   STATUS    RESTARTS   AGE\ntrain-selector-bc6cb4b4f-zjmg7   1/1     Running   0          42m\n```\nwith possibly pods, depending on what is currently running. To see logs from a pod you are interested\nin, run:\n```commandline\nkubectl logs train-selector-bc6cb4b4f-zjmg7\n```\n(where the name is copied from the output of `kubectl get pods`).\n\nFor more detail about the pod creation process (useful if the `STATUS` is `Failed` or something\nsimilarly disappointing), run:\n```commandline\nkubectl describe pod train-selector-bc6cb4b4f-zjmg7\n```\n\nIf the pod status is `RUNNING`, but you want to check if\n- data has mounted properly\n- the GPU exists\n- the expected processes are running\n\nor similar, you can connect directly to a pod and get an interactive prompt using the command:\n```commandline\nkubectl exec --stdin --tty train-selector-bc6cb4b4f-zjmg7 -- bash\n```\nYour prompt will then be that of the container running in the pod, and you should then be able to\nrun `nvidia-smi`, `htop` or any other of your favourite inspection tools.\n",
                "type": "Text_excerpt",
                "original_header": "Useful K8s commands",
                "parent_header": [
                    "Self-Supervised Bug Detection and Repair",
                    "Infrastructure",
                    "Spawning the BugLab infrastructure",
                    "Get the Kubernetes Credentials and Connect to K8s"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "value": "To start an experiment in the K8s cluster use `helm`. First navigate to the `deployment` folder where\nthe `buglab` Helm chart is located. Then kick-off an experiment:\n```\nhelm install NAME_OF_EXPERIMENT ./buglab/ -n NAME_OF_EXPERIMENT --create-namespace -f config.yml\n```\nyou can use the `--dry-run` option to check the Kubernetes configuration before running.\n\nTo stop an experiment run\n```\nhelm uninstall NAME_OF_EXPERIMENT -n NAME_OF_EXPERIMENT\n```\n",
                "type": "Text_excerpt",
                "original_header": "Starting experiments",
                "parent_header": [
                    "Self-Supervised Bug Detection and Repair",
                    "Infrastructure"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "value": "There are two instances of Grafana that will be useful for monitoring experiments. One is for\nmonitoring the compute resources in the cluster, and the other is for monitoring your specific\nexperiment.\n",
                "type": "Text_excerpt",
                "original_header": "Monitoring",
                "parent_header": [
                    "Self-Supervised Bug Detection and Repair",
                    "Infrastructure",
                    "Starting experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "value": "To see a cluster wide monitor to check how compute resources are being used, you will want to\nconnect to the Grafana service on the `monitoring` namespace. Run the command\n```commandline\nkubectl --namespace monitoring port-forward svc/kube-prometheus-stack-grafana 8080:80\n```\nand then navigate to `localhost:8080`. The username is `admin` and password is `prom-operator`. There\nare many dashboards pre-configured to look at the compute resources broken down by pod and node.\n\nIt looks like GPU use monitoring is not supported for the type of GPU we are currently using.\nFollowing instructions from [here](https://developer.nvidia.com/blog/monitoring-gpus-in-kubernetes-with-dcgm)\nI tried installing the metric exporter. The command\n```commandline\nhelm install --generate-name gpu-helm-charts/dcgm-exporter -f .\\deployment\\terraform\\nvidia_values.yaml\n```\nworks successfully, but the pods themselves fail with logs:\n```commandline\nlevel=fatal msg=\"Error watching fields: Profiling is not supported for this group of GPUs or GPU\"\n```\nIt might be worth trying again at later, when GPU support has broadened.\n",
                "type": "Text_excerpt",
                "original_header": "Resource monitoring",
                "parent_header": [
                    "Self-Supervised Bug Detection and Repair",
                    "Infrastructure",
                    "Starting experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "value": "When you start an experiment using the `helm install` command described in the previous section,\nit will start a Grafana instance running in the namespace that you specified. Find it's name by\nfirst running\n```commandline\nkubectl --namespace NAME_OF_EXPERIMENT get pods\n```\nand then connecting to by running (something like)\n```commandline\nkubectl --namespace NAME_OF_EXPERIMENT port-forward grafana-5f977fdd7c-zpqcd 3000\n```\nNote the difference in port! You need to connect to 3000 in this instance. Navigate to `localhost:3000`.\nThe username and password are both `admin` for this instance.\n\nThe `json` definition of the dashboards that are loaded by default are stored in this repo in the\n`grafana/dashboards` directory. However, they are actually read from the `grafana` blob container\nin the BugLab storage account. If you make changes in the `grafana/dashboards` directory, they will\nnot be reflected in the dashboards that you actually see until you (manually) sync the changes with\nto the `grafana` blob, and then restart your Grafana service.\n",
                "type": "Text_excerpt",
                "original_header": "Experiment monitoring",
                "parent_header": [
                    "Self-Supervised Bug Detection and Repair",
                    "Infrastructure",
                    "Starting experiments"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "The test suite takes a long time to run, thus first select the test that you're\ninterested in running.\n```commandline\npytest -k \"name_of_test\" -s .\n```\nat the root of the project.\n",
                "type": "Text_excerpt",
                "original_header": "Running Tests",
                "parent_header": [
                    "Self-Supervised Bug Detection and Repair",
                    "Developing"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "This project welcomes contributions and suggestions.  Most contributions require you to agree to a\nContributor License Agreement (CLA) declaring that you have the right to, and actually do, grant us\nthe rights to use your contribution. For details, visit https://cla.opensource.microsoft.com.\n\nWhen you submit a pull request, a CLA bot will automatically determine whether you need to provide\na CLA and decorate the PR appropriately (e.g., status check, comment). Simply follow the instructions\nprovided by the bot. You will only need to do this once across all repos using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n",
                "type": "Text_excerpt",
                "original_header": "Contributing",
                "parent_header": [
                    "Self-Supervised Bug Detection and Repair"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To create a dataset with fixed (randomly selected) bugs, use the following instructions: \n1. Build the Docker container for extraction by navigating to the root directory and running. Start :\n    ```commandline\n    docker build -f deployment/dockerfiles/baseimage.Dockerfile -t buglab-base .\n    ```\n1. Create a text file containing the names of the PyPi packages to be extracted.\n    * You can find the 4k most downloaded packages [here](https://hugovk.github.io/top-pypi-packages/).\n    * You can get a list of _all_ PyPi packages using the utilities in `buglab.data.pypi.utils.get_all_pypi_packages`.\n1. Start the extraction\n    BASH2*\n   The results will be saved at the `target_dir`.\n   The code will create multiple processes each spawning\n   a Docker container that is executing the main in\n   `buglab.controllers.packageextracttodisk` that extracts the\n   data from a single package. \n",
                "original_header": "Random Bugs Data Extraction"
            },
            "confidence": 0.9974449731783541,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "We provide the PyPIBugs dataset as a set of URLs and git SHAs, which\ncan be used to re-extract the dataset. Please download the dataset from\n[here](https://www.microsoft.com/en-us/download/103554). The dataset\nhas a json lines ([JSONL](https://jsonlines.org/)) format with each\nline having the format:\n```\n{\n    \"repo\": \"url-to-git\",\n    \"hash\": \"SHA of bug fixing commit\",\n    \"diff\": \"diff hunk\",\n    \"old_path\": \"filepath wrt to repo root\",\n    \"rewrite\": \"the bug fixing rewrite metadata\"\n}\n``` \n",
                "original_header": "PyPIBugs Dataset"
            },
            "confidence": 0.9887622781365057,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This requires GraphViz and Dot. To get the graph of a single file run\n```commandline\npython -m buglab.representations.asdot path/to/file.py output/path.dot\ndot -Tpdf output/path.dot > output/path.pdf\n```\n \n",
                "original_header": "Visualizing graph representation"
            },
            "confidence": 0.9963944034264587,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Note that this requires an installation of [`streamlit`](https://www.streamlit.io/).\n \n",
                "original_header": "Interactive Model Explorer"
            },
            "confidence": 0.9217648291866678,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "First, make sure you have installed [Azure CLI](https://docs.microsoft.com/en-us/cli/azure/), [terraform](https://www.terraform.io/downloads.html),\n[kubectl (kubernetes cli)](https://kubernetes.io/docs/tasks/tools/install-kubectl/), and\n[helm](https://helm.sh/).\n \n",
                "original_header": "Infrastructure"
            },
            "confidence": 0.9892445816436888,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "If you are recreating this project, rather than working on an already-started version of it,\nyou will need to register an app, create a service principal, and a client secret following the instructions\n[here](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/guides/service_principal_client_secret).\nYou can find more detail on apps and service principals\n[here](https://docs.microsoft.com/en-us/azure/active-directory/develop/app-objects-and-service-principals) if you need it.\nMake sure that the service principal has \"contributor\" rights for your resource group.\n \n",
                "original_header": "Spawning the BugLab infrastructure"
            },
            "confidence": 0.9999952467231729,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Once you have filled [`variables.tf`](deployment/terraform/variables.tf)  open up a shell and navigate to the Terraform directory\nand run `terraform init`:\n```commandline\ncd $CODE/BugLab/deployment/terraform\nterraform init\n``` \n",
                "original_header": "Initialise Terraform"
            },
            "confidence": 0.9997768806133133,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To contribute to this project, first follow the next steps to setup your\ndevelopment environment:\n* Install the library requirements.\n* Install the pre-commit hooks:\n    * Run `pip3 install pre-commit`\n    * Install the hooks `pre-commit install` \n",
                "original_header": "Developing"
            },
            "confidence": 1.0,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft\ntrademarks or logos is subject to and must follow\n[Microsoft's Trademark & Brand Guidelines](https://www.microsoft.com/en-us/legal/intellectualproperty/trademarks/usage/general).\nUse of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship.\nAny use of third-party trademarks or logos are subject to those third-party's policies.\n \n",
                "original_header": "Trademarks"
            },
            "confidence": 0.9988852287322683,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To evaluate a model run\n```commandline\npython buglab/models/evaluate.py MODEL_FILENAME TEST_DATA_PATH\n``` \n",
                "original_header": "Supervised Learning Mode"
            },
            "confidence": 0.914706953896369,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Self-Supervised Bug Detection and Repair"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/etc/InfrastructureDiagram.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2105.12787"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/microsoft/neurips21-self-supervised-bug-detection-and-repair/main/README.md"
        }
    ]
}