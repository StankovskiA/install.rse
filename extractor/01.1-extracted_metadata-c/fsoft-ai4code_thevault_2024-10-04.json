{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 19:59:56"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/FSoft-AI4Code/TheVault",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "FSoft-AI4Code",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-10-27T09:12:22Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-08-29T02:03:43Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2022 FPT Software, Inc.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/LICENSE"
        },
        {
            "result": {
                "value": "[MIT License](LICENSE)\n",
                "type": "Text_excerpt",
                "original_header": "License"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "[EMNLP 2023] The Vault: A Comprehensive Multilingual Dataset for Advancing Code Understanding and Generation",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "The Vault dataset is a comprehensive, large-scale, multilingual parallel dataset that features high-quality code-text pairs derived from The Stack, the largest permissively-licensed source code dataset.\n\nWe provide The Vault which contains code snippets from 10 popular programming languages such as Java, JavaScript, Python, Ruby, Rust, Golang, C#, C++, C, and PHP. This dataset provides multiple code-snippet levels, metadata, and 11 docstring styles for enhanced usability and versatility.\n\n![Something something](./assets/TheVault-Poster.png)",
                "type": "Text_excerpt",
                "original_header": "Data Summary",
                "parent_header": [
                    "The Vault Dataset"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To avoid data leakage, we allocated all samples from the same repository to a singular set. We then subdivided these sets using code tokens as splitting factors. As a result, these subsets mirror the distribution of the full dataset. \n",
                "original_header": "Splitting train/eval/test"
            },
            "confidence": 0.9711884849649226,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "TheVault",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "FSoft-AI4Code/TheVault",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/FSoft-AI4Code/TheVault/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/FSoft-AI4Code/TheVault/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 81,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "ai4code, dataset, multilingual-nlp",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/fsoft-ai4code/thevault/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 335170
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 135825
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 1393
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/src/analysis/thevault_visualization.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/src/analysis/thevault_visualization.ipynb"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/src/postprocess/license_filter/filter.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Every sample of The Vault are stored in form of a json object and compressed into a large json line file. Each sample corresponds to one raw code file. The content of the file are used to extracting function, class and inline set, other information (repository name, licenses, etc) are collected from source dataset (The Stack).\n",
                "type": "Text_excerpt",
                "original_header": "Data Instances",
                "parent_header": [
                    "The Vault Dataset",
                    "Data Structure"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        },
        {
            "result": {
                "value": "To setup environment and install dependencies via `pip`:\n```bash\npip -r install requirements.txt\n```\n\nInstall `codetext` parser to extract code using [tree-sitter](https://tree-sitter.github.io/tree-sitter/), via `pip`:\n```bash\npip install codetext\n```\n\nOr manually build `codetext` form source, see more at [`Codetext` repo](https://github.com/FSoft-AI4Code/CodeText-parser)\n```bash\ngit clone https://github.com/FSoft-AI4Code/CodeText-parser.git\ncd CodeText-parser\npip install -e .\n```\n",
                "type": "Text_excerpt",
                "original_header": "Getting Started",
                "parent_header": [
                    "The Vault Toolkit"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "download": [
        {
            "result": {
                "value": "We publish The Vault ([function](https://huggingface.co/datasets/Fsoft-AIC/the-vault-function)/[inline](https://huggingface.co/datasets/Fsoft-AIC/the-vault-inline)/[class](https://huggingface.co/datasets/Fsoft-AIC/the-vault-class)) on Huggingface dataset hub.\n\n```python\nfrom datasets import load_dataset\n\n# Load full function/class/inline level dataset\ndataset = load_dataset(\"Fsoft-AIC/the-vault-{function/class/inline}\")\n\n# Load function level train/validation/test set\ndataset = load_dataset(\"Fsoft-AIC/the-vault-function\", split_set=[\"train\"])\n\n# Load \"small\" (or \"medium\", \"full\") function level training set\ndataset = load_dataset(\"Fsoft-AIC/the-vault-function\", split_set=[\"train/small\"])\n\n# specific language (e.g. Python) \ndataset = load_dataset(\"Fsoft-AIC/the-vault-function\", split_set=[\"train\"], languages=['Python'])\n\n# dataset streaming\ndata = load_dataset(\"Fsoft-AIC/the-vault-function\", split_set= [\"train\"], streaming= True)\nfor sample in iter(data['train']): \n    print(sample)\n```",
                "type": "Text_excerpt",
                "original_header": "Load dataset on Huggingface",
                "parent_header": [
                    "The Vault Dataset",
                    "Download dataset"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        },
        {
            "result": {
                "value": "Or download the Vault directly from Azure blob storage via download link. Here are the link pattern for specific download option:\n> https://ai4code.blob.core.windows.net/thevault/v1/{function,class,inline}/{python,java,javascript,go,cpp,c_sharp,c,rust,ruby,php}.zip\n\nFor example, download *class* of *Python*:\n> https://ai4code.blob.core.windows.net/thevault/v1/class/python.zip\n\nOr download using the script [`download_dataset.py`](./resources/download_dataset.py):\n```bash\npython download_dataset.py \"<path/to/destination>\" --set \"function\" # or class/inline\n```\n\n_Note: blob link currently only contains function-level version_\n",
                "type": "Text_excerpt",
                "original_header": "Download via link",
                "parent_header": [
                    "The Vault Dataset",
                    "Download dataset"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "More details can be found in our [paper](https://arxiv.org/abs/2305.06156). \n\nIf you're using The Vault or the toolkit in your research or applications, please cite using this BibTeX:\n```bibtex\n@article{manh2023vault,\n  title={The Vault: A Comprehensive Multilingual Dataset for Advancing Code Understanding and Generation},\n  author={Manh, Dung Nguyen and Hai, Nam Le and Dau, Anh TV and Nguyen, Anh Minh and Nghiem, Khanh and Guo, Jin and Bui, Nghi DQ},\n  journal={arXiv preprint arXiv:2305.06156},\n  year={2023}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citing The Vault"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        },
        {
            "result": {
                "value": "@article{manh2023vault,\n    year = {2023},\n    journal = {arXiv preprint arXiv:2305.06156},\n    author = {Manh, Dung Nguyen and Hai, Nam Le and Dau, Anh TV and Nguyen, Anh Minh and Nghiem, Khanh and Guo, Jin and Bui, Nghi DQ},\n    title = {The Vault: A Comprehensive Multilingual Dataset for Advancing Code Understanding and Generation},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "The Vault: A Comprehensive Multilingual Dataset for Advancing Code Understanding and Generation",
                "author": "Manh, Dung Nguyen and Hai, Nam Le and Dau, Anh TV and Nguyen, Anh Minh and Nghiem, Khanh and Guo, Jin and Bui, Nghi DQ"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "contact": [
        {
            "result": {
                "value": "If you have any questions, comments or suggestions, please do not hesitate to contact us.\n- Website: [fpt-aicenter](https://www.fpt-aicenter.com/ai-residency/)\n- Email: support.ailab@fpt.com\n",
                "type": "Text_excerpt",
                "original_header": "Contact us"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "We seperated the source code into multiple steps (coresponde for each process). Or you can run the full pipeline follow [this tutorial](#processing-custom-dataset). \n",
                "original_header": "Processing Pipeline"
            },
            "confidence": 0.948388590218904,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "From raw code, you can extract function, class using [`process_raw_node()`](./src/utils/utils.py#L138). An example structure of a raw code snippet show in the figure below. Inside a node are identifier, parameter or argument list, code and comment (docstring). \n```python\nfrom codetext.utils import parse_code\nfrom codetext.parser import PythonParser\n\ncode_snippet = \"\"\"\ndef sum2num(a: int, b: int):\n  '''\n  :param a: first number\n  :param b: second number\n  '''\n  return a + b # result\n\"\"\"\ncode_tree = parse_code(code_snippet, 'cpp')\n\nres = process_raw_node(\n    tree=code_tree, \n    blob=code_snippet,\n    language_parser=PythonParser(),\n    metadata={'repo': 'test'}  # Optional\n)\n\n# or extrating line\n\nres = get_line_definitions(\n    tree=code_tree, \n    blob=code_snippet,\n    language_parser=PythonParser(),\n    source_metadata={'repo': 'test'}  # Optional\n)\n```\nFor extracting raw inline comment, the function [`get_line_definitions()`](./src/utils/utils.py#L279) can help to extract line comment and return the parent code block, previous and next context (i.e. code block).\n```python\nfrom codetext.utils import parse_code\nfrom codetext.parser import PythonParser\n\ncode_snippet = \"\"\"\ndef sum2num(a: int, b: int):\n  '''\n  :param a: first number\n  :param b: second number\n  '''\n  return a + b\n\"\"\"\ncode_tree = parse_code(code_snippet, 'cpp')\n\nres = process_raw_node(\n    tree=code_tree, \n    blob=code_snippet,\n    language_parser=PythonParser(),\n    metadata={'repo': 'test'}  # Optional\n)\n```\n \n",
                "original_header": "Extracting Raw code"
            },
            "confidence": 0.9173388968885777,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Arguments list:\n```\npositional arguments:\n  data_path             data folder contain file.jsonl or huggingface dataset cache\n\noptions:\n  -h, --help            show this help message and exit\n  --save_path SAVE_PATH\n                        Processed data save path\n  --level LEVEL         Extract function/class/inline level or all\n  --language LANGUAGE   Declare processing language (e.g: Python, Java)\n  --data_format DATA_FORMAT\n                        Path to file .yaml contains data format\n  --load_from_file      Load from .json or .jsonl\n  --cons_from_raw       Continues from raw .jsonl (pass folder path to data)\n  --raw_only\n  --filtered_only\n  --extracted_only\n  --n_split N_SPLIT     Split all the raw data into N file and feed into process pool\n  --n_core N_CORE       Number of maximum process to create\n  --debug\n```\n \n",
                "original_header": "Processing Custom Dataset"
            },
            "confidence": 0.9074807916506005,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": ""
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/./assets/the-vault-4-logo-png.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/./assets/TheVault-Poster.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/./assets/pipeline.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/./assets/raw-node.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/./assets/docstring-style.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2305.06156"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/fsoft-ai4code/thevault/main/README.md"
        }
    ]
}