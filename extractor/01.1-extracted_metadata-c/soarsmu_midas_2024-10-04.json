{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 19:12:37"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/soarsmu/midas",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "soarsmu",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-09-26T04:48:08Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-07-27T08:37:34Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "MiDas: Multi-granularity Detector for Vulnerability Fixes (IEEE TSE)",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MiDas is a transformer-based novel techinique for detecting vulnerability-fixing commits. MiDas extract information of commit in respect to multiple levels of granularity (i.e. commit level, file level, hunk level, line level)\n\nMiDas consists of seven feature extractors, regard the combination of granularity and CodeBERT representation:\n\n| Feature extractor index | Granularity | CodeBERT representation |\n|------------------|-------------|-------------------------|\n| 1                | Commit      | Context-dependant       |\n| 2                | File        | Context-dependant       |\n| 3                | Hunk        | Context-dependant       |\n| 5                | Commit      | Context-free            |\n| 6                | File        | Context-free            |\n| 7                | Hunk        | Context-free            |\n| 8                | Line        | Context-free            |\n\n\nTo replicate the training process of MiDas, please follow the below steps:\n\n        1. Finetune CodeBERT for each feature extractor\n        2. Save commit embedding vectors represented by CodeBERT\n        3. Train feature extractors\n        4. Infer feature extractors to extract commit's features\n        5. Train neural classifier\n        6. Apply adjustment function \n        7. Evaluate MiDas \n",
                "type": "Text_excerpt",
                "original_header": "\ud83d\udcc3 Introduction",
                "parent_header": [
                    "\u2699\ufe0f MiDas \ud83d\udd0e"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "midas",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "soarsmu/midas",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/soarsmu/midas/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/soarsmu/midas/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 10,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "large-language-models, software-composition-analysis, vulnerability-scanner",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/soarsmu/midas/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 653449
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "Make sure you create a directory to store embedding vectors, a folder \"model\" to store saved model, and a \"features\" folder to store extractor features following this hierarchy:\n```\n    MiDas\n        model\n        features\n        ...\n    finetuned_embeddings\n        variant_1\n        variant_2\n        variant_3\n        variant_5\n        variant_6\n        variant_7\n        variant_8\n```\n\nNote: If you run MiDas on a Docker container, please run docker with parameters: \"LANG=C.UTF-8 -e LC_ALL=C.UTF-8\" to avoid error when writing to file, \"--shm-size 16G\" to avoid memory problem, \"--gpus all\" in case you use multiple GPUs\n",
                "type": "Text_excerpt",
                "original_header": "\ud83d\udd27 Prerequisites",
                "parent_header": [
                    "\u2699\ufe0f MiDas \ud83d\udd0e"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "<p align=\"center\">\n    <a href=\"https://ieeexplore.ieee.org/document/10138621\"><img src=\"https://img.shields.io/badge/Journal-IEEE TSE Volume 49 (2023)-green?style=for-the-badge\">\n    <a href=\"https://arxiv.org/pdf/2305.13884.pdf\"><img src=\"https://img.shields.io/badge/arXiv-2305.13884-b31b1b.svg?style=for-the-badge\">\n    <a href=\"https://hub.docker.com/r/thanhlecong/midas\"><img src=\"https://img.shields.io/badge/docker-thanhlecong%2Fmidas-%230db7ed.svg?style=for-the-badge&logo=docker&logoColor=white\"></a>\n</p>\n      \nWelcome to the source code repo of **MiDas**, a vulnerability-fixing commit detection tool introduced in our paper \"Multi-granularity Detector for Vulnerability Fixes\"!  \n",
                "original_header": "\u2699\ufe0f MiDas \ud83d\udd0e"
            },
            "confidence": 0.9590516914184912,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The dataset is available at: https://zenodo.org/record/5565182#.Yv3lHuxBxO8\nPlease download and put dataset inside the MiDas folder \n",
                "original_header": "\ud83d\udcc1 Dataset"
            },
            "confidence": 0.9745282964665685,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Note: The current code base requires two GPUs to run. We will try to make it more flexible. \n \n",
                "original_header": "\ud83d\ude80 Replication"
            },
            "confidence": 0.994151619162757,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "| Feature extractor index | Finetuning script                     |\n|------------------|---------------------------------------|\n| 1                | python variant_1_finetune.py          |\n| 2                | python variant_2_finetune.py          |\n| 3                | python variant_3_finetune_separate.py |\n| 5                | python variant_5_finetune.py          |\n| 6                | python variant_6_finetune.py          |\n| 7                | python variant_7_finetune_separate.py |\n| 8                | python variant_8_finetune_separate.py |\n \n",
                "original_header": "Finetune CodeBERT"
            },
            "confidence": 0.9999569530889374,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "| Feature extractor index | Saving embeddings script                 |\n|------------------|------------------------------------------|\n| 1                | python preprocess_finetuned_variant_1.py |\n| 2                | python preprocess_finetuned_variant_2.py |                    \n| 3                | python preprocess_finetuned_variant_3.py |        \n| 5                | python preprocess_finetuned_variant_5.py |           \n| 6                | python preprocess_finetuned_variant_6.py |           \n| 7                | python preprocess_finetuned_variant_7.py |  \n| 8                | python preprocess_finetuned_variant_8.py |   \n| Feature extractor index | Extractor training script                 |\n|------------------|------------------------------------------|\n| 1                | python variant_1.py |\n| 2                | python variant_2.py |                    \n| 3                | python variant_3.py |        \n| 5                | python variant_5.py |           \n| 6                | python variant_6.py |           \n| 7                | python variant_7.py |  \n| 8                | python variant_8.py |   \n",
                "original_header": "Saving embedding vectors"
            },
            "confidence": 0.9999228116101493,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Simply use the following two commands:\n```python3 feature_extractor_infer.py```\n \n```python3 ensemble_classifier.py --model_path model/patch_ensemble_model.sav --java_result_path probs/prob_ensemble_classifier_test_java.txt --python_result_path probs/prob_ensemble_classifier_test_python.txt``` \n",
                "original_header": "Infer feature extractors and train neural classifier"
            },
            "confidence": 0.9810201784980843,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Simply run:\n```python adjustment_runner.py```\n \n",
                "original_header": "Apply adjustment function"
            },
            "confidence": 0.9624266514136671,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "| Feature extractor index | Finetuning script                     |\n|------------------|---------------------------------------|\n| 1                | python variant_1_finetune.py          |\n| 2                | python variant_2_finetune.py          |\n| 3                | python variant_3_finetune_separate.py |\n| 5                | python variant_5_finetune.py          |\n| 6                | python variant_6_finetune.py          |\n| 7                | python variant_7_finetune_separate.py |\n| 8                | python variant_8_finetune_separate.py |\n \n",
                "original_header": "Finetune CodeBERT"
            },
            "confidence": 0.9158452248493979,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "| Feature extractor index | Saving embeddings script                 |\n|------------------|------------------------------------------|\n| 1                | python preprocess_finetuned_variant_1.py |\n| 2                | python preprocess_finetuned_variant_2.py |                    \n| 3                | python preprocess_finetuned_variant_3.py |        \n| 5                | python preprocess_finetuned_variant_5.py |           \n| 6                | python preprocess_finetuned_variant_6.py |           \n| 7                | python preprocess_finetuned_variant_7.py |  \n| 8                | python preprocess_finetuned_variant_8.py |   \n| Feature extractor index | Extractor training script                 |\n|------------------|------------------------------------------|\n| 1                | python variant_1.py |\n| 2                | python variant_2.py |                    \n| 3                | python variant_3.py |        \n| 5                | python variant_5.py |           \n| 6                | python variant_6.py |           \n| 7                | python variant_7.py |  \n| 8                | python variant_8.py |   \n",
                "original_header": "Saving embedding vectors"
            },
            "confidence": 0.9205845772117335,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "```python3 ensemble_classifier.py --model_path model/patch_ensemble_model.sav --java_result_path probs/prob_ensemble_classifier_test_java.txt --python_result_path probs/prob_ensemble_classifier_test_python.txt``` \n",
                "original_header": "Infer feature extractors and train neural classifier"
            },
            "confidence": 0.9149346513950316,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Simply run:\n```python adjustment_runner.py```\n \n",
                "original_header": "Apply adjustment function"
            },
            "confidence": 0.908052097168474,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@article{nguyen2023midas,\n    number = {},\n    volume = {},\n    year = {2023},\n    title = {Multi-granularity Detector for Vulnerability Fixes},\n    journal = {IEEE Transactions on Software Engineering},\n    author = {Nguyen, Truong Giang and Le-Cong, Thanh and Kang, Hong Jin and Widyasari, Ratnadira and Yang, Chengran and Zhao, Zhipeng and Xu, Bowen and Zhou, Jiayuan and Xia, Xin and Hassan, Ahmed E. and Le, Xuan-Bach D. and Lo, David},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Multi-granularity Detector for Vulnerability Fixes",
                "author": "Nguyen, Truong Giang and Le-Cong, Thanh and Kang, Hong Jin and Widyasari, Ratnadira and Yang, Chengran and Zhao, Zhipeng and Xu, Bowen and Zhou, Jiayuan and Xia, Xin and Hassan, Ahmed E. and Le, Xuan-Bach D. and Lo, David"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "\u2699\ufe0f MiDas \ud83d\udd0e"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2305.13884.pdf\"><img src=\"https://img.shields.io/badge/arXiv-2305.13884-b31b1b.svg?style=for-the-badge\">\n    <a href=\"https://hub.docker.com/r/thanhlecong/midas\"><img src=\"https://img.shields.io/badge/docker-thanhlecong%2Fmidas-%230db7ed.svg?style=for-the-badge&logo=docker&logoColor=white\"></a>\n</p>\n      \nWelcome to the source code repo of **MiDas**, a vulnerability-fixing commit detection tool introduced in our paper \"Multi-granularity Detector for Vulnerability Fixes\"! \n\nPlease cite the following article if you find Midas to be useful:\n\nTruong Giang Nguyen, Thanh Le-Cong, Hong Jin Kang, Ratnadira Widyasari, Chengran Yang, Zhipeng\nZhao, Bowen Xu, Jiayuan Zhou, Xin Xia, Ahmed E. Hassan, Xuan-Bach D. Le, and David Lo\n\n```\n@article{nguyen2023midas,\n  author={Nguyen, Truong Giang and Le-Cong, Thanh and Kang, Hong Jin and Widyasari, Ratnadira and Yang, Chengran and Zhao, Zhipeng and Xu, Bowen and Zhou, Jiayuan and Xia, Xin and Hassan, Ahmed E. and Le, Xuan-Bach D. and Lo, David},\n  journal={IEEE Transactions on Software Engineering}, \n  title={Multi-granularity Detector for Vulnerability Fixes}, \n  year={2023},\n  volume={},\n  number={},\n}\n```\n## \ud83d\udcc3 Introduction\nMiDas is a transformer-based novel techinique for detecting vulnerability-fixing commits. MiDas extract information of commit in respect to multiple levels of granularity (i.e. commit level, file level, hunk level, line level"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/soarsmu/midas/main/README.md"
        }
    ]
}