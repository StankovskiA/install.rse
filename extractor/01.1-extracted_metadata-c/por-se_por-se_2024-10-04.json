{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 19:14:05"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/por-se/por-se",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "por-se",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2020-04-20T11:16:31Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-16T15:10:07Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": null,
                "type": "License",
                "name": "Other",
                "url": null,
                "spdx_id": "NOASSERTION"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "por-se",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "por-se/por-se",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/por-se/por-se/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/por-se/por-se/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 12,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "partial-order-reduction, symbolic-execution",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/por-se/por-se/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "C++",
                "name": "C++",
                "type": "Programming_language",
                "size": 2098950
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "C",
                "name": "C",
                "type": "Programming_language",
                "size": 1301297
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CMake",
                "name": "CMake",
                "type": "Programming_language",
                "size": 116497
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "LLVM",
                "name": "LLVM",
                "type": "Programming_language",
                "size": 92577
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 89241
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 37526
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "PHP",
                "name": "PHP",
                "type": "Programming_language",
                "size": 17212
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "NASL",
                "name": "NASL",
                "type": "Programming_language",
                "size": 16486
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 10517
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Emacs Lisp",
                "name": "Emacs Lisp",
                "type": "Programming_language",
                "size": 2917
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 2810
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 2140
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "SMT",
                "name": "SMT",
                "type": "Programming_language",
                "size": 403
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/por-se/por-se/master/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/utils/grafana/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/por-se/por-se/master/utils/grafana/Dockerfile"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/utils/grafana/upload.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/scripts/genTempFiles.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/scripts/opt-sanitized.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/scripts/build/run-tests.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/scripts/build/build-travis-containers.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/por-se/por-se/master/scripts/build/build.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "description": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "In POR-SE, we combine Quasi-Optimal Partial-Order Reduction (POR), a state-of-the-art POR that handles interleaving non-determinism, with Symbolic Execution (SE) to handle data non-determinism.\nOur implementation is based on [KLEE](https://klee.github.io), a popular Symbolic Execution engine, which we extended to deal with multithreaded (pthread) programs. \n",
                "original_header": "Symbolic Partial-Order Execution for Testing Multi-Threaded Programs"
            },
            "confidence": 0.9820466413968298,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/por-se/por-se/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "  * 6 double-initialized mutexes in memcached - [Bug Report](https://github.com/memcached/memcached/pull/566)\n  * Data race in memcached - [Bug Report](https://github.com/memcached/memcached/issues/567)\n  * Data race #2 in memcached - [Bug Report](https://github.com/memcached/memcached/pull/573)\n  * Data race #3 in memcached - [Bug Report](https://github.com/memcached/memcached/pull/575)\n \n",
                "original_header": "Bugs Found"
            },
            "confidence": 0.9823579249130396,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/por-se/por-se/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "We recommend building this tool using our [workspace](https://www.github.com/por-se/workspace/). \nAlternatively, you can use the [CAV 2020 artifact](https://doi.org/10.5281/zenodo.5771251).\n \n",
                "original_header": "Building Instructions"
            },
            "confidence": 0.9615265833970907,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/por-se/por-se/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Symbolic Partial-Order Execution for Testing Multi-Threaded Programs"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/por-se/por-se/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2005.06688"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/por-se/por-se/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2005.06688](https://arxiv.org/abs/2005.06688) [cs], May 2020.\n\n## Artifacts\n\n[1] Daniel Schemmel, Julian B\u00fcning, C\u00e9sar Rodr\u00edguez, David Laprell and Klaus Wehrle. *Artifact for the CAV 2020 Paper: Symbolic Partial-Order Execution for Testing Multi-Threaded Programs*. [10.5281/zenodo.5771251](https://doi.org/10.5281/zenodo.5771251)"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/por-se/por-se/master/README.md"
        }
    ]
}