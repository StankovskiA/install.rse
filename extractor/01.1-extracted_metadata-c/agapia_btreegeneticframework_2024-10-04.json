{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 18:58:59"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/AGAPIA/BTreeGeneticFramework",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "AGAPIA",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-03-24T19:15:10Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2023-02-25T15:02:13Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "A genetic algorithms and behavior trees framework for game and virtual environments",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This project addresses the problem of using behavior trees for automatic testing and diffculty tuning in games.\nIt is based on our paper: https://arxiv.org/abs/1909.04368\nThe main contribution of this work is to report and sketch a framework implementation that uses behavior trees and genetic algorithms at its core, which could provide the following features to the game development industry:\n  - Automatic diffculty management in games. Diffculty can also be adapted per user to offer the right level of challenge for each level.\n  - Create more diversity by generating new behaviors with less human effort.\n  - Automatically identify possible exploits that users can use in their advantage.\n  - A way to automatize more the functional testing of the gameplay component \nThe connection architecture between a game application and our framework looks like this: \n",
                "original_header": "Automatic diffculty management and testing in games using a framework based on behavior trees and genetic algorithms"
            },
            "confidence": 0.9506278777617345,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/agapia/btreegeneticframework/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "BTreeGeneticFramework",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "AGAPIA/BTreeGeneticFramework",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/AGAPIA/BTreeGeneticFramework/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/AGAPIA/BTreeGeneticFramework/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 1,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/agapia/btreegeneticframework/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "C#",
                "name": "C#",
                "type": "Programming_language",
                "size": 870497
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "ASP.NET",
                "name": "ASP.NET",
                "type": "Programming_language",
                "size": 363450
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "ShaderLab",
                "name": "ShaderLab",
                "type": "Programming_language",
                "size": 294812
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "GLSL",
                "name": "GLSL",
                "type": "Programming_language",
                "size": 65322
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HLSL",
                "name": "HLSL",
                "type": "Programming_language",
                "size": 10688
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/agapia/btreegeneticframework/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "license": [
        {
            "result": {
                "value": "The MIT License (MIT)\n\nCopyright (c) 2007 James Newton-King\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/agapia/btreegeneticframework/master/Packages/Newtonsoft.Json.13.0.1/LICENSE.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Automatic diffculty management and testing in games using a framework based on behavior trees and genetic algorithms"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/agapia/btreegeneticframework/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://user-images.githubusercontent.com/26081910/221363534-baa25f64-2a52-4a26-8586-9d4cc1c81de0.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/agapia/btreegeneticframework/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1909.04368\nThe main contribution of this work is to report and sketch a framework implementation that uses behavior trees and genetic algorithms at its core, which could provide the following features to the game development industry:\n  - Automatic diffculty management in games. Diffculty can also be adapted per user to offer the right level of challenge for each level.\n  - Create more diversity by generating new behaviors with less human effort.\n  - Automatically identify possible exploits that users can use in their advantage.\n  - A way to automatize more the functional testing of the gameplay component\n\nThe mentioned features were evaluated using a 3D game environment used for prototyping and quick results evaluation created by us and made open source for the community.\n\nThe connection architecture between a game application and our framework looks like this:\n\n![image](https://user-images.githubusercontent.com/26081910/221363534-baa25f64-2a52-4a26-8586-9d4cc1c81de0.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/agapia/btreegeneticframework/master/README.md"
        }
    ]
}