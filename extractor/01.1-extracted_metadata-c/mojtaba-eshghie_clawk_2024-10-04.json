{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 16:22:39"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/mojtaba-eshghie/HighGuard",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "mojtaba-eshghie",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-10-24T19:33:45Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-19T08:01:48Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2022 Mojtaba Eshghie\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "The runtime monitoring tool for smart contracts business logic.",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Smart contracts embody complex business processes that can be difficult to analyze statically. Therefore, we present HighGuard, a runtime monitoring tool that leverages business process specifications written in DCR graphs to provide runtime verification of smart contract execution. We demonstrate how HighGuard can detect and flag deviations from specified behaviors in smart contracts deployed in the Ethereum network without code instrumentation and any additional gas costs.\n \n",
                "original_header": "HighGuard: Monitoring Smart Contracts Business Logic"
            },
            "confidence": 0.903437416602966,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- Fully automated model-based monitoring/testing of smart contracts.\n- Supports DCR graphs enhanced with data and time.\n- Supports multi- and cross-chain smart contract monitoring\n- Platform agnostic as the models are built based on high-level business logic specifications.\n \n",
                "original_header": "Main Features"
            },
            "confidence": 0.9852117163947332,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This part is deprecated, and is not actively maintained. You can look [here](https://github.com/mojtaba-eshghie/HighGuard/wiki/HighGuard-in-Client%E2%80%90Server-Mode) for the old documentation.\n \n",
                "original_header": "Using HighGuard in Client-Server Mode"
            },
            "confidence": 0.9809667943154962,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "HighGuard",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "mojtaba-eshghie/HighGuard",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/mojtaba-eshghie/HighGuard/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/mojtaba-eshghie/HighGuard/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "blockchain, dcr-graphs, dynamic-condition-response, high-level-properties, invariants, monitoring, runtime-monitoring, runtime-verification, smart-contract-invariants, smart-contracts, smart-contracts-audit, smart-contracts-security",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/mojtaba-eshghie/clawk/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 1999535
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Solidity",
                "name": "Solidity",
                "type": "Programming_language",
                "size": 1208485
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 1047271
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 2755
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "HTML",
                "name": "HTML",
                "type": "Programming_language",
                "size": 1721
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 1517
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "CSS",
                "name": "CSS",
                "type": "Programming_language",
                "size": 1271
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 1139
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/Dockerfile"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/docker-compose.yml",
                "type": "Url",
                "format": "docker_compose"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/docker-compose.yml"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/contracts_static_analysis/src/synthesized/filter.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/contracts_static_analysis/src/synthesized/run_slither.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/analyzer/perf.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/analyzer/perf.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/analyzer/analysis.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/analyzer/analysis.ipynb"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "To manually install and run HighGuard, follow these steps:\n\n1. **Clone the repository:**\n\n   ```sh\n   git clone https://github.com/mojtaba-eshghie/HighGuard.git\n   cd HighGuard\n   ```\n\n2. **Install Node.js and npm:**\n\n   Ensure you have Node.js version 16.20.2 and npm version 8.19.4 installed. You can download and install Node.js from [Node.js official website](https://nodejs.org/).\n\n   Verify the installation:\n\n   ```sh\n   node --version\n   npm --version\n   ```\n\n3. **Install project dependencies:**\n\n   ```sh\n   npm install\n   ```\n\n4. **Install Foundry and Anvil:**\n\n   Follow the instructions to install Foundry from the [Foundry Book](https://book.getfoundry.sh/getting-started/installation).\n\n   ```sh\n   curl -L https://foundry.paradigm.xyz | bash\n   source ~/.bashrc\n   foundryup\n   ```\n\n5. **Run the CLI commands:**\n\n   You can now run the CLI commands as needed:\n\n   ```sh\n   pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-governance.yml\n   pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-escrow.yml\n   pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-multistageauction.yml\n   pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-prizedistribution.yml\n   pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-productorder.yml\n   pkill anvil; clear; node CI/run.js -t cross-chain -e unified\n   pkill anvil; clear; node CI/run.js -t cross-chain -e unified -l \"tests/Bridge.exploit1.js\"\n   pkill anvil; clear; node CI/run.js -t cross-chain -e unified -l \"tests/Bridge.exploit2.js\"\n   ```\n",
                "type": "Text_excerpt",
                "original_header": "Manual Installation",
                "parent_header": [
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "<p align=\"center\">\n  <img src=\"https://github.com/mojtaba-eshghie/Clawk/assets/37236297/4ea40602-3791-478b-b121-28f4cd9555a5\" width=\"200\" alt=\"HighGuard Logo\">\n</p> \n",
                "original_header": "HighGuard: Monitoring Smart Contracts Business Logic"
            },
            "confidence": 0.997656355175358,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "To build and run HighGuard using Docker, follow these steps:\n\n1. **Clone the repository:**\n\n   ```sh\n   git clone https://github.com/mojtaba-eshghie/HighGuard.git\n   cd HighGuard\n   ```\n\n2. **Build the Docker image:**\n\n   ```sh\n   docker build -t HighGuard-cli-docker .\n   ```\n\n3. **Run the Docker container with specific commands:**\n\n   Replace the command as needed:\n\n   ```sh\n   docker run --rm -v $(pwd):/usr/src/app HighGuard-cli-docker bash -c \"pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-governance.yml\"\n   ```\n\n   Example commands:\n\n   ```sh\n   docker run --rm -v $(pwd):/usr/src/app highguard-cli-docker bash -c \"pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-escrow.yml\"\n   docker run --rm -v $(pwd):/usr/src/app highguard-cli-docker bash -c \"pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-multistageauction.yml\"\n   docker run --rm -v $(pwd):/usr/src/app highguard-cli-docker bash -c \"pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-prizedistribution.yml\"\n   docker run --rm -v $(pwd):/usr/src/app highguard-cli-docker bash -c \"pkill anvil; node CI/run.js -t synthesized -e separate -v -c micro-configs/config-synthesized-productorder.yml\"\n   docker run --rm -v $(pwd):/usr/src/app highguard-cli-docker bash -c \"pkill anvil; clear; node CI/run.js -t cross-chain -e unified\"\n   docker run --rm -v $(pwd):/usr/src/app highguard-cli-docker bash -c \"pkill anvil; clear; node CI/run.js -t cross-chain -e unified -l \\\"tests/Bridge.exploit1.js\\\"\"\n   docker run --rm -v $(pwd):/usr/src/app highguard-cli-docker bash -c \"pkill anvil; clear; node CI/run.js -t cross-chain -e unified -l \\\"tests/Bridge.exploit2.js\\\"\"\n   ```\n\n   Export the `results` directory from the container to your current directory (outside the container) using the following command:\n\n   ```sh\n   docker run --rm -v $(pwd)/results:/results highguard-cli-docker bash -c \"cp -r /usr/src/app/results/* /results\"\n   ```\n\n\n\n",
                "type": "Text_excerpt",
                "original_header": "Running via Docker",
                "parent_header": [
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "For an extended documentation on how to use and extend HighGuard, refer to [HighGuard wiki](https://github.com/mojtaba-eshghie/HighGuard/wiki)\n\n",
                "type": "Text_excerpt",
                "original_header": "Extended Documentation"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://github.com/mojtaba-eshghie/HighGuard/wiki",
                "format": "wiki"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "```\n@misc{HighGuard,\n  author       = {Mojtaba Eshghie and Wolfgang Ahrendt and\n                  Cyrille Artho and Thomas Troels Hildebrandt and\n                  Gerardo Schneider},\n  title        = {HighGuard: Monitoring Business Processes in\n                  Smart Contracts},\n  year         = {2023},\n  month        = {May},\n  url          = {https://arxiv.org/abs/2305.08254},\n  doi          = {10.48550/arXiv.2305.08254},\n  abstract     = {Smart contracts embody complex business processes that can be difficult to analyze statically.\n                  In this paper, we present HighGuard, a runtime monitoring tool that leverages business process\n                  specifications written in DCR graphs to provide runtime verification of smart contract execution.\n                  We demonstrate how HighGuard can detect and flag deviations from specified behaviors in smart\n                  contracts deployed in the Ethereum network without code instrumentation or additional gas costs.},\n  note         = {arXiv:2305.08254v1 [cs.CR]},\n  keywords     = {dcr-graphs, dynamic-condition-response,\n                  runtime-monitoring, runtime-verification,\n                  smart-contract-specifications,\n                  smart-contracts-security}\n}\n\n```\n",
                "type": "Text_excerpt",
                "original_header": "Cite HighGuard"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        },
        {
            "result": {
                "value": "@misc{HighGuard,\n    keywords = {dcr-graphs, dynamic-condition-response,\nruntime-monitoring, runtime-verification,\nsmart-contract-specifications,\nsmart-contracts-security},\n    note = {arXiv:2305.08254v1 [cs.CR]},\n    abstract = {Smart contracts embody complex business processes that can be difficult to analyze statically.\nIn this paper, we present HighGuard, a runtime monitoring tool that leverages business process\nspecifications written in DCR graphs to provide runtime verification of smart contract execution.\nWe demonstrate how HighGuard can detect and flag deviations from specified behaviors in smart\ncontracts deployed in the Ethereum network without code instrumentation or additional gas costs.},\n    doi = {10.48550/arXiv.2305.08254},\n    url = {https://arxiv.org/abs/2305.08254},\n    month = {May},\n    year = {2023},\n    title = {HighGuard: Monitoring Business Processes in\nSmart Contracts},\n    author = {Mojtaba Eshghie and Wolfgang Ahrendt and\nCyrille Artho and Thomas Troels Hildebrandt and\nGerardo Schneider},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "10.48550/arXiv.2305.08254",
                "title": "HighGuard: Monitoring Business Processes in\nSmart Contracts",
                "author": "Mojtaba Eshghie and Wolfgang Ahrendt and\nCyrille Artho and Thomas Troels Hildebrandt and\nGerardo Schneider",
                "url": "https://arxiv.org/abs/2305.08254"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": ""
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/mojtaba-eshghie/Clawk/assets/37236297/4ea40602-3791-478b-b121-28f4cd9555a5"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2305.08254v1 [cs.CR]"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2305.08254},\n  doi          = {10.48550/arXiv.2305.08254},\n  abstract     = {Smart contracts embody complex business processes that can be difficult to analyze statically.\n                  In this paper, we present HighGuard, a runtime monitoring tool that leverages business process\n                  specifications written in DCR graphs to provide runtime verification of smart contract execution.\n                  We demonstrate how HighGuard can detect and flag deviations from specified behaviors in smart\n                  contracts deployed in the Ethereum network without code instrumentation or additional gas costs.},\n  note         = {arXiv:2305.08254v1 [cs.CR]},\n  keywords     = {dcr-graphs, dynamic-condition-response,\n                  runtime-monitoring, runtime-verification,\n                  smart-contract-specifications,\n                  smart-contracts-security}\n}\n\n```\n\n## Using HighGuard in Client-Server Mode\n\nThis part is deprecated, and is not actively maintained. You can look [here](https://github.com/mojtaba-eshghie/HighGuard/wiki/HighGuard-in-Client%E2%80%90Server-Mode"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/mojtaba-eshghie/clawk/main/README.md"
        }
    ]
}