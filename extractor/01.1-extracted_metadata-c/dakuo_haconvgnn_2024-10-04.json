{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 19:42:47"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/dakuo/HAConvGNN",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "dakuo",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-09-08T01:48:51Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-05-27T12:34:56Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2020 liubest\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/LICENSE"
        }
    ],
    "name": [
        {
            "result": {
                "value": "HAConvGNN",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "dakuo/HAConvGNN",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/dakuo/HAConvGNN/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/dakuo/HAConvGNN/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/dakuo/haconvgnn/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 59611
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 93
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/run.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "This repository contains the public release code for our new accepted paper: HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks\n\nThe related package requirement is in the requirement.txt file.\n\ncom.test file is my ground true output file.\n\nYou'd better use Cuda to run this project.\n\nBecause the dataset file and trained model file is very large, you can download it in the following website.\n\nThe reproducibility package has three parts:\n1. the code found in this repository\n2. the fully processed data (as a pkl file) can be downloaded [HERE](https://ibm.biz/Bdfpk6)\n3. the model file can be downloaded [HERE](https://ibm.biz/BdfpkU)(If you want to load this model with CPU, you should add ```map_location=torch.device('cpu')``` when loading the model file)\n\nThis code uses Pytorch v1.5.0\n",
                "type": "Text_excerpt",
                "original_header": "HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        },
        {
            "result": {
                "value": "Inspired by [Wang et al. 2021](https://dl.acm.org/doi/abs/10.1145/3411763.3451617), we decided to utilize the top-voted and well-documented Kaggle notebooks to construct the notebookCDGdataset \n\nWe collected the top 10% highly-voted notebooks from the top 20 popular competitions on Kaggle (e.g. Titanic). We checked the data policy of each of the 20 competitions, none of them has copyright issues. We also contacted the Kaggle administrators to make sure our data collection complies with the platform\u2019s policy.  \n\nIn total, we collected 3,944 notebooks as raw data. After data preprocessing, the final dataset contains 2,476 notebooks out of the 3,944 notebooks from the raw data. It has 28,625 code\u2013documentation pairs. The overall code-to-markdown ratio is 2.2195\n\n![data](https://user-images.githubusercontent.com/3362714/132431560-7f68606f-d0a1-4d9b-b46e-8537fd65c123.png)\n",
                "type": "Text_excerpt",
                "original_header": "notebookCDG Dataset",
                "parent_header": [
                    "HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        },
        {
            "result": {
                "value": "![avatar](/img/model.png)\n",
                "type": "Text_excerpt",
                "original_header": "Model",
                "parent_header": [
                    "HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        },
        {
            "result": {
                "value": "| Models                       | ROUGE-1 |       |       | ROUGE-2 |      |      | ROUGE-L |       |       |\n|------------------------------|---------|-------|-------|---------|------|------|---------|-------|-------|\n|                              | P       | R     | F1    | P       | R    | F1   | P       | R     | F1    |\n| Baselines   |\n| code2seq                     | 11.45   | 8.46  | 8.23  | 1.67    | 1.11 | 1.11 | 13.13   | 10.28 | 10.24 |\n| graph2seq                    | 13.21   | 9.87  | 9.51  | 2.86    | 1.99 | 2.03 | 14.46   | 11.4  | 11.18 |\n| Our Model & Ablation Study   |         |       |       |         |      |      |         |       |       |\n| HAConvGNN(Our Model)         | 22.87   | 16.92 | 16.58 | 6.72    | 4.86 | 4.97 | 24.03   | 18.6  | 18.54 |\n| HAConvGNN   <br> withlow-level attention  <br> without high-level attention <br> with uniform attention      | 20.66   | 15.65 | 14.91 | 4.74    | 3.92 | 3.8  | 21.84   | 17.27 | 16.81 |\n| HAConvGNN <br> with low-level attention  <br>  without high-level attention <br> without uniform attention  | 19.57   | 14.59 | 14.23 | 4.87    | 3.56 | 3.63 | 20.83   | 16.24 | 16.12 |\n| HAConvGNN <br> without low-level attention <br> without high-level attention <br> with uniform attention      | 11.39   | 7.73  | 7.82  | 1.58    | 1.06 | 1.08 | 13.13   | 9.47  | 9.82  |\n",
                "type": "Text_excerpt",
                "original_header": "Result",
                "parent_header": [
                    "HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        }
    ],
    "run": [
        {
            "result": {
                "value": "In my code, I have HAConvGNN model.\n\nTo run *prediction* with the trained models from the paper, download the three parts of the reproducibility package and run predict.py. Predict.py takes the path to the model file as a positional argument and will output the prediction file to ./modelout/predictions.\n\n`python3 predict.py {path to model} --gpu 0 --data {path to data download}`\n\nFor example:\n\n`python3 predict.py ./modelout/HAConvGNN.h5 --gpu 0 --data ./final_data`\n\nAs a reference, running the prediction on one Tesla T4 GPU takes about 1 hour.\n\nTo *train* a new model run train.py with the modeltype and gpu options set.\n\n`python3 train.py --gpu 0 --data ./final_data`\n",
                "type": "Text_excerpt",
                "original_header": "Running the code and models",
                "parent_header": [
                    "HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "Our work is published at [EMNLP'21 Finding](https://arxiv.org/abs/2104.01002). You can cite: \n\n```\n@misc{liu2021haconvgnn,\n      title={HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks}, \n      author={Xuye Liu and Dakuo Wang and April Wang and Yufang Hou and Lingfei Wu},\n      year={2021},\n      eprint={2104.01002},\n      archivePrefix={arXiv},\n      primaryClass={cs.SE}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Bibliographic Citations",
                "parent_header": [
                    "HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        },
        {
            "result": {
                "value": "@misc{liu2021haconvgnn,\n    primaryclass = {cs.SE},\n    archiveprefix = {arXiv},\n    eprint = {2104.01002},\n    year = {2021},\n    author = {Xuye Liu and Dakuo Wang and April Wang and Yufang Hou and Lingfei Wu},\n    title = {HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks",
                "author": "Xuye Liu and Dakuo Wang and April Wang and Yufang Hou and Lingfei Wu"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "HAConvGNN: Hierarchical Attention Based Convolutional Graph Neural Network for Code Documentation Generation in Jupyter Notebooks"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://user-images.githubusercontent.com/3362714/132431560-7f68606f-d0a1-4d9b-b46e-8537fd65c123.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/dakuo/haconvgnn/main//img/model.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2104.01002"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/dakuo/haconvgnn/main/README.md"
        }
    ]
}