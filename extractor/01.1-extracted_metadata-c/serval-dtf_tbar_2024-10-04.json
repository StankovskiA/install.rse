{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 16:45:02"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/TruX-DTF/TBar",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "TruX-DTF",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-03-20T08:30:47Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-28T02:35:01Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Template-based Automated Program Repair",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "TBar",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "TruX-DTF/TBar",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/TruX-DTF/TBar/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/TruX-DTF/TBar/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 40,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "automated-program-repair, fix-pattern, fix-template",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 23,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/serval-dtf/tbar/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Java",
                "name": "Java",
                "type": "Programming_language",
                "size": 546894
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 2141
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serval-dtf/tbar/master/installD4J.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serval-dtf/tbar/master/checkoutD4JBugs.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serval-dtf/tbar/master/NormalFLTBarRunner.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serval-dtf/tbar/master/PerfectFLTBarRunner.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serval-dtf/tbar/master/PFL_Fixer.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/serval-dtf/tbar/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "--------------\n - [Java 1.7](https://www.oracle.com/technetwork/java/javase/downloads/java-archive-downloads-javase7-521261.html)\n - [Defects4J](https://github.com/rjust/defects4j)\n - [GZoltar](https://github.com/SerVal-DTF/TBar/tree/master/lib)\n - [SVN >= 1.8](https://subversion.apache.org/packages.html)\n - [perl >= 5.0.10](https://www.perl.org/get.html)\n",
                "type": "Text_excerpt",
                "original_header": "I. Requirement",
                "parent_header": [
                    "TBar"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/serval-dtf/tbar/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "---------------------------\n 1. Download and Install Defects4J.\n - `./installD4J.sh`\n \n 2. Check out and compile each bug.\n - `./checkoutD4JBugs.sh`\n    \n  If you fail to install defects4j, checkout or compile defects4j bugs, please reference these [introductions](https://github.com/rjust/defects4j#steps-to-set-up-defects4j).\n \n  The docker image of TBar is available: [TBar](https://cloud.docker.com/u/kuiliu/repository/docker/kuiliu/tbar).\n  \n IV. Run TBar\n ------------\n 1. Fixing Defects4J bugs with perfect fault localization configuration.\n - `./PerfectFLTBarRunner.sh <Bug_Data_Path> <Bug_ID> <defects4j_Home> <true/false>`\n    \n    Example: `./PerfectFLTBarRunner.sh D4J/projects/ Chart_8 D4J/defects4j/ false` to fix bug Chart_8 with perfect fault localization configuration.\n    \n    `./PerfectFLTBarRunner.sh D4J/projects/ Chart_8 D4J/defects4j/ true` tries to fix bug Chart_8 with all possible matching fix patterns.\n \n 2. Fixing Defects4J bugs with normal fault localization configuration.\n - `./NormalFLTBarRunner.sh <Bug_Data_Path> <Bug_ID> <defects4j_Home>`\n   \n   Example: `./NormalFLTBarRunner.sh D4J/projects/ Chart_8 D4J/defects4j/`. \n \n If it executes failed because of the paths of <Bug_Data_Path> and <defects4j_Home>, please use their absolute paths.\n \n \n V. Structure of the Directories\n -------------------------------\n ```powershell\n  |--- README.md               :  user guidance\n  |--- D4J                     :  Defects4J information\n  |--- FailedTestCases         :  Failed test cases of each Defects4J bug\n  |--- lib                     :  GZoltar jar files\n  |--- Results                 :  Generated patches\n  |------ FixPatterns          :  Bugs fixed by each fix pattern\n  |------ PerfectFL            :  Bugs fixed with perfect fault localization configuration\n  |------ NormalFL             :  Bugs fixed with normal fault localization configuration\n  |--- src                     :  source code\n  |--- SuspiciousCodePositions :  Bug positions localized with GZoltar\n  |--- target                  :  binary code\n```\n\n----\n\n__ALL__ suggestions are welcomed.\n",
                "type": "Text_excerpt",
                "original_header": "III. Prepare Defects4J Bugs",
                "parent_header": [
                    "TBar"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/serval-dtf/tbar/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "TBar"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/serval-dtf/tbar/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/serval-dtf/tbar/master/./figure/overview.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/serval-dtf/tbar/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/serval-dtf/tbar/master/./figure/algorithm.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/serval-dtf/tbar/master/README.md"
        }
    ]
}