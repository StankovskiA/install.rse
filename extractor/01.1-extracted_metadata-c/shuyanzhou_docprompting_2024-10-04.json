{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 19:40:03"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/shuyanzhou/docprompting",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "shuyanzhou",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-07-13T06:51:05Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-09-17T22:24:37Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Data and code for \"DocPrompting: Generating Code by Retrieving the Docs\" @ICLR 2023",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This is the official implementation of  \n---\nPublicly available source-code libraries are continuously growing and changing. \nThis makes it impossible for models of code to keep current with all available APIs by simply training these models \non existing code repositories. \nWe introduce DocPrompting: a natural-language-to-code generation approach that explicitly leverages documentation by\n1. retrieving the relevant documentation pieces given an NL intent, \nand\n2. generating code based on the NL intent and the retrieved documentation.  \nIn this repository we provide the *best* model in each setting described in the paper. \n",
                "original_header": "DocPrompting: Generating Code by Retrieving the Docs"
            },
            "confidence": 0.9672365414645959,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Other models require the customized implementations in our repo, please read through the corresponding sections to use them. These models are:\n1. sparse retriever based on BM25 for `tldr`\n2. dense retriever based on CodeT5 for `CoNaLa`\n3. FiD T5 generator for `tldr`\n4. FiD CodeT5 generator for `CoNaLa` \n",
                "original_header": "Other models"
            },
            "confidence": 0.9566187940468388,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "The code is based on [SimCSE](https://github.com/princeton-nlp/SimCSE) \n",
                "original_header": "Dense retrieval"
            },
            "confidence": 0.9773216624431234,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "docprompting",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "shuyanzhou/docprompting",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/shuyanzhou/docprompting/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/shuyanzhou/docprompting/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 230,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "code-generation, natural-language-processing, nl-to-code, reading-comprehension",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 17,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/shuyanzhou/docprompting/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 259229
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "@article{zhou2022doccoder,\n  title={DocCoder: Generating Code by Retrieving and Reading Docs},\n  author={Zhou, Shuyan and Alon, Uri and Xu, Frank F and JIang, Zhengbao and Neubig, Graham},\n  journal={arXiv preprint arXiv:2207.05987},\n  year={2022}\n}\n",
                "type": "File_dump",
                "format": "cff"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/CITATION.cff"
        },
        {
            "result": {
                "value": "```\n@inproceedings{zhou23docprompting,\n    title = {DocPrompting: Generating Code by Retrieving the Docs},\n    author = {Shuyan Zhou and Uri Alon and Frank F. Xu and Zhiruo Wang and Zhengbao Jiang and Graham Neubig},\n    booktitle = {International Conference on Learning Representations (ICLR)},\n    address = {Kigali, Rwanda},\n    month = {May},\n    url = {https://arxiv.org/abs/2207.05987},\n    year = {2023}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "DocPrompting: Generating Code by Retrieving the Docs"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{zhou23docprompting,\n    year = {2023},\n    url = {https://arxiv.org/abs/2207.05987},\n    month = {May},\n    address = {Kigali, Rwanda},\n    booktitle = {International Conference on Learning Representations (ICLR)},\n    author = {Shuyan Zhou and Uri Alon and Frank F. Xu and Zhiruo Wang and Zhengbao Jiang and Graham Neubig},\n    title = {DocPrompting: Generating Code by Retrieving the Docs},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "DocPrompting: Generating Code by Retrieving the Docs",
                "author": "Shuyan Zhou and Uri Alon and Frank F. Xu and Zhiruo Wang and Zhengbao Jiang and Graham Neubig",
                "url": "https://arxiv.org/abs/2207.05987"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "```python\nfrom transformers import AutoTokenizer, AutoModelForCausalLM\ntokenizer = AutoTokenizer.from_pretrained(\"neulab/docprompting-tldr-gpt-neo-1.3B\")\nmodel = AutoModelForCausalLM.from_pretrained(\"neulab/docprompting-tldr-gpt-neo-1.3B\")\n\n# prompt template\nprompt = f\"\"\"{tokenizer.bos_token} Potential manual 0: makepkg - package build utility\nPotential manual 1: -c, --clean Clean up leftover work files and directories after a successful build.\nPotential manual 2: -r, --rmdeps Upon successful build, remove any dependencies installed by makepkg during dependency auto-resolution and installation when using -s\nPotential manual 3: CONTENT_OF_THE_MANUAL_3\n...\nPotential manual 10: CONTENT_OF_THE_MANUAL_10\"\"\"\nprompt += f\"{tokenizer.sep_token} clean up work directories after a successful build {tokenizer.sep_token}\"\n\ninput_ids = tokenizer(prompt, return_tensors=\"pt\").input_ids\ngen_tokens = model.generate(\n    input_ids,\n    num_beams=5,\n    max_new_tokens=150,\n    num_return_sequences=2,\n    pad_token_id=tokenizer.eos_token_id\n)\ngen_tokens = gen_tokens.reshape(1, -1, gen_tokens.shape[-1])[0][0]\n# to text and clean\ngen_code = tokenizer.decode(gen_tokens)\ngen_code = gen_code.split(tokenizer.sep_token)[2].strip().split(tokenizer.eos_token)[0].strip()\nprint(gen_code)\n\n>>> makepkg --clean {{path/to/directory}}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Example usage",
                "parent_header": [
                    "DocPrompting: Generating Code by Retrieving the Docs",
                    "Huggingface \ud83e\udd17 Models"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "value": "An example script on tldr by using the retrieved docs is [here](./scripts/tldr_gpt_neo.py)\n",
                "type": "Text_excerpt",
                "original_header": "Example script",
                "parent_header": [
                    "DocPrompting: Generating Code by Retrieving the Docs",
                    "Huggingface \ud83e\udd17 Models"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "Download data for `CoNaLa` and `tldr` from [link](https://drive.google.com/file/d/1CzNlo8-e4XqrgAME5zHEWEKIQMPga0xl/view?usp=sharing)\n```bash\n# unzip\nunzip docprompting_data.zip\n# move to the data folder\nmv docprompting_data/* data\n```\n\nDownload trained generator weights from [link](https://drive.google.com/file/d/1NmPMxY1EOWkjM7S8VSKa13DKJmEZ3TqV/view?usp=sharing)\n```bash\nunzip docprompting_generator_models.zip\n# move to the model folder\nmv docprompting_generator_models/* models/generator\n\n```",
                "type": "Text_excerpt",
                "original_header": "Preparation",
                "parent_header": [
                    "DocPrompting: Generating Code by Retrieving the Docs"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "We make the following models available on Huggingface: \n",
                "original_header": "Huggingface \ud83e\udd17 Models"
            },
            "confidence": 0.9799858662968152,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": " To evaluate `pass@k`, we need more generations, we use nucleus sampling (instead of beam search) for the generation. \n ```bash\n ds='conala'\n t=1.0 # set this from 0.2, 0.4, 0.6, .. 1.0. Use the dev set to find the best temperature\n python generator/fid/test_reader_simple.py \\\n    --model_path models/generator/${ds}.fid.codet5.top10/checkpoint/best_dev \\\n    --tokenizer_name models/generator/codet5-base \\\n    --eval_data data/${ds}/fid.cmd_test.codet5.t10.ns200.json \\\n    --per_gpu_batch_size 8 \\\n    --n_context 10 \\\n    --name ${ds}.fid.codet5.top10.ns200 \\\n    --checkpoint_dir models/generator  \\\n    --result_tag test_same \\\n    --num_beams 1 \\\n    --temperature $t \\\n    --top_p 0.95 \\\n    --num_return_sequences 200 \\\n    --main_port 81692\n ```\n Then run this [script](./dataset_helper/conala/execution_eval.py)\n BASH3* \n",
                "original_header": "FID generation"
            },
            "confidence": 0.9998546685196963,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "* [tldr](https://github.com/tldr-pages/tldr) Github repo. Thanks for all the contributors!\n* [CoNaLa](https://conala-corpus.github.io)\n \n",
                "original_header": "Resources"
            },
            "confidence": 0.9420080402208432,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "1. Run inference with our trained model on CoNaLa (Python)\n```bash\npython retriever/simcse/run_inference.py \\\n  --model_name \"neulab/docprompting-codet5-python-doc-retriever\" \\\n  --source_file data/conala/conala_nl.txt \\\n  --target_file data/conala/python_manual_firstpara.tok.txt \\\n  --source_embed_save_file data/conala/.tmp/src_embedding \\\n  --target_embed_save_file data/conala/.tmp/tgt_embedding \\\n  --sim_func cls_distance.cosine \\\n  --num_layers 12 \\\n  --save_file data/conala/retrieval_results.json\n```\nWe observed that model whether or not to normalize the embeddings can affect the retrieval results. \nWe therefore selected this hyper-parameter (`--normalize_embed`) on the validation set. \n2. Train your own retriever\n```bash\npython retriever/simcse/run_train.py \\\n    --num_layers 12 \\\n    --model_name_or_path Salesforce/codet5-base \\\n    --sim_func cls_distance.cosine \\\n    --temp 0.05  \\\n    --train_file data/conala/train_retriever_sup_unsup.json \\\n    --eval_file data/conala/dev_retriever.json \\\n    --output_dir models/retriever/docprompting_codet5_python_doc_retriever \\\n    --eval_src_file data/conala/conala_nl.txt \\\n    --eval_tgt_file data/conala/python_manual_firstpara.tok.txt \\\n    --eval_root_folder data/conala \\\n    --eval_oracle_file data/conala/cmd_dev.oracle_man.full.json \\\n    --run_name docprompting_codet5_python_doc_retriever \\\n    --num_train_epochs 10 \\\n    --per_device_train_batch_size 512 \\\n    --learning_rate 1e-5 \\\n    --max_seq_length 32 \\\n    --evaluation_strategy steps \\\n    --metric_for_best_model recall@10 \\\n    --load_best_model_at_end \\\n    --eval_steps 125 \\\n    --overwrite_output_dir \\\n    --do_train \\\n    --eval_form retrieval\n    \"$@\"\n```\n* `train_retriever_sup_unsup.json` contains the supervised (`CoNaLa` training and mined) and unsupervised data (duplication of sentences in a doc) for training the retriever.\n* Be accurate on the saved model name. If using codet5, make sure `codet5` is in the name.\n \n",
                "original_header": "Dense retrieval"
            },
            "confidence": 0.9057719417140451,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "2. Train your own generator\n```bash\nds='conala'\npython generator/fid/train_reader.py \\\n    --seed 1996 \\\n    --train_data data/${ds}/fid.cmd_train.codet5.t10.json \\\n    --eval_data data/${ds}/fid.cmd_dev.codet5.t10.json \\\n    --model_name models/generator/codet5-base \\ # initialize with the codet5-base model \\\n    --per_gpu_batch_size 4 \\\n    --n_context 10 \\\n    --name ${ds}.fid.codet5.top10 \\\n    --checkpoint_dir models/generator/ \\\n    --eval_freq 500 \\\n    --accumulation_steps 2 \\\n    --main_port 30843 \\\n    --total_steps 20000 \\\n    --warmup_steps 2000\n    \nds='tldr'\npython generator/fid/train_reader.py \\\n    --dataset tldr \\\n    --train_data data/${ds}/fid.cmd_train.codet5.t10.json \\\n    --eval_data data/${ds}/fid.cmd_model_select.codet5.t10.json \\\n    --model_name models/generator/codet5-base \\\n    --per_gpu_batch_size 4 \\\n    --n_context 10 \\\n    --eval_metric token_f1 \\\n    --name ${ds}.fid.codet5.top10 \\\n    --checkpoint_dir models/generator/ \\\n    --eval_freq 1000 \\\n    --accumulation_steps 2 \\\n    --main_port 32420 \\\n    --total_steps 20000 \\\n    --warmup_steps 2000\n```\n* Examples in `fid.cmd_model_select.codet5.t10.json` are the same as `fid.cmd_dev.codet5.t10.json`.\nThe difference is that it use the oracle first stage retrieval results (oracle bash name).\n--- \n",
                "original_header": "FID generation"
            },
            "confidence": 0.9031013902103563,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "DocPrompting: Generating Code by Retrieving the Docs"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/media/overview.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/2207.05987.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2207.05987"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/shuyanzhou/docprompting/main/README.md"
        }
    ]
}