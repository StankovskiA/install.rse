{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 20:35:45"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/Attn-to-FC/Attn-to-FC",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "Attn-to-FC",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-08-23T15:31:09Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-03-14T15:54:40Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "name": [
        {
            "result": {
                "value": "Attn-to-FC",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "Attn-to-FC/Attn-to-FC",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/Attn-to-FC/Attn-to-FC/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/Attn-to-FC/Attn-to-FC/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 18,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 10,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/attn-to-fc/attn-to-fc/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 200076
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 730
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/Transformer/runmodel.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "Example output from the ast-attendgru-fc model compared to ast-attendgru model and reference summaries written by humans:\n\nPROTOTYPE OUTPUT WITH FILE CONTEXT - PROTOTYPE OUTPUT WITHOUT FILE CONTEXT - HUMAN REFERENCE\n\nsets the intermediate value for this flight - sets the intermediate value for this <UNK> - sets the intermediate value for this flight\nreturns a string representation of this exception - returns a string representation of this object - returns a string representation of this exception\n",
                "type": "Text_excerpt",
                "original_header": "Example Output",
                "parent_header": [
                    "Attn-to-FC"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "value": "We use the dataset of 2.1m Java methods and method comments, already cleaned and separated into training/val/test sets by LeClair et al.\n\n(Their raw data was downloaded from: http://leclair.tech/data/funcom/)  \n\nExtract the dataset to a directory (/nfs/projects/ is the assumed default) so that you have a directory structure:  \n/nfs/projects/attn-to-fc/data/standard/dataset.pkl.\n\nThe data for the code2seq and graph2seq models are organized in a different pickle file and can be obtained from the following link </br>\n\nhttps://javagraphastdataset.s3.us-east-2.amazonaws.com/javagraphastdata.zip\n\nExtract the dataset in the /nfs/projects/attn-to-fc/data directory.\nNotice that this directory also contains an outdir child directory. \nThis directory contains the model files, configuration files and prediction outputs of the models listed in table 1 of the paper.\n\nTherefore, the default directory structure should be: </br>\n```/nfs/projects/attn-to-fc/data/standard``` which contains the dataset obtained from LeClair et al. </br>\n```/nfs/projects/attn-to-fc/data/graphast_data``` which contains the dataset compatible for code2seq and graph2seq </br>\n```/nfs/projects/attn-to-fc/data/outdir``` which contains the model files, configuration files, prediction files and have the following structure:</br>\n```\n/nfs/projects/attn-to-fc/data/outdir/models/  \n/nfs/projects/attn-to-fc/data/outdir/histories/  \n/nfs/projects/attn-to-fc/data/outdir/predictions/  \n/nfs/projects/attn-to-fc/data/outdir/viz/\n```\n\nIf you choose to have a different directory structure, please make the necessary changes in myutils.py (line 14), predict.py (line 202 and 203), train.py (line 82 and 83), my_get_activations.py (line 37, 65, 66, 101, 102, 103, 144, 145, 146, 184, 185, 227, 228, 229, 245, 246, 280, 281, 338, 363, 364, 365, 440, 446), bleu.py (line 55 and 56), rougemetric.py (line 110 and 111), astpathmaker.py (line 20)\n\n\n",
                "type": "Text_excerpt",
                "original_header": "Step 1: Obtain Dataset",
                "parent_header": [
                    "Attn-to-FC",
                    "USAGE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "value": "```console\nyou@server:~/dev/attn-to-fc$ time python3 train.py --model-type=ast-attendgru-fc --gpu=0\n```\n\nModel types are defined in model.py. \nThe attendgru and ast-attendgru model used was borrowed from the work of LeClair et al. We thank them for making their code open source and their repository accessible to everyone.<br />\nAlexander LeClair, Siyuan Jiang, and Collin McMillan. 2019. A neural model for generating natural language summaries of program subroutines. In Proceedings of the 41st International Conference on Software Engineering. IEEE Press, 795\u2013806.<br />\nhttps://arxiv.org/abs/1902.01954\n\nTheir github repository link:\nhttps://github.com/mcmillco/funcom\n\nThe graph2seq model was our faithful reimplementation of Xu et. al. <br />\nKun Xu, Lingfei Wu, Zhiguo Wang, Yansong Feng, Michael Witbrock, and Vadim Sheinin. 2018.  Graph2seq: Graph to sequence learning with attention-based neural networks. Conference on Empirical Methods in Natural Language Processing (2018).<br />\nhttps://arxiv.org/abs/1804.00823\n\nThe code2seq model was our faithful reimplementation of Alon et al.<br />\nUri Alon, Shaked Brody, Omer Levy, and Eran Yahav. 2019. Code2seq: Generating sequences from structured representations of code. International Conference on Learning Representations (2019).<br />\nhttps://arxiv.org/abs/1808.01400\n\nFor all these models, we added file context information to implement our own custom models. These models can be found in models/attendgru_fc.py, models/atfilecont.py, models/graph2seq_fc.py and models/code2seq_fc.py\n\nThe 10 digit integer at the end of the file is the epoch time at which training started, and is used to connect model, prediction, configuration and history data.  For example, training ast-attendgru-fc (model found in models/atfilecont.py) to epoch 8 would produce:\n\n/nfs/projects/attn-to-fc/data/outdir/histories/ast-attendgru-fc_conf_1565109688.pkl  \n/nfs/projects/attn-to-fc/data/outdir/histories/ast-attendgru-fc_hist_1565109688.pkl  \n/nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E01_1565109688.h5  \n/nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E02_1565109688.h5  \n/nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E03_1565109688.h5  \n/nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E04_1565109688.h5  \n/nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E05_1565109688.h5  \n/nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E06_1565109688.h5  \n/nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E07_1565109688.h5  \n/nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E08_1565109688.h5 \n\n\nHere are the list of models and their corresponding trained model filenames that were used to obtain the bleu scores as listed in table 1 of the paper:\n\n| Model Name      | Model Path |\n| ----------- | ----------- |\n| attendgru      | /nfs/projects/attn-to-fc/data/outdir/models/attendgru_E04_1565797619.h5       |\n| ast-attendgru   | /nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru_E04_1554133793.h5        |\n| graph2seq      | /nfs/projects/attn-to-fc/data/outdir/models/graph2seq_E04_1554124260.h5 |\n| code2seq      | /nfs/projects/attn-to-fc/data/outdir/models/code2seq_E04_1565726816.h5       |\n| attendgru+FC   | /nfs/projects/attn-to-fc/data/outdir/models/attendgru-fc_E05_1564348142.h5        |\n| astattendgru+FC      | /nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E07_1565109688.h5 |\n| graph2seq+FC      | /nfs/projects/attn-to-fc/data/outdir/models/graph2seq-fc_E04_1563279697.h5       |\n| code2seq+FC   | /nfs/projects/attn-to-fc/data/outdir/models/code2seq-fc_E04_1565726584.h5        |\n| ast-attendgru-ablation      | /nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru_E08_1566229103.h5       |\n| ast-attendgru+FC-ablation   | /nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E06_1566229294.h5        |\n\n```console\nyou@server:~/dev/attn-to-fc$ time python3 train.py --model-type=ast-attendgru-fc --gpu=0 --help\n```\nThis will output the list of input arguments that can be passed via the command line to train the model.\n",
                "type": "Text_excerpt",
                "original_header": "Step 2: Train a Model",
                "parent_header": [
                    "Attn-to-FC",
                    "USAGE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "value": "```console\nyou@server:~/dev/attn-to-fc$ time python3 predict.py /nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E07_1565109688.h5 --gpu=0\n```\n\nThe only necessary input to predict.py on the command line is the model file.  Output predictions will be written to a file e.g.:\n\n/nfs/projects/attn-to-fc/data/outdir/predictions/predict-ast-attendgru-fc_E07_1565109688.txt\n\nNote that by default all the models use CuDNNGRU instead of standard GRU, so using a GPU is necessary during prediction.<br />\nIt is important to note that the data argument needs to be the same between running train.py and test.py.<br />\nThe ICSE'20 submission versions (prediction files) are all included in the predictions directory in this repository.\n\nNote that predictions/predict-ast-attendgru_E08_1566229103.txt and predictions/predict-ast-attendgru-fc_E06_1566229294.txt were the predictions obtained from the ablation study.\n",
                "type": "Text_excerpt",
                "original_header": "Step 3: Inference / Prediction",
                "parent_header": [
                    "Attn-to-FC",
                    "USAGE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "value": "```console\nyou@server:~/dev/attn-to-fc$ time python3 my_get_activations.py /nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru-fc_E07_1565109688.h5 /nfs/projects/attn-to-fc/data/outdir/models/ast-attendgru_E04_1554124260.h5 --fid=26052502\n```\n\nThis will output all the activation map of the attention matrix in ast-attendgru-fc as well as the ast-attendgru matrix. This is designed to allow comparison between models that only differ with the addition of file context information.<br />\nIt takes 2 models files as input, the first is the model with file context information while the second is the model without file context information. It also takes the function id (fid) as input.<br />\nCurrently this can be run for only 1 fid at a time.\n\n```console\nyou@server:~/dev/attn-to-fc$ time python3 my_get_activations.py --help\n```\n\nThis will output the list of input arguments that can be passed via the command line and how they can be used to generate the desired activation map.\n",
                "type": "Text_excerpt",
                "original_header": "Step 4: Vizualization",
                "parent_header": [
                    "Attn-to-FC",
                    "USAGE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "value": "```console\nyou@server:~/dev/attn-to-fc$ time python3 bleu.py /nfs/projects/attn-to-fc/data/outdir/predictions/predict-ast-attendgru-fc_E07_1565109688.txt\n```\n\nThis will output a BLEU score for the prediction file.\n\nSimilarly,\n```console\nyou@server:~/dev/attn-to-fc$ time python3 rougemetric.py /nfs/projects/attn-to-fc/data/outdir/predictions/predict-ast-attendgru-fc_E07_1565109688.txt\n```\n\nThis will output a rouge score for the prediction file.\n",
                "type": "Text_excerpt",
                "original_header": "Step 5: Calculate Metrics",
                "parent_header": [
                    "Attn-to-FC",
                    "USAGE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "value": "To learn more about the author, visit https://sakibhaque.github.io/\nIf you have any questions or concerns, please do not hesitate to reach out the authors via the following email: attn2fc.msr2020@gmail.com, shaque@nd.edu\n",
                "type": "Text_excerpt",
                "original_header": "Author information",
                "parent_header": [
                    "Attn-to-FC",
                    "USAGE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "We assume Ubuntu 18.04, Python 3.6.7, Keras 2.2.4, TensorFlow 1.14.\nCheck out the readme file in the Transformer directory on the requirements to run the transformer model.\n",
                "type": "Text_excerpt",
                "original_header": "Step 0: Dependencies",
                "parent_header": [
                    "Attn-to-FC",
                    "USAGE"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Attn-to-FC"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1804.00823\n\nThe code2seq model was our faithful reimplementation of Alon et al.<br />\nUri Alon, Shaked Brody, Omer Levy, and Eran Yahav. 2019. Code2seq: Generating sequences from structured representations of code. International Conference on Learning Representations (2019"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2004.04881\n\n### Example Output\nExample output from the ast-attendgru-fc model compared to ast-attendgru model and reference summaries written by humans:\n\nPROTOTYPE OUTPUT WITH FILE CONTEXT - PROTOTYPE OUTPUT WITHOUT FILE CONTEXT - HUMAN REFERENCE\n\nsets the intermediate value for this flight - sets the intermediate value for this <UNK> - sets the intermediate value for this flight\nreturns a string representation of this exception - returns a string representation of this object - returns a string representation of this exception\n\n## USAGE\n\n### Step 0: Dependencies\n\nWe assume Ubuntu 18.04, Python 3.6.7, Keras 2.2.4, TensorFlow 1.14.\nCheck out the readme file in the Transformer directory on the requirements to run the transformer model.\n\n### Step 1: Obtain Dataset\n\nWe use the dataset of 2.1m Java methods and method comments, already cleaned and separated into training/val/test sets by LeClair et al.\n\n(Their raw data was downloaded from: http://leclair.tech/data/funcom/"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1808.01400\n\nFor all these models, we added file context information to implement our own custom models. These models can be found in models/attendgru_fc.py, models/atfilecont.py, models/graph2seq_fc.py and models/code2seq_fc.py\n\nThe 10 digit integer at the end of the file is the epoch time at which training started, and is used to connect model, prediction, configuration and history data.  For example, training ast-attendgru-fc (model found in models/atfilecont.py"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1902.01954\n\nTheir github repository link:\nhttps://github.com/mcmillco/funcom\n\nThe graph2seq model was our faithful reimplementation of Xu et. al. <br />\nKun Xu, Lingfei Wu, Zhiguo Wang, Yansong Feng, Michael Witbrock, and Vadim Sheinin. 2018.  Graph2seq: Graph to sequence learning with attention-based neural networks. Conference on Empirical Methods in Natural Language Processing (2018"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/attn-to-fc/attn-to-fc/master/README.md"
        }
    ]
}