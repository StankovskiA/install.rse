{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 20:35:59"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/khairulislam/Predict-Code-Changes",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "khairulislam",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2020-10-01T15:45:55Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-02-09T05:20:45Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/mit",
                "type": "License",
                "name": "MIT License",
                "url": "https://api.github.com/licenses/mit",
                "spdx_id": "MIT"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "MIT License\n\nCopyright (c) 2020 Khairul Islam\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Predict the merge probability of Gerrit code changes",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This is a tool to predict whether a code change request will be merged or abandoned as\nsoon as it has been uploaded and can update its predictions with each new revision. The tool is developed for Gerrit based code review systems. Its objective is to help\nthe code reviewers prioritize change requests based on the probability of getting merged.\nHence, saving their time and efforts. <b> We call this tool PredCR.  PredCR is a LightGBM\nbased machine learning classifier which can,</b> \n* Predict whether a code change request will be merged with on average 85% AUC score as soon as the\nchange request is submitted and assigned to a reviewer. Improving the state-of-the-art [[1]](#1)\n  by 18-28%.\n* Even for new authors, predict merge probability with on average 78% AUC score. Improving the state-of-the-art [[1]](#1)\n  by 21-31%.\n* Provides two adjusted approaches to update prediction for each new revision of the same change request,\n  and maintains significant results.\n  \n* Complete training within several seconds, hence feasible to use in real world projects.\n  \nWe have mined changes from the following Gerrit projects \n",
                "original_header": "Early Prediction for Merged vs Abandoned CodeChanges in Modern Code Reviews"
            },
            "confidence": 0.9640082306484576,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "* <b>Feature calculator for multiple revisions</b>: Calculates features when prediction\n  is updated for each new revision of the change request. \n",
                "original_header": "<a href=\"Source/Feature%20Calculators\">3.2 Feature Calculators</a>"
            },
            "confidence": 0.9764328982627549,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Contains the files necessary to mine the raw code changes and related data from Gerrit projects. \n",
                "original_header": "<a href=\"Source/Miners\">3.3 Miners</a>"
            },
            "confidence": 0.9406541113954584,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "Predict-Code-Changes",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "khairulislam/Predict-Code-Changes",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/khairulislam/Predict-Code-Changes/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/khairulislam/Predict-Code-Changes/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 0,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "code-review, gerrit-miner, gerrit-parser, predict-changes",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/khairulislam/predict-code-changes/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 117532
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/khairulislam/Predict-Code-Changes/releases/48083359",
                "tag": "v1.0",
                "name": "Ready code for usage with documentation",
                "author": {
                    "name": "khairulislam",
                    "type": "User"
                },
                "description": "First production ready release.\r\nContains all the codes used in the paper with documentation.\r\nComes with a Gerrit Miner and Parser.\r\nShares all necessary raw data.",
                "tarball_url": "https://api.github.com/repos/khairulislam/Predict-Code-Changes/tarball/v1.0",
                "zipball_url": "https://api.github.com/repos/khairulislam/Predict-Code-Changes/zipball/v1.0",
                "html_url": "https://github.com/khairulislam/Predict-Code-Changes/releases/tag/v1.0",
                "url": "https://api.github.com/repos/khairulislam/Predict-Code-Changes/releases/48083359",
                "release_id": 48083359,
                "date_created": "2021-08-19T01:54:05Z",
                "date_published": "2021-08-19T02:16:39Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "run": [
        {
            "result": {
                "value": "Open `Predict-Code-Change` as project in Pycharm or any other python IDE. People interested in just testing the\ntool should directly jump to [Experimentation](#exp) section. All the data need for running the experiments are\nalready uploaded. If you want to run them on your own mined dataset, complete the following two sections first.\n",
                "type": "Text_excerpt",
                "original_header": "How to run",
                "parent_header": [
                    "Early Prediction for Merged vs Abandoned CodeChanges in Modern Code Reviews"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        },
        {
            "result": {
                "value": "* Run the [`Source/Miners/Complete Mining Process.py`](Source/Miners/Complete%20mining%20process.py) file to start mining.\n* Set the project name, make sure Gerrit class has corresponding Gerrit server address for this project.\n* Check if the directories for the data to be dumbed is created.\n* Set the start and end time period, changes created and closed in that period will be collected. Make\n  sure the time format is valid. Check existing code in [`Source/Miners/Miner.py`](Source/Miners/Miner.py) for example.\n* This step is long and time-consuming. Specially, because during downloading large chunks of\ndata, Gerrit servers randomly close the connection, and you have to rerun the miner several times\ntill it is successful in mining all changes within a period.\n\n* <b> For best experience, run each steps in the miner individually. </b> When you want to run one, comment out the others.\nGerrit change response collected by [`Source/Miners/Miner.py`](Source/Miners/Miner.py) doesn't contain file contents.\n* Run the [`Source/Miners/Mine file diff.py`](Source/Miners/Mine%20file%20diff.py) after completing previous steps, to mine\nfile contents for first revision of each selected change request.\n* This miner doesn't batch download, so expect a looooong time to finish\nmining changes. Also, occasionally Gerrit will close connections or send\n  response not found messages. Rerunning the miner might fix that issue sometimes.\n  \n* With mined data project structure will look similar to this for each project\n  * Eclipse\n    * change : Batch of change requests\n    * changes: Individual change requests.\n    * diff: File diff content for first revision of each change request.\n    * profile: Profile of Gerrit authors.\n",
                "type": "Text_excerpt",
                "original_header": "<a id=\"mining\">Mining</a>",
                "parent_header": [
                    "Early Prediction for Merged vs Abandoned CodeChanges in Modern Code Reviews",
                    "How to run"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        },
        {
            "result": {
                "value": "* This step can run only after completing previous mining steps.\n* Currently, our raw data isn't added here.\n* Run [`Source/Feature Calculators/Feature calculator.py`](Source/Feature%20Calculators/Feature%20calculator.py) to\n calculate features from raw data. It sorts selected changes from `Project_selected_change_list.csv` and searches\n for their corresponding mined files to calculate feature.\n* So for each change in the selected list, the followings must be present before\n  calculating feature. An example is present in Eclipse project.\n  * Project\n    * changes\n      * Project_changeNumber_change.json\n    * diff\n      * Project_changeNumber_diff.json\n    * profile\n      * profile_accountId.json\n  ",
                "type": "Text_excerpt",
                "original_header": "<a id=\"feature_calculation\">Feature calculation</a>",
                "parent_header": [
                    "Early Prediction for Merged vs Abandoned CodeChanges in Modern Code Reviews",
                    "How to run"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        },
        {
            "result": {
                "value": "* Set config values in file [`Config.py`](Config.py). For example project, number of runs, folds,\n  feature list, data path, seed.\n  \n* Running [`Source/Experiments/Longitudinal 10 fold cross validation.py`](Source/Experiments/Longitudinal%2010%20fold%20cross%20validation.py) with run our model experiments for `project`\n  as specified in [`Config.py`](Config.py) file, `runs` times, using `folds` number of folds. It will generate\n  the following files in `Data\\project` folder :\n  * <b>project_train_result_cross.csv </b>: Average train performance for each fold.\n    *<b> project_test_result_cross.csv </b>:Average test performance for each fold.\n  * <b>project_result_cross.csv</b>: Overall average performance across folds.\n  * <b>project_feature_importance_cross.csv</b>: Average feature importance calculated from LightGBM\n    `feature_importances_` attribute.\n  \n* Similarly, running [`Source/Experiments/Longitudinal 10 fold cross validation - Fan.py`](Source/Experiments/Longitudinal%2010%20fold%20cross%20validation.py) with run Fan's [[1]](#1)\n  model experiments for parameters specified in [`Config.py`](Config.py) file.\n",
                "type": "Text_excerpt",
                "original_header": "<a id=\"exp\">Experimentation</a>",
                "parent_header": [
                    "Early Prediction for Merged vs Abandoned CodeChanges in Modern Code Reviews",
                    "How to run"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "Paper link : [IST](https://www.sciencedirect.com/science/article/abs/pii/S0950584921002032), [arxiv](https://arxiv.org/pdf/1912.03437.pdf).\n\n```bash\n@article{ISLAM2022106756,\ntitle = {Early prediction for merged vs abandoned code changes in modern code reviews},\njournal = {Information and Software Technology},\nvolume = {142},\npages = {106756},\nyear = {2022},\nissn = {0950-5849},\ndoi = {https://doi.org/10.1016/j.infsof.2021.106756},\nurl = {https://www.sciencedirect.com/science/article/pii/S0950584921002032},\nauthor = {Khairul Islam and Toufique Ahmed and Rifat Shahriyar and Anindya Iqbal and Gias Uddin}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "Early Prediction for Merged vs Abandoned CodeChanges in Modern Code Reviews"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        },
        {
            "result": {
                "value": "<a id=\"1\">[1]</a>\n[Y. Fan, X. Xia, D. Lo, S. Li, Early prediction of merged code changes to prioritizereviewing tasks,\nEmpirical Software Engineering (2018) 1\u201348.](https://link.springer.com/content/pdf/10.1007/s10664-018-9602-0.pdf)\n",
                "type": "Text_excerpt",
                "original_header": "References",
                "parent_header": [
                    "Early Prediction for Merged vs Abandoned CodeChanges in Modern Code Reviews"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        },
        {
            "result": {
                "value": "@article{ISLAM2022106756,\n    author = {Khairul Islam and Toufique Ahmed and Rifat Shahriyar and Anindya Iqbal and Gias Uddin},\n    url = {https://www.sciencedirect.com/science/article/pii/S0950584921002032},\n    doi = {https://doi.org/10.1016/j.infsof.2021.106756},\n    issn = {0950-5849},\n    year = {2022},\n    pages = {106756},\n    volume = {142},\n    journal = {Information and Software Technology},\n    title = {Early prediction for merged vs abandoned code changes in modern code reviews},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "doi": "https://doi.org/10.1016/j.infsof.2021.106756",
                "title": "Early prediction for merged vs abandoned code changes in modern code reviews",
                "author": "Khairul Islam and Toufique Ahmed and Rifat Shahriyar and Anindya Iqbal and Gias Uddin",
                "url": "https://www.sciencedirect.com/science/article/pii/S0950584921002032"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Early Prediction for Merged vs Abandoned CodeChanges in Modern Code Reviews"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/pdf/1912.03437.pdf"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/khairulislam/predict-code-changes/main/README.md"
        }
    ]
}