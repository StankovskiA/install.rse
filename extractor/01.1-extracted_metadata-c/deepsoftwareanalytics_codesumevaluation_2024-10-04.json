{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 19:41:07"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/DeepSoftwareAnalytics/CodeSumEvaluation",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "DeepSoftwareAnalytics",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2022-02-07T05:39:05Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-03-30T16:33:01Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Replication package for ICSE2022 paper:  On the Evaluation of Neural Code Summarization",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "This is the replication package for [\"On the Evaluation of Neural Code Summarization\"](https://arxiv.org/abs/2107.07112) accepted to ICSE2022. \n * 12 raw and processed datasets, \n * 4 code pre-processing operations and 16 combination implementations, \n * 6 BLEU variants implementation,  \n * re-implement code for the paper without code, \n * all predicted logs in our paper.\n \n",
                "original_header": "On the Evaluation of Neural Code Summarization"
            },
            "confidence": 0.9840883468708569,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "How do different evaluation metrics affect the performance of code summarization\nand which is correlate with the human perception the most? \n",
                "original_header": "RQ1 BLEU Variants:"
            },
            "confidence": 0.9727170121496187,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "CodeSumEvaluation",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "DeepSoftwareAnalytics/CodeSumEvaluation",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/DeepSoftwareAnalytics/CodeSumEvaluation/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/DeepSoftwareAnalytics/CodeSumEvaluation/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 27,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 6,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/deepsoftwareanalytics/codesumevaluation/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 182689
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 147798
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 3199
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/Deepcom_Reimplement/code/run_tlcodesum.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/Deepcom_Reimplement/data/tlcodesum/preprocess.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/Deepcom_Reimplement/data/tlcodesum/get_data.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/RQ/RQ3/RQ3.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/RQ/RQ3/RQ3.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/RQ/RQ2/RQ2.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/RQ/RQ2/RQ2.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/RQ/RQ1/RQ1.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/RQ/RQ1/RQ1.ipynb"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "If you use above data or source code , please consider citing our paper:\n\n```\n  @inproceedings{shi2022evaluation,\n    title={On the evaluation of neural code summarization},\n    author={Shi, Ensheng and Wang, Yanlin and Du, Lun and Chen, Junjie and Han, Shi and Zhang, Hongyu and Zhang, Dongmei and Sun, Hongbin},\n    booktitle={Proceedings of the 44th International Conference on Software Engineering},\n    pages={1597--1608},\n    year={2022}\n  }\n```\n\nThanks!\n",
                "type": "Text_excerpt",
                "original_header": "Citation",
                "parent_header": [
                    "On the Evaluation of Neural Code Summarization"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        },
        {
            "result": {
                "value": "@inproceedings{shi2022evaluation,\n    year = {2022},\n    pages = {1597--1608},\n    booktitle = {Proceedings of the 44th International Conference on Software Engineering},\n    author = {Shi, Ensheng and Wang, Yanlin and Du, Lun and Chen, Junjie and Han, Shi and Zhang, Hongyu and Zhang, Dongmei and Sun, Hongbin},\n    title = {On the evaluation of neural code summarization},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "On the evaluation of neural code summarization",
                "author": "Shi, Ensheng and Wang, Yanlin and Du, Lun and Chen, Junjie and Han, Shi and Zhang, Hongyu and Zhang, Dongmei and Sun, Hongbin"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "These raw or processed datasets can be downloaded from [here](https://figshare.com/s/fe32740133b33d719ab5) \n",
                "original_header": "Datasets"
            },
            "confidence": 0.9800379495525618,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "    USAGE:\n    \n        cd codepreprocessing/\n        python preprocess.py -h [-OPTIONS...]\n    \n    OPTIONS:\n    \n          -h, --help            show this help message and exit\n          -data_filename DATA_FILENAME\n                                The path of raw dataset\n          -java_files_dir JAVA_FILES_DIR\n                                The directory to save extracted Java file\n          -output_dir OUTPUT_DIR\n                                The directory to save processed files\n          -djl                  Parse source code using javalang\n          -dfp                  Filter punctuation in code tokens\n          -dsi                  Split identifiers according to camelCase and\n                                snake_case\n          -dlc                  Lowercase code tokens\n          -dr                   Replace string and number witt generic symbols\n                                <STRING> and <NUM> in code tokens\n          -cfp                  Filter punctuation in summaries\n          -csi                  Split summary token according to camelCase and\n                                snake_case\n          -clc                  Lowercase summary tokens\n          -sbt_type {1,2}       1\uff1aSBT_AO; 2:SBT \n    \n    DEFAULTS:\n    \n       - If not specified, the default [`data_filename'] is [`original/data.pkl`]\n       - If not specified, the default [`java_files_dir'] is [`./java_files`]\n       - If not specified, the default [`output_dir'] is [`./processed`]\n       - If not specified, the default [-djl], [-dfp], [-dsi], [-dlc], [-dr], [-cfp], [-csi] and [-clc] are False\n       - If not specified, the default [`sbt_type'] is [`2`]\n       \n       \n    EXAMPLES:\n    \n        python preprocess.py -djl\n        \n            This example will use javalang to tokenize the all Java methods.\n    \n        python preprocess.py -djl -dsi -dlc \n        \n            This example will use javalang to tokenize all Java methods.\n            Then split identifiers according to camelCase and snake_case and lowercase them.\n            \n    NOTES:\n        \n       - data.pkl saves a dict. \n       The keys  are ['train', 'test', 'val']\n       The values are {fid:item}. item is {\"code\":\"xxx\", \"summary\":\"xxx\"}\n       - The tools are based on python3\n       - The packages \"spiral\" and \"javalang\" are needed. You can install them by:\n            pip install git+https://github.com/casics/spiral.git\n            pip install  javalang==0.12.0\n      \n \n",
                "original_header": "Data Pre-processing"
            },
            "confidence": 0.9999858462360176,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "|   Models     | Source  |          \n|:-------      |:----------|\n|   Codenn     |   https://github.com/sriniiyer/codenn        |  \n|   Deepcom    |   ./Deepcom_Reimplement        |  \n|   Astattgru  |   https://github.com/mcmillco/funcom         |  \n|   Rencos     |   https://github.com/zhangj111/rencos        |  \n|   NCS        |   https://github.com/wasiahmad/NeuralCodeSum |  \n \n",
                "original_header": "Baselines"
            },
            "confidence": 0.9999999999953104,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "\n    USAGE:\n    \n        cd metric\n        python evaluate.py \n    \n    OPTIONS:\n    \n        --refs_filename  The path of the reference file\n        --preds_filename The path of the predicted file\n        \n    DEFAULTS:\n        - If not specified, the default [`refs_filename'] is [`test/test.gold`] \n    EXAMPLES:\n        python evaluate.py \n        \n        This example will calculate the six bleu variants scores between [`test/test.gold`] and [`test/test.pred`]\n        output:\n        \n        +-----------+---------+---------+---------+----------+---------+\n        | BLEU-DCOM | BLEU-FC | BLEU-DC | BLEU-CN | BLEU-NCS | BLEU-RC |\n        +-----------+---------+---------+---------+----------+---------+\n        |   18.94   | 18.3675 | 21.8686 | 27.9888 | 28.4195  | 18.9404 |\n        +-----------+---------+---------+---------+----------+---------+\n        \n        \n    NOTES:\n        - The tools are based on python3\n        - The packages \"nltk\"(3.6.1 or newer, \"numpy\" and \"prettytable\" are needed. You can install them by:\n            pip install nltk==3.6.1 numpy  prettytable==2.1.0 \n",
                "original_header": "Evaluated Metric"
            },
            "confidence": 0.9632381224804909,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "        .\n        \u251c\u2500\u2500 RQ1\n        \u2502         \u251c\u2500\u2500 calculate_correlation.py\n        \u2502         \u251c\u2500\u2500 cal_human_agreement.py\n        \u2502         \u251c\u2500\u2500 correlatio_coefficient_log\n        \u2502         \u251c\u2500\u2500 human_aggrement_log\n        \u2502         \u251c\u2500\u2500 human_evaluation.xlsx\n        \u2502         \u251c\u2500\u2500 README.md\n        \u2502         \u251c\u2500\u2500 RQ1.ipynb\n        \u2502         \u251c\u2500\u2500 score.xlsx\n        \u2502         \u251c\u2500\u2500 TLC\n        \u2502         \u2502         \u251c\u2500\u2500 astattgru\n        \u2502         \u2502         \u2502         \u2514\u2500\u2500 test.pred\n        \u2502         \u2502         \u251c\u2500\u2500 codenn\n        \u2502         \u2502         \u2502         \u2514\u2500\u2500 test.pred\n        \u2502         \u2502         \u251c\u2500\u2500 deepcom\n        \u2502         \u2502         \u2502         \u2514\u2500\u2500 test.pred\n        \u2502         \u2502         \u251c\u2500\u2500 ncs\n        \u2502         \u2502         \u2502         \u2514\u2500\u2500 test.pred\n        \u2502         \u2502         \u251c\u2500\u2500 rencos\n        \u2502         \u2502         \u2502         \u2514\u2500\u2500 test.pred\n        \u2502         \u2502         \u2514\u2500\u2500 test.gold\n        \u2502         \u2514\u2500\u2500 TLC_dedup\n        \u2502             \u251c\u2500\u2500 astattgru\n        \u2502             \u2502         \u2514\u2500\u2500 test.pred\n        \u2502             \u251c\u2500\u2500 codenn\n        \u2502             \u2502         \u2514\u2500\u2500 test.pred\n        \u2502             \u251c\u2500\u2500 deepcom\n        \u2502             \u2502         \u2514\u2500\u2500 test.pred\n        \u2502             \u251c\u2500\u2500 ncs\n        \u2502             \u2502         \u2514\u2500\u2500 test.pred\n        \u2502             \u251c\u2500\u2500 rencos\n        \u2502             \u2502         \u2514\u2500\u2500 test.pred\n        \u2502             \u2514\u2500\u2500 test.gold\n        ..... \n",
                "original_header": "Predicted Logs"
            },
            "confidence": 0.9965764813818175,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "On the Evaluation of Neural Code Summarization"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/Fig/awesome.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/2107.07112"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/deepsoftwareanalytics/codesumevaluation/master/README.md"
        }
    ]
}