{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 20:33:21"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/eth-sri/robust-code",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "eth-sri",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2020-06-30T00:11:49Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-07-16T13:17:38Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/LICENCE"
        },
        {
            "result": {
                "value": "* Copyright (c) 2020 [Secure, Reliable, and Intelligent Systems Lab (SRI), ETH Zurich](https://www.sri.inf.ethz.ch/)\n* Licensed under the [Apache License](http://www.apache.org/licenses/)\n",
                "type": "Text_excerpt",
                "original_header": "License and Copyright"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Adversarial Robustness for Code",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "**Table of Contents**<br>\n1.  [Project Structure](#project-structure) <br>\n2.  [Installation](#installation) <br>\n3.  [Datasets](#datasets) <br>\n4.  [Models](#models) <br>\n5.  [Configurations](#configurations) <br> \n6.  [Evaluation](#evaluation) <br>    \n7.  [Training](#training) <br>\n8.  [Citing this work](#citing-this-work) <br>\n \n",
                "original_header": "Adversarial Robustness for Code"
            },
            "confidence": 0.9809583777790519,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "```\n\u251c\u2500\u2500 data/               # preprocessed dataset (needs to be downloaded, see below)\n\u251c\u2500\u2500 robustcode/         # source code\n\u2502   \u251c\u2500\u2500 analysis/           # scripts to perform static analysis of code. e.g., computing different types of edges \n\u2502   \u251c\u2500\u2500 datasets/           # contains scripts to generate datasets (including running TypeScript type inference).\n\u2502   \u251c\u2500\u2500 dedup/              # scripts to remove duplicates (or near duplicate) files from dataset of programs. Used for creating datasets.\n\u2502   \u251c\u2500\u2500 parsers/            \n\u2502   \u2502   \u251c\u2500\u2500 typescript/     # typescript parser + type inference.\n\u2502   \u2502   \u2514\u2500\u2500 parser.py       # helper script to parse files from command line and pretty print the resulting AST\n\u2502   \u251c\u2500\u2500 models/             # main directory with models and training\n\u2502   \u2502   \u251c\u2500\u2500 modules/        # contains models and various reusable components \n\u2502   \u2502   \u251c\u2500\u2500 robust/         # code for training and evaluating robust models of code\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 adversary/  # implementation of the program modifications and adversary search\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 gurobi/     # implementation of the representation refinement via ILP optimization\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 config/     # configurations files used to run experiments\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 main.py     # main file to train and evaluate models               \n\u2514\u2500\u2500 \u2514\u2500\u2500 util/               # helper classes\n``` \n \n",
                "original_header": "Project Structure"
            },
            "confidence": 0.9686321878117056,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "which shows the model performance while training. \nHere, the 'mask_valid' denotes positions for which prediction is made (i.e., identifiers, expressions, etc.) and for which the loss is computed. \nThe results in 'all' are not interpretable and can be ignored as predicting types for other statements is not meaning full. \nThis is a more detailed robustness breakdown that presented in the paper.\nHere:\n - `correct` denotes subset of the samples for which the original model makes correct prediction. \n - `incorrect` denotes subset of the samples which are mispredicted by the original models, and\n - `reject` are samples for which the original model abstains. Since the baseline model is not trained with `--abstain=False`, it never abstains.\n \nThe `SOUND`, `SOUND_PRECISE` and `UNSOUND` are results when considering adversarial modifications of the original samples.\nIn particular:\n - `SOUND` denotes that the model is correct (or abstains) for all the adversarial modifications\n - `SOUND_PRECISE` denotes that the model is both correct and does not abstain for all the adversarial modifications.  \n - `UNSOUND` denotes that there exists atleast one adversarial sample that leads to misclasification\n \nThis experiment replicates the row `LSTM_AST` in Table 1 which reports accuracy 88% and robustness 4.19%.\n \n",
                "original_header": "Experiments: LSTM Baseline"
            },
            "confidence": 0.9502223999016022,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "robust-code",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "eth-sri/robust-code",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/eth-sri/robust-code/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/eth-sri/robust-code/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 16,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 2,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/eth-sri/robust-code/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 438406
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "JavaScript",
                "name": "JavaScript",
                "type": "Programming_language",
                "size": 16700
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "TypeScript",
                "name": "TypeScript",
                "type": "Programming_language",
                "size": 3144
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 828
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/eth-sri/robust-code/master/robustcode/parsers/typescript/run_server.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/eth-sri/robust-code/master/robustcode/parsers/typescript/test.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/eth-sri/robust-code/master/robustcode/analysis/test.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/eth-sri/robust-code/master/robustcode/datasets/types/cloner.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/eth-sri/robust-code/master/robustcode/models/robust/eval_sparse.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "Prepare virtual environment. Tested with python 3.6.8 but any version 3.5+ should work:\n\n```bash\npython3.6 -m venv venv\n```\nor \n```bash \nvirtualenv -p python3.6 --system-site-packages venv\n```\n\nInstall requirements\n\n```bash\nsource venv/bin/activate\n```\n\nInstall this project in editable state\n\n```bash\npip install wheel\npip install -e .\n```\n",
                "type": "Text_excerpt",
                "original_header": "Installation",
                "parent_header": [
                    "Adversarial Robustness for Code"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "value": "For developlment, we recomment installing pre-commit hooks\n\n```bash\npip install -e .[dev]\npre-commit install\n```\n\nThe following hooks are enabled:\n - [Flake8](https://gitlab.com/pycqa/flake8): Python Linter. The configuration can be adjusted in `setup.cfg`\n - [Black](https://github.com/psf/black): Code formatter. Instructions how to integrate it with your IDE can be found [here](https://github.com/psf/black#editor-integration)\n - [Reorder Python Imports](https://github.com/asottile/reorder_python_imports).\n \nIf necessary, the hooks can be bypassed with the `--no-verify` option passed to `git commit`.\n",
                "type": "Text_excerpt",
                "original_header": "Pre-commit Hooks",
                "parent_header": [
                    "Adversarial Robustness for Code",
                    "Installation"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Download and extract datasets using:\n```\nwget https://files.sri.inf.ethz.ch/data/bigcode/deeptyperast.tar.gz\ntar -vxf deeptyperast.tar.gz\n```\n \n",
                "original_header": "Datasets"
            },
            "confidence": 0.9999993190137292,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "\u251c\u2500\u2500 deeptyperast_1k/\n\u2502   \u251c\u2500\u2500 config.json         # configuration file used to generate the dataset \n\u2502   \u251c\u2500\u2500 test.json.gz        # test split\n\u2502   \u251c\u2500\u2500 valid.json.gz       # valid split\n\u2502   \u251c\u2500\u2500 train.json.gz       # train split \n",
                "original_header": "Dataset Format (Optional)"
            },
            "confidence": 0.9999722192055861,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "For a more detailed evaluation please run:\n```bash\ntime python std_train.py --config configs/ast_ggnn.ini --adversarial True --n_subtree=300 --n_renames=1000 --repeat 3\n```\nfor adversarial (`--adversarial True`) and standard training (`--adversarial False`).\nFor training with representation refinement, the following command is needed.\n```bash\ntime python train_sparse.py --config configs/ast_ggnn.ini --n_subtree=300 --n_renames=1000 --repeat 1 --max_models 8 --last_base --eval\n\nBase Accuracy:  22033/ 25120 (87.71%), reject:      0/ 25120 (0.00%)\n\t   correct                SOUND:  16819/ 22033 (76.34%)\n\t   correct        SOUND_PRECISE:  16819/ 22033 (76.34%)\n\t   correct              UNSOUND:   5214/ 22033 (23.66%)\n\t incorrect              UNSOUND:   3087/  3087 (100.00%)\n\t    reject                SOUND:      0/     0 (0.00%)\n\t    reject        SOUND_PRECISE:      0/     0 (0.00%)\n\t    reject              UNSOUND:      0/     0 (0.00%)\n\t     total                SOUND:  16819/ 25120 (66.95%)\n\t     total              UNSOUND:   8301/ 25120 (33.05%)\n```\n \n",
                "original_header": "Evaluation"
            },
            "confidence": 0.9921347542783251,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To run other models, simply change the config file. E.g., for ggnn use the following:\n```bash\ncd robustcode/models/robust\npython std_train.py --config configs/ast_ggnn.ini --adversarial False --n_subtree=300 --n_renames=1000 --repeat 1\n```\n \n",
                "original_header": "Experiments: Other models"
            },
            "confidence": 0.9999385660981323,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To train robust models, use the following command:\n```bash\ncd robustcode/models/robust\ntime python train_sparse.py --config configs/ast_ggnn.ini --n_subtree=300 --n_renames=1000 --repeat 1 --max_models 8 --last_base\n```\n \n",
                "original_header": "Experiments: Robust Models"
            },
            "confidence": 0.9999427117594379,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        }
    ],
    "requirements": [
        {
            "result": {
                "value": "For individual project dependencies please consult the projects README file. \n",
                "type": "Text_excerpt",
                "original_header": "Dependencies",
                "parent_header": [
                    "Adversarial Robustness for Code"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "value": "_not necessary for evaluating and training with existing datasets_\n\nThe parser requires nodejs and npm installed.\nOn ubuntu, these can be installed using:\n\n```bash\nsudo apt-get install nodejs npm\n```\n\n```bash\ncd robustcode/parsers/typescript\nnpm install\nnpm test\ncd ../../..\n```\n\nRunning `npm test` checks that the parser correctly removes type annotations while parsing.\n\nWe provide a separate script that can be used to parse individual files:\n\n```bash\n./robustcode/parsers/parser.py robustcode/parsers/typescript/fixtures/fnc.ts\n\n[{'id': 0, 'type': 'SourceFile', 'children': [1]}, {'id': 1, 'type': 'SyntaxList', 'children': [2, 60, 111, 142, 182, 244, 343, 376, 404, 418, 501, 580]}, {'id': 2, 'type': 'FunctionDeclaration', 'children': [3, 4, 5, 6, 16, 17, 18, 19], 'target': '(x: number, y: number) => number'} ...\n``` \n\nTo dump AST in a nicer way, use `--pretty` option\n\n```bash\n./robustcode/parsers/parser.py robustcode/parsers/typescript/fixtures/fnc.ts --pretty\n\n0                  SourceFile                                         ' '                                                         \n 1                 SyntaxList                                         ' '                                                         \n  2                FunctionDeclaration                                '(x: number, y: number) => number'                          \n   3               FunctionKeyword                function            '(x: number, y: number) => number'                          \n   4               Identifier                     add                 '(x: number, y: number) => number'                          \n   5               OpenParenToken                 (                   ' '                                                         \n   6               SyntaxList                                         ' ' \n```\n\n",
                "type": "Text_excerpt",
                "original_header": "TypeScript Parser (Optional)",
                "parent_header": [
                    "Adversarial Robustness for Code",
                    "Dependencies"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "value": "The ILP solver used in our work is Gurobi v8.1.1.\nTo obtain academic licence please visit: https://www.gurobi.com/downloads/\n\nOnce the solver is downloaded, install it for the current virtual environment using:\n\n```bash\ncd /opt/gurobi811/linux64\nsudo <project_dir>/venv/bin/python setup.py install\n```\n\nNote that you'll also need to modify the following environment variables for the solver to work correctly:\n\n```\nexport GUROBI_HOME=\"/opt/gurobi811/linux64\"\nexport PATH=\"${PATH}:${GUROBI_HOME}/bin\"\nexport LD_LIBRARY_PATH=\"${LD_LIBRARY_PATH}:${GUROBI_HOME}/lib\"\n```\n\nThe easiest way to do this is to include the above lines in the `~/.bashrc` file.\n\nNote that currently it is required to install the solver to train and evaluate the models. We are planning to remove this dependency in the future.\n\n",
                "type": "Text_excerpt",
                "original_header": "Gurobi ILP solver (required for training with learned representation)",
                "parent_header": [
                    "Adversarial Robustness for Code",
                    "Dependencies"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        }
    ],
    "citation": [
        {
            "result": {
                "value": "```\n@incollection{bielik20robust,\n  title = {Adversarial Robustness for Code},\n  author = {Bielik, Pavol and Vechev, Martin},\n  booktitle = {Proceedings of The 37rd International Conference on Machine Learning},\n  year = {2020},\n  series = {ICML'20}\n}\n```\n",
                "type": "Text_excerpt",
                "original_header": "Citing This Work"
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "value": "@incollection{bielik20robust,\n    series = {ICML'20},\n    year = {2020},\n    booktitle = {Proceedings of The 37rd International Conference on Machine Learning},\n    author = {Bielik, Pavol and Vechev, Martin},\n    title = {Adversarial Robustness for Code},\n}",
                "type": "Text_excerpt",
                "format": "bibtex",
                "title": "Adversarial Robustness for Code",
                "author": "Bielik, Pavol and Vechev, Martin"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To run other models, simply change the config file. E.g., for ggnn use the following:\n```bash\ncd robustcode/models/robust\npython std_train.py --config configs/ast_ggnn.ini --adversarial False --n_subtree=300 --n_renames=1000 --repeat 1\n```\n \n",
                "original_header": "Experiments: Other models"
            },
            "confidence": 0.9095064821082092,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To train robust models, use the following command:\n```bash\ncd robustcode/models/robust\ntime python train_sparse.py --config configs/ast_ggnn.ini --n_subtree=300 --n_renames=1000 --repeat 1 --max_models 8 --last_base\n```\n \n",
                "original_header": "Experiments: Robust Models"
            },
            "confidence": 0.9075968219713381,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Adversarial Robustness for Code"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/eth-sri/robust-code/master/README.md"
        }
    ]
}