{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 18:05:10"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/WM-SEMERU/SecureReqNet",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "WM-SEMERU",
                "type": "Organization"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2019-07-27T22:26:35Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2022-04-08T19:17:11Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "license": [
        {
            "result": {
                "value": "https://api.github.com/licenses/apache-2.0",
                "type": "License",
                "name": "Apache License 2.0",
                "url": "https://api.github.com/licenses/apache-2.0",
                "spdx_id": "Apache-2.0"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2020 Nathan Cooper\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/LICENSE"
        }
    ],
    "description": [
        {
            "result": {
                "value": "We present a novel approach, called SecureReqNet, for automatically identifying whether issues in bug or issue tracking systems describe security related content that should be given careful attention. Our approach consists of a two-phase deep learning architecture that operates purely on the natural language descriptions of issues. The first phase of our approach learns high dimensional sentence embeddings from hundreds of thousands of descriptions extracted from software vulnerabilities listed in the CVE database and issue descriptions extracted from open source projects using an unsupervised learning process. The second phase then utilizes this semantic ontology of embeddings to train a deep convolutional neural network capable of predicting whether a given issue contains security- related information.",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- *CVE Database*: Our CVE Dataset was derived by crawling the National Vulnerability Database (NVD) and extracting the vulnerability description for each CVE entry. In total, we extracted over 100,000 CVE descriptions, however, in order to construct a dataset balanced equally between SR and non-SR text, we randomly sampled 52,908 CVE descriptions. \n- *GitLab Issues*: To obtain a large set of diverse issues extracted from the issue trackers of a high-quality open source project we crawled the issue tracker of the GitLab Community Edition (CE) [project](https://gitlab.com/gitlab-org/gitlab-ce/issues). This project contains open source components of the GitLab suite of developer tools (used by millions) with an issue tracker that includes a sophisticated labeling system. To extract SR issues, we crawled this issue tracker and extracted issue descriptions containing \"security\" label. To extract non-SR issues we extracted entries without the \"security\" label and manually verified the non-SR nature of the descriptions by randomly sampling of 10% of the issues.\n- *GitHub Issues*: Given the limited number of SR GitLab issues that we were able to extract, we also crawled the issue trackers of the most popular projects on GitHub (according to number of stars) and extracted issues with the \"security\" tag in order to derive a larger and more diverse dataset. Again, we randomly crawled non-SR issues and performed a random sampling to ensure the validity of the non-SR issues. \n- *Wikipedia Articles*: If we trained our neural embeddings on *only* highly specialized software text extracted from issues, we risk our model not learning more generalized word contexts that could help differentiate between SR and non-SR issues. Thus, we randomly crawled and extracted the text from 10,000 Wikipedia articles in order to bolster the generalizablility of our learned neural word embeddings. \n",
                "original_header": "Datasets"
            },
            "confidence": 0.9337986044638532,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "For more detail, check out the deployment documentation and the deployment colab.\nThis image shows what the securereqnet package provides in terms of deployment onto your server. \n",
                "original_header": "Serving"
            },
            "confidence": 0.9605334239384413,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "SecureReqNet",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "WM-SEMERU/SecureReqNet",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/WM-SEMERU/SecureReqNet/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/WM-SEMERU/SecureReqNet/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 8,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 5,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/danaderp/securereqnet/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Jupyter Notebook",
                "name": "Jupyter Notebook",
                "type": "Programming_language",
                "size": 13629012
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 87875
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Shell",
                "name": "Shell",
                "type": "Programming_language",
                "size": 812
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Makefile",
                "name": "Makefile",
                "type": "Programming_language",
                "size": 465
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Dockerfile",
                "name": "Dockerfile",
                "type": "Programming_language",
                "size": 186
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "releases": [
        {
            "result": {
                "type": "Release",
                "value": "https://api.github.com/repos/WM-SEMERU/SecureReqNet/releases/35675061",
                "tag": "v1.0-pip",
                "name": "First pip release",
                "author": {
                    "name": "rmclanton",
                    "type": "User"
                },
                "description": "Publishing SecureReqNet to pip",
                "tarball_url": "https://api.github.com/repos/WM-SEMERU/SecureReqNet/tarball/v1.0-pip",
                "zipball_url": "https://api.github.com/repos/WM-SEMERU/SecureReqNet/zipball/v1.0-pip",
                "html_url": "https://github.com/WM-SEMERU/SecureReqNet/releases/tag/v1.0-pip",
                "url": "https://api.github.com/repos/WM-SEMERU/SecureReqNet/releases/35675061",
                "release_id": 35675061,
                "date_created": "2020-12-23T19:24:56Z",
                "date_published": "2020-12-23T20:41:53Z"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "has_build_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/Dockerfile",
                "type": "Url",
                "format": "dockerfile"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/Dockerfile"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "contributing_guidelines": [
        {
            "result": {
                "value": "# How to contribute\n\n## How to get started\n\nBefore anything else, please install the git hooks that run automatic scripts during each commit and merge to strip the notebooks of superfluous metadata (and avoid merge conflicts). After cloning the repository, run the following command inside it:\n```\nnbdev_install_git_hooks\n```\n\n## Did you find a bug?\n\n* Ensure the bug was not already reported by searching on GitHub under Issues.\n* If you're unable to find an open issue addressing the problem, open a new one. Be sure to include a title and clear description, as much relevant information as possible, and a code sample or an executable test case demonstrating the expected behavior that is not occurring.\n* Be sure to add the complete error messages.\n\n#### Did you write a patch that fixes a bug?\n\n* Open a new GitHub pull request with the patch.\n* Ensure that your PR includes a test that fails without your patch, and pass with it.\n* Ensure the PR description clearly describes the problem and solution. Include the relevant issue number if applicable.\n\n## PR submission guidelines\n\n* Keep each PR focused. While it's more convenient, do not combine several unrelated fixes together. Create as many branches as needing to keep each PR focused.\n* Do not mix style changes/fixes with \"functional\" changes. It's very difficult to review such PRs and it most likely get rejected.\n* Do not add/remove vertical whitespace. Preserve the original style of the file you edit as much as you can.\n* Do not turn an already submitted PR into your development playground. If after you submitted PR, you discovered that more work is needed - close the PR, do the required work and then submit a new PR. Otherwise each of your commits requires attention from maintainers of the project.\n* If, however, you submitted a PR and received a request for changes, you should proceed with commits inside that PR, so that the maintainer can see the incremental fixes and won't need to review the whole PR again. In the exception case where you realize it'll take many many commits to complete the requests, then it's probably best to close the PR, do the work and then submit it again. Use common sense where you'd choose one way over another.\n\n## Do you want to contribute to the documentation?\n\n* Docs are automatically created from the notebooks in the nbs folder.\n\n",
                "type": "File_dump"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/CONTRIBUTING.md"
        }
    ],
    "has_script_file": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/start.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/serving/deploy_tfx_serving.sh",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "documentation": [
        {
            "result": {
                "value": "https://github.com/danaderp/securereqnet/tree/master/docs",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "executable_example": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/gamma_pipeline/Gamma_SecureReqNet.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/gamma_pipeline/Gamma_SecureReqNet.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/gamma_pipeline/TFX_serving_test.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/gamma_pipeline/TFX_serving_test.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/06_model_evaluation.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/06_model_evaluation.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/08_models.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/08_models.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/04_preprocessing.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/04_preprocessing.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/09_record_generator.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/09_record_generator.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/05_testing.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/05_testing.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/10_deployment.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/10_deployment.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/03_utils.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/03_utils.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/02_alpha_securereqnet.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/02_alpha_securereqnet.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/01_Embeddings.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/01_Embeddings.ipynb"
        },
        {
            "result": {
                "value": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/index.ipynb",
                "type": "Url",
                "format": "jupyter_notebook"
            },
            "confidence": 1,
            "technique": "file_exploration",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/nbs/index.ipynb"
        }
    ],
    "installation": [
        {
            "result": {
                "value": "https://wm-semeru.github.io/SecureReqNet/\n",
                "type": "Text_excerpt",
                "original_header": "SecureReqNet Documenation website at:",
                "parent_header": [
                    "SecureReqNet",
                    "Install with `pip install securereqnet`"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "value": "https://colab.research.google.com/drive/1mOXvgvkqCEgrAahyUH9Bw0ZO_nLglNFq\n",
                "type": "Text_excerpt",
                "original_header": "\u03b1-SecureReqNet:",
                "parent_header": [
                    "SecureReqNet",
                    "Install with `pip install securereqnet`",
                    "Want to try out SecureReqNet? Checkout these examples in google colab:"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "value": "https://colab.research.google.com/github/wm-semeru/SecureReqNet/blob/master/Gamma_SecureReqNet.ipynb\n",
                "type": "Text_excerpt",
                "original_header": "\u0393-SecureReqNet:",
                "parent_header": [
                    "SecureReqNet",
                    "Install with `pip install securereqnet`",
                    "Want to try out SecureReqNet? Checkout these examples in google colab:"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "value": "https://colab.research.google.com/drive/1pb_QQOm0jA0SwejgqxBXKBhkuM42al4k \n",
                "type": "Text_excerpt",
                "original_header": "Or serve your own version:",
                "parent_header": [
                    "SecureReqNet",
                    "Install with `pip install securereqnet`"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "value": "https://colab.research.google.com/drive/1C4D4Wvv0xW8UfoFNLM-7Bc2NxP0AISvB\n",
                "type": "Text_excerpt",
                "original_header": "For model interpretability:",
                "parent_header": [
                    "SecureReqNet",
                    "Install with `pip install securereqnet`"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "value": "- [x] Using Shallow Neural Network to predict security relatedness on issues (or requirements) \n- [x] Using Deep Neural Network to predict security relatedness on issues (or requirements)\n- [ ] Using a Neural Network to predict quantitatively (regression) how critical is an issue (or requirement)\n- [ ] Implementing a Transformer Architecture to predict security criticality on issues (or requirements)\n- [ ] Recovering security related relationships among software artifacts by employing traceability theory\n\n\n*SecureReqNet* consists of a two-phase deep learning architecture that operates *(for now)* purely on the natural language descriptions of issues. The first phase of our approach learns high dimensional sentence embeddings from hundreds of thousands of descriptions extracted from software vulnerabilities listed in the CVE database and issue descriptions extracted from open source projects using an unsupervised learning process. The second phase then utilizes this semantic ontology of embeddings to train a deep convolutional neural network capable of predicting whether a given issue contains security-related information.\n\n<object data=\"https://github.com/danaderp/SecureReqNet/blob/master/data/plots/architecture.pdf\" type=\"application/pdf\" width=\"100%\"> \n</object>\n\n\n![\u03b1-SecureReqNet](https://github.com/danaderp/SecureReqNet/blob/master/data/plots/architecture-1.png)\n\n\n*SecureReqNet* has four versions that vary in terms of the size of the tensors and the parameters of the convolutional layers.\n\n\n1. **SecureReqNet (shallow)** was based on the best architecture achived by Han, et al. Such architecture implemented one convolution layer with 3 kernes of different sizes. The authors set up the size of each kernel as 1-gram, 3-gram, and 5-gram to reduce an input matrix. This matrix was built by means of an unsupervised word2vec where the rows represents the words in a given document (or issue) and the columns the size of the embedding. Details of how we trained our word2vec can be found in the notebook [*03_Clustering*](https://github.com/danaderp/SecureReqNet/blob/master/nbs/03_Clustering.ipynb).  **SecureReqNet (shallow)** has a max pooling layer followed by a flatten function. The final tensor is a merged vector from the 3 initial kernels. Unlike Han, et al.' SVM multi-class output layer, we utilized a binary classification throughout a softmax layer.\n\n\n```python\n# 1st Convolutional Layer (1-gram)\nconv_filter_1_gram = Conv2D(filters= N_filters, input_shape=input_sh, activation='relu', \n                       kernel_size=(1,embeddigs_cols), padding='valid',data_format=\"channels_last\")(gram_input)\n# 2sd Convolutional Layer (3-gram)\nconv_filter_3_gram = Conv2D(filters= N_filters, input_shape=input_sh, activation='relu', \n                       kernel_size=(3,embeddigs_cols), padding='valid')(gram_input)\n# 3rd Convolutional Layer (5-gram)\nconv_filter_5_gram = Conv2D(filters= N_filters, input_shape=input_sh, activation='relu', \n                       kernel_size=(5,embeddigs_cols), padding='valid')(gram_input)\n\n# Max Pooling Layer\nmax_pool_1_gram = MaxPooling2D(pool_size=((max_len_sentences-1+1), 1), strides=None, padding='valid')(conv_filter_1_gram)\nmax_pool_3_gram = MaxPooling2D(pool_size=((max_len_sentences-3+1), 1), strides=None, padding='valid')(conv_filter_3_gram)\nmax_pool_5_gram = MaxPooling2D(pool_size=((max_len_sentences-5+1), 1), strides=None, padding='valid')(conv_filter_5_gram)     \n\n# Fully Connected layer\nfully_connected_1_gram = Flatten()(max_pool_1_gram)\nfully_connected_3_gram = Flatten()(max_pool_3_gram)\nfully_connected_5_gram = Flatten()(max_pool_5_gram)\n\nmerged_vector = layers.concatenate([fully_connected_1_gram, fully_connected_3_gram, \n                                    fully_connected_5_gram], axis=-1)\n\nintegration_layer = Dropout(0.2)(merged_vector) # <-------- [HyperParameter]\n\npredictions = Dense(K, activation='softmax')(integration_layer)\n\n#Criticality Model\ncriticality_network = Model(inputs=[gram_input],outputs=[predictions])\n```\n\n\n2. **SecureReqNet (deep)** was an expansion of **SecureReqNet (shallow)**. We included an extra convolutional layer, a max pooling, and a flatten function. The final tensor is a merged vector from the 3 initial kernels. A fully connected sigmoid layers was added just before the binary softmax layer. \n\n\n\n3. **Alex-SecureReqNet (deep)** was based on the proposed architecture by Krizhevsky et al., where 5 convolutional layers extract the abstract features and 3 fully connected reduce the dimensionality. This is the classical convolutional ImageNet network with a small adaptation in the final layer to induce binary classification. \n\n\n4. **\u03b1-SecureReqNet (deep)** was a modification of the **Alex-SecureReqNet (deep)** in the convolutional layers. The modification consisted in implementing the n-gram kernel strategy for text-based datasets [(Han, et al., 2017)](https://ieeexplore.ieee.org/abstract/document/8094415). The input layer is a document embedding in the shape of a matrix. The first convolutional layer has a kernel of 7-gram size to reduce the input matrix into 32 vector feature maps. Later, it is applied a max pooling and a flatten function to obtain a column matrix. The second convolutional layer has a 5-gram filter followed by a max pooling and flatten function that merged 64 features. The third, fourth, and fifth convolutional layers are very similar to the original distribution in ImageNet but using 3-gram filters and 128/64 features respectively. Three fully connected layers went after the fifth conv layer to reduce the dimensionality and control the overfitting with the dropout units. The final layer is again a binary softmax layer (security vs non-security related).\n\n\n```python\n# 1st Convolutional Layer Convolutional Layer (7-gram)\nconv_1_layer = Conv2D(filters=32, input_shape=input_sh, activation='relu', \n                      kernel_size=(7,embeddigs_cols), padding='valid')(gram_input)\n# Max Pooling \nmax_1_pooling = MaxPooling2D(pool_size=((max_len_sentences-7+1),1), strides=None, padding='valid')(conv_1_layer)\n\n# Fully Connected layer\nfully_connected_1_gram = Flatten()(max_1_pooling)\nfully_connected_1_gram = Reshape((32, 1, 1))(fully_connected_1_gram)\n\n# 2nd Convolutional Layer (5-gram)\nconv_2_layer = Conv2D(filters=64, kernel_size=(5,1), activation='relu', \n                      padding='valid')(fully_connected_1_gram)\n                      \nmax_2_pooling = MaxPooling2D(pool_size=((32-5+1),1), strides=None, padding='valid')(conv_2_layer)  \n\n# Fully Connected layer\nfully_connected_2_gram = Flatten()(max_2_pooling)\nfully_connected_2_gram = Reshape((64, 1, 1))(fully_connected_2_gram)\n\n# 3rd Convolutional Layer (3-gram)\nconv_3_layer =  Conv2D(filters=128, kernel_size=(3,1), activation='relu', \n                      padding='valid')(fully_connected_2_gram)\n                      \n# 4th Convolutional Layer (3-gram)\nconv_4_layer = Conv2D(filters=128, kernel_size=(3,1), activation='relu', \n                     padding='valid')(conv_3_layer)\n                     \n# 5th Convolutional Layer (3-gram)\nconv_5_layer = Conv2D(filters=64, kernel_size=(3,1), activation='relu', \n                     padding='valid')(conv_4_layer)\n                     \n# Max Pooling\nmax_5_pooling = MaxPooling2D(pool_size=(58,1), strides=None, padding='valid')(conv_5_layer)  \n\n# Fully Connected layer\nfully_connected = Flatten()(max_5_pooling)\n\n# 1st Fully Connected Layer\ndeep_dense_1_layer = Dense(32, activation='relu')(fully_connected)\ndeep_dense_1_layer = Dropout(0.2)(deep_dense_1_layer) # <-------- [HyperParameter]\n\n# 2nd Fully Connected Layer\ndeep_dense_2_layer = Dense(32, activation='relu')(deep_dense_1_layer)\ndeep_dense_2_layer = Dropout(0.2)(deep_dense_2_layer) # <-------- [HyperParameter]\n\n# 3rd Fully Connected Layer\ndeep_dense_3_layer = Dense(16, activation='relu')(deep_dense_2_layer)\ndeep_dense_3_layer = Dropout(0.2)(deep_dense_3_layer) # <-------- [HyperParameter]\n\npredictions = Dense(K, activation='softmax')(deep_dense_3_layer)\n\n#Criticality Model\ncriticality_network = Model(inputs=[gram_input],outputs=[predictions])\n```\n\n\n> If you are using **\u03b1-SecureReqNet**, please consider citing [(N. Palacio, et al., 2019)](https://arxiv.org/abs/1908.00614)\n\n",
                "type": "Text_excerpt",
                "original_header": "Research and Components Roadmap",
                "parent_header": [
                    "SecureReqNet",
                    "Install with `pip install securereqnet`"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "Dataset Source | Embedding | Training | Validation | Testing |\n--- | --- | --- | --- | --- |\nCVE Database | 52908 | 37036 | 10582 | - |\nGitLab Issues (SR) | 578 | 405 | 116 | 58 |\nGitLab Issues (Non-SR) | 578 | 405 | 116 | 58 |\nGitHub Issues (SR) | 4575 | 3203 | 915 | 458 |\nGitHub Issues (Non-SR) | 47483 | 33238 | 9497 | 458 |\nWikipedia | 10000 | - | - | - | \n",
                "original_header": "Datasets"
            },
            "confidence": 0.9161591874421884,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        }
    ],
    "usage": [
        {
            "result": {
                "value": "https://colab.research.google.com/drive/1mOXvgvkqCEgrAahyUH9Bw0ZO_nLglNFq\n",
                "type": "Text_excerpt",
                "original_header": "\u03b1-SecureReqNet:",
                "parent_header": [
                    "SecureReqNet",
                    "Install with `pip install securereqnet`",
                    "Want to try out SecureReqNet? Checkout these examples in google colab:"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "value": "https://colab.research.google.com/github/wm-semeru/SecureReqNet/blob/master/Gamma_SecureReqNet.ipynb\n",
                "type": "Text_excerpt",
                "original_header": "\u0393-SecureReqNet:",
                "parent_header": [
                    "SecureReqNet",
                    "Install with `pip install securereqnet`",
                    "Want to try out SecureReqNet? Checkout these examples in google colab:"
                ]
            },
            "confidence": 1,
            "technique": "header_analysis",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "SecureReqNet"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        }
    ],
    "logo": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/rmclanton/SecureReqNet/master/images/securereqnet%20serving.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        }
    ],
    "images": [
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/danaderp/SecureReqNet/master/data/plots/architecture-1.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/rmclanton/SecureReqNet/master/images/shap_200_issues_alpha.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        },
        {
            "result": {
                "type": "Url",
                "value": "https://raw.githubusercontent.com/rmclanton/SecureReqNet/master/images/Our%20Prod%20Environment.png"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        }
    ],
    "related_papers": [
        {
            "result": {
                "type": "Url",
                "value": "https://arxiv.org/abs/1908.00614"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/danaderp/securereqnet/master/README.md"
        }
    ]
}