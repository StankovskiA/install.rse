{
    "somef_provenance": {
        "somef_version": "0.9.5",
        "somef_schema_version": "1.0.0",
        "date": "2024-10-04 18:22:03"
    },
    "code_repository": [
        {
            "result": {
                "value": "https://github.com/grosa1/icse2021-szz-replication-package",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "owner": [
        {
            "result": {
                "value": "grosa1",
                "type": "User"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_created": [
        {
            "result": {
                "value": "2021-01-27T13:28:24Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "date_updated": [
        {
            "result": {
                "value": "2024-04-15T20:26:30Z",
                "type": "Date"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "description": [
        {
            "result": {
                "value": "Evaluating SZZ Implementations Through a Developer-informed Oracle (https://arxiv.org/abs/2102.03300)",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- `analyzed_projects_all.csv` contains in CSV format the list of all cloned projects at the time of this study.\n    - `repo_name` is the repository name;\n    - `last_checkout` is the hash of the last commit available at the time of the clone, and;\n    - `date` is the date of the latest available commit.\n    \n- `detailed-database` is a folder containing the two complete datasets we defined.\n    - `overall.json` contains all the instances of our dataset (1,930);\n    - `language-filtered.json` contains 1,115 instances involving files in the following languages: C, Python, C++, JavaScript, Java, PHP, Ruby, and C#.\n    Both these datasets are JSON arrays. Each element has the following structure:\n        - `id` is a unique ID used during the construction phase, it is a univocal value for every entry;\n        - `repository` is the repository name as hosted in GitHub (owner/project-name);\n        - `fix` contains information about the fix, including:\n            - `commit`: meta-data about the commit, including:\n                - `hash`: commit hash;\n                - `message`: commit message;\n                - `author`: commit author;\n                - `url`: GitHub API URL with complete information about the commit;\n            - `files`: an array of files modified in the fix commit; each element provides:\n                - `name`: name of the modified file after the commit (this is not the complete path, just the file name);\n                - `old_path`/`new_path`: the path of the file before and after the commit;\n                - `lang`: extension of the file (indicating the programming language);\n                - `lines_added`/`lines_deleted`: lists of line numbers added/deleted;\n                - `change_type`: type of change (one of the following: \"MODIFY\"/\"ADD\"/\"RENAME\"/\"DELETE\");\n        - `bugs` contains the list of bug-inducing-commits for the fix; each element includes:\n            - `commit`: meta-data about the commit, including:\n                - `hash`: commit hash;\n                - `message`: commit message;\n                - `author`: commit author;\n                - `url`: GitHub API URL with complete information about the commit;\n            - `files`: an array of files modified in the fix commit; each element provides:\n                - `name`: name of the modified file after the commit (this is not the complete path, just the file name);\n                - `old_path`/`new_path`: the path of the file before and after the commit;\n                - `lang`: extension of the file (indicating the programming language);\n                - `lines_added`/`lines_deleted`: lists of line numbers added/deleted;\n                - `change_type`: type of change (one of the following: \"MODIFY\"/\"ADD\"/\"RENAME\"/\"DELETE\");\n        - `issue_urls` is a list of URLs of issues referenced in the fix commit;\n        - `earliest_issue_date` is the date of the earliest issue referenced in the fix commit (YYYY-MM-DDTHH:MM:SS);\n        - `best_scenario_issue_date` represents the date of an ideal issue reported for the bug; it is the date of the last bug-inducing commit incremented by 60 seconds (YYYY-MM-DDTHH:MM:SS).\n        \n- `json-input-raw` is a folder containing four datasets used as input for our experimentations, derived from `language-filtered.json`.\n    - `bugfix_commits_all.json` and `bugfix_commits_issues_only.json` contain 1,115 and 129 instances in JSON format, respectively. \n    - `bugfix_commits_all_java.json` and `bugfix_commits_issues_only_java.json` contain 80 and 10 instances in JSON format, respectively.  \n    These datasets represent the input list of the selected fix commits and its relative list of bug-inducing commits, other than the following additional information used in our SZZ evaluation.\n        - `id` is a unique ID used during the construction phase, it is a univocal value for every entry;\n        - `repo_name` is the repository name as hosted in GitHub;\n        - `fix_commit_hash` is the commit's hash of the selected fix;\n        - `bug_commit_hash` is a list of bug-inducing commits;\n        - `earliest_issue_date` is a string containing the timestamp of the earliest issue (YYYY-MM-DDTHH:MM:SS);\n        - `best_scenario_issue_date` represents the date of an ideal issue reported for the bug; it is the date of the last bug-inducing commit incremented by 60 seconds (YYYY-MM-DDTHH:MM:SS);\n        - `issue_urls` is a list of URLs of issues referenced in the fix commit;\n        - `language` is a list of the programming languages of the files impacted by the fix commit.\n    \n- `cloned` is a placeholder folder where git repositories must be copied (or cloned) to replicate this work. See the instructions below. \n- `tools` is a folder that contains a snapshot of developed codes. For new studies, please use the extended version [PySZZ v2](https://github.com/grosa1/pyszz_v2). \n",
                "original_header": "Evaluating SZZ Implementations Through a Developer-informed Oracle: Replication package"
            },
            "confidence": 0.9631622624558216,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- _Preparing input data._ As the first step you need to clone the git repository of every project. You can rely on the following approach.\n    - As an alternative, you can clone into `cloned` folder each repository and then checkout the list of commit's hashes contained in `analyzed_projects_all.csv` and `analyzed_projects_issues_only.csv`. This recreates the exact same conditions of our experiment.  \nWhere:\n - `json-input-raw/bugfix_commits_all.json` is the input list of fixes;\n - `conf/bszz.yml` is a pre-defined list of settings used to activate a specific variant (see `tools/pyszz.zip` for more details);\n -  `cloned` is the folder containing a list of pre-cloned repositories. \n",
                "original_header": "How to generate the pre-calculated results"
            },
            "confidence": 0.9394943577681303,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- `<dataset>-heatmap.pdf` as reported in the manuscript.\n- `wrong` is a subfolder with a list of CSV files containing the wrongly identified BIC with a link to GitHub FIX commit.\n \n",
                "original_header": "Recall, Precision, F-measure, and Overlap"
            },
            "confidence": 0.900510768995069,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        }
    ],
    "name": [
        {
            "result": {
                "value": "icse2021-szz-replication-package",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "full_name": [
        {
            "result": {
                "value": "grosa1/icse2021-szz-replication-package",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "issue_tracker": [
        {
            "result": {
                "value": "https://api.github.com/repos/grosa1/icse2021-szz-replication-package/issues",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_url": [
        {
            "result": {
                "value": "https://api.github.com/repos/grosa1/icse2021-szz-replication-package/forks",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "stargazers_count": [
        {
            "result": {
                "value": 14,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "keywords": [
        {
            "result": {
                "value": "",
                "type": "String"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "forks_count": [
        {
            "result": {
                "value": 9,
                "type": "Number"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "download_url": [
        {
            "result": {
                "value": "https://github.com/grosa1/icse2021-szz-replication-package/releases",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "programming_languages": [
        {
            "result": {
                "value": "Python",
                "name": "Python",
                "type": "Programming_language",
                "size": 16009
            },
            "confidence": 1,
            "technique": "GitHub_API"
        },
        {
            "result": {
                "value": "Ruby",
                "name": "Ruby",
                "type": "Programming_language",
                "size": 4277
            },
            "confidence": 1,
            "technique": "GitHub_API"
        }
    ],
    "readme_url": [
        {
            "result": {
                "value": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md",
                "type": "Url"
            },
            "confidence": 1,
            "technique": "file_exploration"
        }
    ],
    "type": [
        {
            "result": {
                "value": "commandline-application",
                "type": "String"
            },
            "confidence": 0.82,
            "technique": "software_type_heuristics"
        }
    ],
    "installation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "- _Preparing input data._ As the first step you need to clone the git repository of every project. You can rely on the following approach.\n    - As an alternative, you can clone into `cloned` folder each repository and then checkout the list of commit's hashes contained in `analyzed_projects_all.csv` and `analyzed_projects_issues_only.csv`. This recreates the exact same conditions of our experiment.  \n``python3 main.py json-input-raw/bugfix_commits_all.json conf/bszz.yml cloned`` runs B-SZZ algorithm. \n",
                "original_header": "How to generate the pre-calculated results"
            },
            "confidence": 0.9605765808316435,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "`overlap.py` is a Python script with embedded input paths that can be used to calculate Recall, Precision, F-measure, and overlap.\nYou may need to adapt `base_path` global variable to point to your result's directory. E.g., `base_path = \"json-output-raw/\"` analyzes the study's results. \n",
                "original_header": "Recall, Precision, F-measure, and Overlap"
            },
            "confidence": 0.9845184620059236,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        },
        {
            "result": {
                "type": "Text_excerpt",
                "value": "`python3 openszz_file_refactoring.py <oracle> <openszz-issue> <bic_open_bugfix_commits_issues_only.json>` \n",
                "original_header": "OpenSZZ post-processing script"
            },
            "confidence": 0.9472761170501736,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        }
    ],
    "invocation": [
        {
            "result": {
                "type": "Text_excerpt",
                "value": "To transform all these CSV files in a single JSON file compatible to `overlap.py` we create a small script `openszz_file_refactoring.py`. \n",
                "original_header": "OpenSZZ post-processing script"
            },
            "confidence": 0.9027887728783812,
            "technique": "supervised_classification",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        }
    ],
    "identifier": [
        {
            "result": {
                "type": "Url",
                "value": "https://doi.org/10.5281/zenodo.5876817"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        }
    ],
    "full_title": [
        {
            "result": {
                "type": "String",
                "value": "Replication package"
            },
            "confidence": 1,
            "technique": "regular_expression",
            "source": "https://raw.githubusercontent.com/grosa1/icse2021-szz-replication-package/master/README.md"
        }
    ]
}